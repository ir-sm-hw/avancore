<?php 

class Sample extends Sample_DomainBase {
    
    function getAppClassFile() {
        return __FILE__;
    }

    /**
     * @deperecated
     * @return Sample 
     */
    static function getInstance($id = null) {
        return Ac_Application::getApplicationInstance('Sample', $id);
    }

    /**
     * @return Sample 
     */
    static function i($id = null) {
        return Ac_Application::getApplicationInstance('Sample', $id);
    }
    
}
<?php 

abstract class Sample_DomainBase extends Ac_Application {

    protected function doOnInitialize() {
        parent::doOnInitialize();
    }


    protected function doGetMapperPrototypes() {
        return [
            'Sample_Person_Mapper' => [
                'class' => 'Sample_Person_Mapper',
            ],
            'Sample_Perk_Mapper' => [
                'class' => 'Sample_Perk_Mapper',
            ],
            'Sample_Person_Album_Mapper' => [
                'class' => 'Sample_Person_Album_Mapper',
            ],
            'Sample_Person_Photo_Mapper' => [
                'class' => 'Sample_Person_Photo_Mapper',
            ],
            'Sample_Person_Post_Mapper' => [
                'class' => 'Sample_Person_Post_Mapper',
            ],
            'Sample_Publish_ImplMapper' => [
                'class' => 'Sample_Publish_ImplMapper',
            ],
            'Sample_Relation_Type_Mapper' => [
                'class' => 'Sample_Relation_Type_Mapper',
            ],
            'Sample_Relation_Mapper' => [
                'class' => 'Sample_Relation_Mapper',
            ],
            'Sample_Religion_Mapper' => [
                'class' => 'Sample_Religion_Mapper',
            ],
            'Sample_Shop_Category_Mapper' => [
                'class' => 'Sample_Shop_Category_Mapper',
            ],
            'Sample_Shop_Classifier_Mapper' => [
                'class' => 'Sample_Shop_Classifier_Mapper',
            ],
            'Sample_Shop_Classifier_Type_Mapper' => [
                'class' => 'Sample_Shop_Classifier_Type_Mapper',
            ],
            'Sample_Shop_Product_Extra_Code_ImplMapper' => [
                'class' => 'Sample_Shop_Product_Extra_Code_ImplMapper',
            ],
            'Sample_Shop_Product_Note_ImplMapper' => [
                'class' => 'Sample_Shop_Product_Note_ImplMapper',
            ],
            'Sample_Shop_Product_Mapper' => [
                'class' => 'Sample_Shop_Product_Mapper',
            ],
            'Sample_Shop_Spec_Computer_ImplMapper' => [
                'class' => 'Sample_Shop_Spec_Computer_ImplMapper',
            ],
            'Sample_Shop_Spec_Food_ImplMapper' => [
                'class' => 'Sample_Shop_Spec_Food_ImplMapper',
            ],
            'Sample_Shop_Spec_Laptop_ImplMapper' => [
                'class' => 'Sample_Shop_Spec_Laptop_ImplMapper',
            ],
            'Sample_Shop_Spec_Monitor_ImplMapper' => [
                'class' => 'Sample_Shop_Spec_Monitor_ImplMapper',
            ],
            'Sample_Shop_Spec_Mapper' => [
                'class' => 'Sample_Shop_Spec_Mapper',
            ],
            'Sample_Tag_Mapper' => [
                'class' => 'Sample_Tag_Mapper',
            ],
            'Sample_Tree_Adjacent_Mapper' => [
                'class' => 'Sample_Tree_Adjacent_Mapper',
            ],
            'Sample_Tree_Combo_Mapper' => [
                'class' => 'Sample_Tree_Combo_Mapper',
            ],
            'Sample_Tree_Record_Mapper' => [
                'class' => 'Sample_Tree_Record_Mapper',
            ],
        ];
    }
    
    /**
     * @return Sample_Person_Mapper 
     */
    function getSamplePersonMapper() {
        return $this->getMapper('Sample_Person_Mapper');
    }
    
    /**
     * @return Sample_Perk_Mapper 
     */
    function getSamplePerkMapper() {
        return $this->getMapper('Sample_Perk_Mapper');
    }
    
    /**
     * @return Sample_Person_Album_Mapper 
     */
    function getSamplePersonAlbumMapper() {
        return $this->getMapper('Sample_Person_Album_Mapper');
    }
    
    /**
     * @return Sample_Person_Photo_Mapper 
     */
    function getSamplePersonPhotoMapper() {
        return $this->getMapper('Sample_Person_Photo_Mapper');
    }
    
    /**
     * @return Sample_Person_Post_Mapper 
     */
    function getSamplePersonPostMapper() {
        return $this->getMapper('Sample_Person_Post_Mapper');
    }
    
    /**
     * @return Sample_Publish_ImplMapper 
     */
    function getSamplePublishImplMapper() {
        return $this->getMapper('Sample_Publish_ImplMapper');
    }
    
    /**
     * @return Sample_Relation_Type_Mapper 
     */
    function getSampleRelationTypeMapper() {
        return $this->getMapper('Sample_Relation_Type_Mapper');
    }
    
    /**
     * @return Sample_Relation_Mapper 
     */
    function getSampleRelationMapper() {
        return $this->getMapper('Sample_Relation_Mapper');
    }
    
    /**
     * @return Sample_Religion_Mapper 
     */
    function getSampleReligionMapper() {
        return $this->getMapper('Sample_Religion_Mapper');
    }
    
    /**
     * @return Sample_Shop_Category_Mapper 
     */
    function getSampleShopCategoryMapper() {
        return $this->getMapper('Sample_Shop_Category_Mapper');
    }
    
    /**
     * @return Sample_Shop_Classifier_Mapper 
     */
    function getSampleShopClassifierMapper() {
        return $this->getMapper('Sample_Shop_Classifier_Mapper');
    }
    
    /**
     * @return Sample_Shop_Classifier_Type_Mapper 
     */
    function getSampleShopClassifierTypeMapper() {
        return $this->getMapper('Sample_Shop_Classifier_Type_Mapper');
    }
    
    /**
     * @return Sample_Shop_Product_Extra_Code_ImplMapper 
     */
    function getSampleShopProductExtraCodeImplMapper() {
        return $this->getMapper('Sample_Shop_Product_Extra_Code_ImplMapper');
    }
    
    /**
     * @return Sample_Shop_Product_Note_ImplMapper 
     */
    function getSampleShopProductNoteImplMapper() {
        return $this->getMapper('Sample_Shop_Product_Note_ImplMapper');
    }
    
    /**
     * @return Sample_Shop_Product_Mapper 
     */
    function getSampleShopProductMapper() {
        return $this->getMapper('Sample_Shop_Product_Mapper');
    }
    
    /**
     * @return Sample_Shop_Spec_Computer_ImplMapper 
     */
    function getSampleShopSpecComputerImplMapper() {
        return $this->getMapper('Sample_Shop_Spec_Computer_ImplMapper');
    }
    
    /**
     * @return Sample_Shop_Spec_Food_ImplMapper 
     */
    function getSampleShopSpecFoodImplMapper() {
        return $this->getMapper('Sample_Shop_Spec_Food_ImplMapper');
    }
    
    /**
     * @return Sample_Shop_Spec_Laptop_ImplMapper 
     */
    function getSampleShopSpecLaptopImplMapper() {
        return $this->getMapper('Sample_Shop_Spec_Laptop_ImplMapper');
    }
    
    /**
     * @return Sample_Shop_Spec_Monitor_ImplMapper 
     */
    function getSampleShopSpecMonitorImplMapper() {
        return $this->getMapper('Sample_Shop_Spec_Monitor_ImplMapper');
    }
    
    /**
     * @return Sample_Shop_Spec_Mapper 
     */
    function getSampleShopSpecMapper() {
        return $this->getMapper('Sample_Shop_Spec_Mapper');
    }
    
    /**
     * @return Sample_Tag_Mapper 
     */
    function getSampleTagMapper() {
        return $this->getMapper('Sample_Tag_Mapper');
    }
    
    /**
     * @return Sample_Tree_Adjacent_Mapper 
     */
    function getSampleTreeAdjacentMapper() {
        return $this->getMapper('Sample_Tree_Adjacent_Mapper');
    }
    
    /**
     * @return Sample_Tree_Combo_Mapper 
     */
    function getSampleTreeComboMapper() {
        return $this->getMapper('Sample_Tree_Combo_Mapper');
    }
    
    /**
     * @return Sample_Tree_Record_Mapper 
     */
    function getSampleTreeRecordMapper() {
        return $this->getMapper('Sample_Tree_Record_Mapper');
    }
    
 
    /**
     * @return Sample_Person 
     */
    static function Sample_Person ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Person 
     */
    function createSamplePerson () {
        return $this->getMapper('Sample_Person_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Perk 
     */
    static function Sample_Perk ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Perk 
     */
    function createSamplePerk () {
        return $this->getMapper('Sample_Perk_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Person_Album 
     */
    static function Sample_Person_Album ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Person_Album 
     */
    function createSamplePersonAlbum () {
        return $this->getMapper('Sample_Person_Album_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Person_Photo 
     */
    static function Sample_Person_Photo ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Person_Photo 
     */
    function createSamplePersonPhoto () {
        return $this->getMapper('Sample_Person_Photo_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Person_Post 
     */
    static function Sample_Person_Post ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Person_Post 
     */
    function createSamplePersonPost () {
        return $this->getMapper('Sample_Person_Post_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Publish 
     */
    static function Sample_Publish ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Publish 
     */
    function createSamplePublish () {
        return $this->getMapper('Sample_Publish_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Relation_Type 
     */
    static function Sample_Relation_Type ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Relation_Type 
     */
    function createSampleRelationType () {
        return $this->getMapper('Sample_Relation_Type_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Relation 
     */
    static function Sample_Relation ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Relation 
     */
    function createSampleRelation () {
        return $this->getMapper('Sample_Relation_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Religion 
     */
    static function Sample_Religion ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Religion 
     */
    function createSampleReligion () {
        return $this->getMapper('Sample_Religion_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Category 
     */
    static function Sample_Shop_Category ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Category 
     */
    function createSampleShopCategory () {
        return $this->getMapper('Sample_Shop_Category_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Classifier 
     */
    static function Sample_Shop_Classifier ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */
    function createSampleShopClassifier () {
        return $this->getMapper('Sample_Shop_Classifier_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Classifier_Type 
     */
    static function Sample_Shop_Classifier_Type ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Classifier_Type 
     */
    function createSampleShopClassifierType () {
        return $this->getMapper('Sample_Shop_Classifier_Type_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Product_Extra_Code 
     */
    static function Sample_Shop_Product_Extra_Code ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Product_Extra_Code 
     */
    function createSampleShopProductExtraCode () {
        return $this->getMapper('Sample_Shop_Product_Extra_Code_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Product_Note 
     */
    static function Sample_Shop_Product_Note ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Product_Note 
     */
    function createSampleShopProductNote () {
        return $this->getMapper('Sample_Shop_Product_Note_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Product 
     */
    static function Sample_Shop_Product ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function createSampleShopProduct () {
        return $this->getMapper('Sample_Shop_Product_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Spec_Computer 
     */
    static function Sample_Shop_Spec_Computer ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Spec_Computer 
     */
    function createSampleShopSpecComputer () {
        return $this->getMapper('Sample_Shop_Spec_Computer_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Spec_Food 
     */
    static function Sample_Shop_Spec_Food ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Spec_Food 
     */
    function createSampleShopSpecFood () {
        return $this->getMapper('Sample_Shop_Spec_Food_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Spec_Laptop 
     */
    static function Sample_Shop_Spec_Laptop ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Spec_Laptop 
     */
    function createSampleShopSpecLaptop () {
        return $this->getMapper('Sample_Shop_Spec_Laptop_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Spec_Monitor 
     */
    static function Sample_Shop_Spec_Monitor ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Spec_Monitor 
     */
    function createSampleShopSpecMonitor () {
        return $this->getMapper('Sample_Shop_Spec_Monitor_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Shop_Spec 
     */
    static function Sample_Shop_Spec ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Shop_Spec 
     */
    function createSampleShopSpec () {
        return $this->getMapper('Sample_Shop_Spec_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Tag 
     */
    static function Sample_Tag ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Tag 
     */
    function createSampleTag () {
        return $this->getMapper('Sample_Tag_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Tree_Adjacent 
     */
    static function Sample_Tree_Adjacent ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Tree_Adjacent 
     */
    function createSampleTreeAdjacent () {
        return $this->getMapper('Sample_Tree_Adjacent_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Tree_Combo 
     */
    static function Sample_Tree_Combo ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Tree_Combo 
     */
    function createSampleTreeCombo () {
        return $this->getMapper('Sample_Tree_Combo_Mapper')->createRecord();
    }
    
 
    /**
     * @return Sample_Tree_Record 
     */
    static function Sample_Tree_Record ($object = null) {
        return $object;
    }
    
    /**
     * @return Sample_Tree_Record 
     */
    function createSampleTreeRecord () {
        return $this->getMapper('Sample_Tree_Record_Mapper')->createRecord();
    }
    

}
{
    "__class": "Ac_Cg_Domain",
    "name": "Sample",
    "appName": "Sample",
    "appClass": false,
    "appBaseClass": "Ac_Application",
    "caption": "Avancore_Sample",
    "dbName": "avancore_test",
    "relationsToNonModels": false,
    "tablePrefix": "ac_",
    "replaceTablePrefixWith": "#__",
    "stripTablePrefixFromIds": true,
    "extraStripFromIds": false,
    "autoTables": [],
    "autoTablesAll": "\/^#__\/",
    "autoTablesIgnore": [
        "#__tree_nested_sets",
        "#__shop_product_upc",
        "#__shop_meta"
    ],
    "tableNamesArePlural": true,
    "subsystemPrefixes": [],
    "modelNames": [],
    "dontLinkSubsystems": [],
    "subsystemPrefixAppearsOnlyOnce": true,
    "tableNameFixes": [],
    "dontPrefixClassesWithAppName": false,
    "defaultTitlePropName": "title",
    "autoDetectTitles": true,
    "defaultPublishedPropName": "published",
    "defaultOrderingPropName": "ordering",
    "modelDefaults": {
        "generateMethodPlaceholders": true,
        "noUi": true,
        "hasUniformPropertiesInfo": true
    },
    "schemaExtras": [],
    "dictionary": {
        "__class": "Ac_Cg_Dictionary",
        "translations": [],
        "pluralForms": [],
        "singularForms": [],
        "fallbackToConstants": false,
        "constants": [],
        "alwaysUseConstants": true,
        "constantPrefix": "Sample",
        "defaultLanguage": "en",
        "useInflector": true
    },
    "useLangStrings": true,
    "ignoredColumnsInJunctionTables": {
        "#__shop_product_related": [
            "ignore"
        ]
    },
    "extraConfigByTables": [],
    "langStringPrefix": false,
    "tableLangStringPrefix": false,
    "addSubsystemsToMapperMethods": true,
    "overrideTypesUsingDocBlocks": true,
    "parentDomainName": false,
    "autoParentModels": true,
    "parentTableMap": [],
    "modelNameDecorator": [],
    "dontInheritProperties": [],
    "domainTemplates": false,
    "inspector": {
        "__class": "Ac_Sql_Dbi_Inspector_Canned",
        "tableData": {
            "avancore_test": {
                "ac_album_photos": {
                    "columns": {
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "albumId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "photoId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "photoId",
                                "2": "albumId",
                                "3": "personId"
                            }
                        },
                        "FK__ac_person_albums": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "albumId"
                            }
                        },
                        "FK__ac_person_photos": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "photoId"
                            }
                        }
                    },
                    "relations": {
                        "FK__ac_person_albums": {
                            "table": "ac_person_albums",
                            "columns": {
                                "personId": "personId",
                                "albumId": "albumId"
                            }
                        },
                        "FK__ac_person_photos": {
                            "table": "ac_person_photos",
                            "columns": {
                                "personId": "personId",
                                "photoId": "photoId"
                            }
                        }
                    }
                },
                "ac_cpk": {
                    "columns": {
                        "foo": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "bar": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "baz": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "foo",
                                "2": "bar"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_people": {
                    "columns": {
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": null
                        },
                        "gender": {
                            "type": "enum",
                            "enumValues": [
                                "F",
                                "M"
                            ],
                            "nullable": false,
                            "default": "F"
                        },
                        "isSingle": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 1
                        },
                        "birthDate": {
                            "type": "date",
                            "nullable": false,
                            "default": null
                        },
                        "lastUpdatedDatetime": {
                            "type": "datetime",
                            "nullable": true,
                            "default": null
                        },
                        "createdTs": {
                            "type": "timestamp",
                            "nullable": false,
                            "default": "CURRENT_TIMESTAMP"
                        },
                        "religionId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "portraitId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "personId"
                            }
                        },
                        "FK_ac_people_1": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "religionId"
                            }
                        },
                        "FK_ac_person_photos_ac_people_protrait": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "portraitId"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_person_photos_ac_people_portrait": {
                            "table": "ac_person_photos",
                            "columns": {
                                "personId": "personId",
                                "portraitId": "photoId"
                            }
                        },
                        "FK_ac_person_religion": {
                            "table": "ac_religion",
                            "columns": {
                                "religionId": "religionId"
                            }
                        }
                    }
                },
                "ac_people_tags": {
                    "columns": {
                        "idOfPerson": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "idOfTag": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "idOfPerson",
                                "2": "idOfTag"
                            }
                        },
                        "FK_ac_people_tags_2": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "idOfTag"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_people_tags_1": {
                            "table": "ac_people",
                            "columns": {
                                "idOfPerson": "personId"
                            }
                        },
                        "FK_ac_people_tags_2": {
                            "table": "ac_tags",
                            "columns": {
                                "idOfTag": "tagId"
                            }
                        }
                    }
                },
                "ac_perks": {
                    "columns": {
                        "perkId": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "perkId"
                            }
                        },
                        "uqName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "name"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_person_albums": {
                    "columns": {
                        "albumId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "albumName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": "''"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "albumId"
                            }
                        },
                        "FK__ac_people": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        }
                    },
                    "relations": {
                        "FK__ac_people": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        }
                    }
                },
                "ac_person_photos": {
                    "columns": {
                        "photoId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "filename": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "photoId"
                            }
                        },
                        "FK_ac_person_photos_ac_people": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_person_photos_ac_people": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        }
                    }
                },
                "ac_person_posts": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "photoId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": ""
                        },
                        "content": {
                            "type": "longtext",
                            "nullable": true,
                            "default": null
                        },
                        "pubId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubId"
                            }
                        },
                        "personId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        },
                        "FK__ac_post_photo": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "photoId"
                            }
                        }
                    },
                    "relations": {
                        "fkPostPublish": {
                            "table": "ac_publish",
                            "columns": {
                                "pubId": "id"
                            }
                        },
                        "FK__ac_post_person": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        },
                        "FK__ac_post_photo": {
                            "table": "ac_person_photos",
                            "columns": {
                                "personId": "personId",
                                "photoId": "photoId"
                            }
                        }
                    }
                },
                "ac_publish": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "sharedObjectType": {
                            "type": "varchar",
                            "width": "50",
                            "nullable": false,
                            "default": null
                        },
                        "published": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": true,
                            "default": 1
                        },
                        "deleted": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": true,
                            "default": 0
                        },
                        "publishUp": {
                            "type": "datetime",
                            "nullable": true,
                            "default": "0000-00-00 00:00:00"
                        },
                        "publishDown": {
                            "type": "datetime",
                            "nullable": true,
                            "default": "0000-00-00 00:00:00"
                        },
                        "authorId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "editorId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "pubChannelId": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "dateCreated": {
                            "type": "datetime",
                            "nullable": false,
                            "default": "0000-00-00 00:00:00"
                        },
                        "dateModified": {
                            "type": "datetime",
                            "nullable": false,
                            "default": "0000-00-00 00:00:00"
                        },
                        "dateDeleted": {
                            "type": "datetime",
                            "nullable": false,
                            "default": "0000-00-00 00:00:00"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubChannelId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubChannelId"
                            }
                        },
                        "sharedObjectType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "sharedObjectType"
                            }
                        },
                        "fkPubAuthor": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "authorId"
                            }
                        },
                        "fkPubEditor": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "editorId"
                            }
                        }
                    },
                    "relations": {
                        "fkPubAuthor": {
                            "table": "ac_people",
                            "columns": {
                                "authorId": "personId"
                            }
                        },
                        "fkPubEditor": {
                            "table": "ac_people",
                            "columns": {
                                "editorId": "personId"
                            }
                        }
                    }
                },
                "ac_relation_types": {
                    "columns": {
                        "relationTypeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "isSymmetrical": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "relationTypeId"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_relations": {
                    "columns": {
                        "relationId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "otherPersonId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "relationTypeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "relationBegin": {
                            "type": "datetime",
                            "nullable": true,
                            "default": null
                        },
                        "relationEnd": {
                            "type": "datetime",
                            "nullable": true,
                            "default": null
                        },
                        "notes": {
                            "type": "text",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "relationId"
                            }
                        },
                        "FK_ac_relations_3": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "relationTypeId"
                            }
                        },
                        "FK_ac_relations_outgoing": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        },
                        "FK_ac_relations_incoming": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "otherPersonId"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_relations_3": {
                            "table": "ac_relation_types",
                            "columns": {
                                "relationTypeId": "relationTypeId"
                            }
                        },
                        "FK_ac_relations_incoming": {
                            "table": "ac_people",
                            "columns": {
                                "otherPersonId": "personId"
                            }
                        },
                        "FK_ac_relations_outgoing": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        }
                    }
                },
                "ac_religion": {
                    "columns": {
                        "religionId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "religionId"
                            }
                        },
                        "Index_2": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "title"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_shop_categories": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "leftCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "rightCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "depth": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "metaId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "pubId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubId"
                            }
                        }
                    },
                    "relations": {
                        "fkCategoryPublish": {
                            "table": "ac_publish",
                            "columns": {
                                "pubId": "id"
                            }
                        }
                    }
                },
                "ac_shop_classifier": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "type": {
                            "type": "varchar",
                            "width": "16",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "type_title": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "type",
                                "2": "title"
                            }
                        }
                    },
                    "relations": {
                        "fkClassifierType": {
                            "table": "ac_shop_classifier_type",
                            "columns": {
                                "type": "type"
                            }
                        }
                    }
                },
                "ac_shop_classifier_type": {
                    "columns": {
                        "type": {
                            "type": "varchar",
                            "width": "16",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "type"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_shop_meta": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "pageTitle": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "metaDescription": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "metaKeywords": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "metaNoindex": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        },
                        "sharedObjectType": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": "other"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_shop_product_categories": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "categoryId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId",
                                "2": "categoryId"
                            }
                        },
                        "fkProductCategoryCategory": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        }
                    },
                    "relations": {
                        "fkProductCategoryCategory": {
                            "table": "ac_shop_categories",
                            "columns": {
                                "categoryId": "id"
                            }
                        },
                        "fkProductCategoryProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_shop_product_extraCodes": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ean": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "asin": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "gtin": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "responsiblePersonId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "fkExtraCodeResponsiblePerson": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "responsiblePersonId"
                            }
                        }
                    },
                    "relations": {
                        "fkExtraCodeProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        },
                        "fkExtraCodeResponsiblePerson": {
                            "table": "ac_people",
                            "columns": {
                                "responsiblePersonId": "personId"
                            }
                        }
                    }
                },
                "ac_shop_product_notes": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "note": {
                            "type": "text",
                            "nullable": false,
                            "default": null
                        },
                        "noteAuthorId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "fkProductNoteAuthor": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "noteAuthorId"
                            }
                        }
                    },
                    "relations": {
                        "fkProductNoteAuthor": {
                            "table": "ac_people",
                            "columns": {
                                "noteAuthorId": "personId"
                            }
                        },
                        "fkProductNoteProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_shop_product_related": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "relatedProductId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId",
                                "2": "relatedProductId"
                            }
                        },
                        "ignore": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ignore"
                            }
                        },
                        "relatedProductReferencing": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "relatedProductId"
                            }
                        }
                    },
                    "relations": {
                        "relatedProductReferenced": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        },
                        "relatedProductReferencing": {
                            "table": "ac_shop_products",
                            "columns": {
                                "relatedProductId": "id"
                            }
                        }
                    }
                },
                "ac_shop_product_upc": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "upcCode": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fk_ac_product_upc_1": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_shop_products": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "sku": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "metaId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "pubId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubId"
                            }
                        }
                    },
                    "relations": {
                        "fkPersonPublish": {
                            "table": "ac_publish",
                            "columns": {
                                "pubId": "id"
                            }
                        }
                    }
                },
                "ac_shop_spec_computer": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "hdd": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ram": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "os": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fkSpecsComputer": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_spec_food": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "storageType": {
                            "type": "enum",
                            "enumValues": [
                                "shelfStable",
                                "frozen",
                                "refrigerated"
                            ],
                            "nullable": true,
                            "default": "shelfStable"
                        },
                        "storageTerm": {
                            "type": "int",
                            "unsigned": true,
                            "width": "3",
                            "nullable": false,
                            "default": 0
                        },
                        "storageTermUnit": {
                            "type": "enum",
                            "enumValues": [
                                "days",
                                "months",
                                "years"
                            ],
                            "nullable": false,
                            "default": "days"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fkSpecsFood": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_spec_laptop": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "weight": {
                            "type": "decimal",
                            "unsigned": true,
                            "width": "3",
                            "decimals": "1",
                            "nullable": false,
                            "default": null
                        },
                        "battery": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fkSpecLaptopProduct": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_spec_monitor": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "diagonal": {
                            "type": "decimal",
                            "unsigned": true,
                            "width": "4",
                            "decimals": "1",
                            "nullable": false,
                            "default": null
                        },
                        "hRes": {
                            "type": "int",
                            "unsigned": true,
                            "width": "5",
                            "nullable": false,
                            "default": null
                        },
                        "vRes": {
                            "type": "int",
                            "unsigned": true,
                            "width": "5",
                            "nullable": false,
                            "default": null
                        },
                        "matrixTypeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "fkMonitorMatrixType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "matrixTypeId"
                            }
                        }
                    },
                    "relations": {
                        "fkMonitorMatrixType": {
                            "table": "ac_shop_classifier",
                            "columns": {
                                "matrixTypeId": "id"
                            }
                        },
                        "fkMonitorSpec": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_specs": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "detailsUrl": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "specsType": {
                            "type": "varchar",
                            "width": "40",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "specsType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "specsType"
                            }
                        }
                    },
                    "relations": {
                        "specsProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_tag_perks": {
                    "columns": {
                        "idOfTag": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "idOfPerk": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "idOfTag",
                                "2": "idOfPerk"
                            }
                        },
                        "fkTagId_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "idOfTag"
                            }
                        },
                        "fkPerkId_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "idOfPerk"
                            }
                        }
                    },
                    "relations": {
                        "fkPerkId": {
                            "table": "ac_perks",
                            "columns": {
                                "idOfPerk": "perkId"
                            }
                        },
                        "fkTagId": {
                            "table": "ac_tags",
                            "columns": {
                                "idOfTag": "tagId"
                            }
                        }
                    }
                },
                "ac_tags": {
                    "columns": {
                        "tagId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "titleM": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "titleF": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "tagId"
                            }
                        },
                        "Index_2": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "title"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_adjacent": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "tag": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "index_4": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "index_5": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ordering"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_combos": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "leftCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "rightCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 1
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "tag": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        },
                        "depth": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "index_2": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "leftCol"
                            }
                        },
                        "index_3": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "rightCol"
                            }
                        },
                        "index_4": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "index_5": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ordering"
                            }
                        },
                        "index_6": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ignore"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_nested_sets": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "treeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "leftCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "rightCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 1
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "comment": {
                            "type": "varchar",
                            "width": "40",
                            "nullable": false,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        },
                        "depth": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id",
                                "2": "treeId"
                            }
                        },
                        "index_2": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "leftCol"
                            }
                        },
                        "index_3": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "rightCol"
                            }
                        },
                        "index_4": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "index_5": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ordering"
                            }
                        },
                        "index_6": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ignore"
                            }
                        },
                        "index_7": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "index_8": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "treeId"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_records": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "tag": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_template": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "importId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "lineNo": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_aipk": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "content": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_aipk_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "importId": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": 1
                        },
                        "itemId": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "content": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "otherContent": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "isDraft": {
                            "type": "int",
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_aipk_linked": {
                    "columns": {
                        "masterId": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "otherContent": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "masterId"
                            }
                        },
                        "name_UNIQUE": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_categories": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxTitle": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        },
                        "fk_im_test_categories_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        }
                    },
                    "relations": {
                        "fk_im_test_categories_1": {
                            "table": "im_test_categories",
                            "columns": {
                                "parentId": "id"
                            }
                        }
                    }
                },
                "im_test_categories_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "categoryId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "categoryName": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "description": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "parentId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "parentName": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryName"
                            }
                        },
                        "idxItemId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        },
                        "idxTypeId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "idxType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentName"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_classifiers_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "classifierId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "description": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "classifierType": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "title"
                            }
                        },
                        "idxItemId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "classifierId"
                            }
                        },
                        "idxType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "classifierType"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_item_categories": {
                    "columns": {
                        "itemId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "categoryId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "itemId",
                                "2": "categoryId"
                            }
                        },
                        "fk_im_test_item_categories_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        },
                        "fk_im_test_item_categories_1_idx1": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "itemId"
                            }
                        }
                    },
                    "relations": {
                        "categoryId": {
                            "table": "im_test_categories",
                            "columns": {
                                "categoryId": "id"
                            }
                        },
                        "itemId": {
                            "table": "im_test_items",
                            "columns": {
                                "itemId": "id"
                            }
                        }
                    }
                },
                "im_test_item_categories_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "categoryId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "categoryName": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "lineNo": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        },
                        "idxLineNo": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "lineNo"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_items": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "description": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "imageFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "thumbFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "typeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        },
                        "fk_im_test_items_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "typeId"
                            }
                        }
                    },
                    "relations": {
                        "fk_im_test_items_1": {
                            "table": "im_test_types",
                            "columns": {
                                "typeId": "id"
                            }
                        }
                    }
                },
                "im_test_items_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "itemId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "description": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "typeId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "type": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "relatedText1": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "pictureUrl": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "lineNo": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "name"
                            }
                        },
                        "idxItemId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "itemId"
                            }
                        },
                        "idxTypeId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "typeId"
                            }
                        },
                        "idxType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "type"
                            }
                        },
                        "idxLineNo": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "lineNo"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        },
                        "idxPictureUrl": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "pictureUrl"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_pictures_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "pictureUrl": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "pictureFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "thumbFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        },
                        "idxPictureUrl": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "pictureUrl"
                            }
                        },
                        "idxPictureFileName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "pictureFileName"
                            }
                        },
                        "idxThumbFileName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "thumbFileName"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_related": {
                    "columns": {
                        "itemId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "relatedText1": {
                            "type": "mediumtext",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "itemId"
                            }
                        },
                        "fk_im_test_related_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "itemId"
                            }
                        }
                    },
                    "relations": {
                        "fk_im_test_related_1": {
                            "table": "im_test_items",
                            "columns": {
                                "itemId": "id"
                            }
                        }
                    }
                },
                "im_test_source_of_copy": {
                    "columns": {
                        "id": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "description": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "thisWillBeRelatedText": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "somethingElse": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_types": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxTitle": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        }
                    },
                    "relations": []
                }
            }
        },
        "defaultDatabaseName": "avancore_test"
    },
    "_models": {
        "people": {
            "__class": "Ac_Cg_Model",
            "name": "people",
            "table": "#__people",
            "subsystemPrefixes": [],
            "single": "person",
            "plural": "people",
            "className": "Sample_Person",
            "singleCaption": "People",
            "pluralCaption": "People",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": {
                "_rel_FK_ac_relations_outgoing": {
                    "otherModelIdInMethodsSingle": "outgoingRelation",
                    "otherModelIdInMethodsPlural": "outgoingRelations"
                },
                "_rel_FK_ac_relations_incoming": {
                    "otherModelIdInMethodsSingle": "incomingRelation",
                    "otherModelIdInMethodsPlural": "incomingRelations"
                }
            },
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "lastUpdatedDatetime",
                "religionId",
                "portraitId"
            ],
            "mapperVars": [],
            "titleProp": "name",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_person_photos_ac_people_portrait": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_person_photos_ac_people_portrait",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Photo",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "portrait",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_person_photos_ac_people_portrait",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people_portrait",
                    "caption": "Person photo",
                    "varName": "portraitPersonPhoto",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ]
                },
                "_rel_FK_ac_person_religion": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_person_religion",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Religion",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Religion_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_person_religion",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_religion",
                    "caption": "Religion",
                    "varName": "religion",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "religion",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_religion"
                    ]
                },
                "_rel_FK_ac_people_tags_1": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ],
                    "otherRelation": "FK_ac_people_tags_2",
                    "isOtherIncoming": false,
                    "className": "Sample_Tag",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Tag_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people_tags",
                            "FK_ac_people_tags_1"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK_ac_people_tags_2",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_people_tags_1",
                    "caption": "Tags",
                    "varName": "tags",
                    "pluralForList": "tags",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "tags",
                    "_rel": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ],
                    "_otherRel": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ]
                },
                "_rel_FK__ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_albums",
                        "FK__ac_people"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Album",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Album_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_albums",
                            "FK__ac_people"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_people",
                    "caption": "Person albums",
                    "varName": "personAlbums",
                    "pluralForList": "personAlbums",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personAlbums",
                    "_rel": [
                        "#__person_albums",
                        "FK__ac_people"
                    ]
                },
                "_rel_FK_ac_person_photos_ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Photo",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_photos",
                            "FK_ac_person_photos_ac_people"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people",
                    "caption": "Person photos",
                    "varName": "personPhotos",
                    "pluralForList": "personPhotos",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ]
                },
                "_rel_FK__ac_post_person": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Post",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Post_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_posts",
                            "FK__ac_post_person"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_person",
                    "caption": "Person posts",
                    "varName": "personPosts",
                    "pluralForList": "personPosts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personPosts",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ]
                },
                "_rel_fkPubAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__publish",
                        "fkPubAuthor"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "author",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__publish",
                            "fkPubAuthor"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPubAuthor",
                    "caption": "Publish",
                    "varName": "authorPublish",
                    "pluralForList": "authorPublish",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "publish",
                    "_rel": [
                        "#__publish",
                        "fkPubAuthor"
                    ]
                },
                "_rel_fkPubEditor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__publish",
                        "fkPubEditor"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "editor",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__publish",
                            "fkPubEditor"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPubEditor",
                    "caption": "Publish",
                    "varName": "editorPublish",
                    "pluralForList": "editorPublish",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "publish",
                    "_rel": [
                        "#__publish",
                        "fkPubEditor"
                    ]
                },
                "_rel_FK_ac_relations_incoming": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Relation",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": "incomingRelation",
                    "otherModelIdInMethodsPlural": "incomingRelations",
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Relation_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__relations",
                            "FK_ac_relations_incoming"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_incoming",
                    "caption": "Relations",
                    "varName": "incomingRelations",
                    "pluralForList": "incomingRelations",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "relations",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ]
                },
                "_rel_FK_ac_relations_outgoing": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Relation",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": "outgoingRelation",
                    "otherModelIdInMethodsPlural": "outgoingRelations",
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Relation_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__relations",
                            "FK_ac_relations_outgoing"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_outgoing",
                    "caption": "Relations",
                    "varName": "outgoingRelations",
                    "pluralForList": "outgoingRelations",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "relations",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ]
                },
                "_rel_fkExtraCodeResponsiblePerson": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "extraCode",
                    "canLoadSrc": true,
                    "canLoadDest": false,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_extraCodes",
                            "fkExtraCodeResponsiblePerson"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkExtraCodeResponsiblePerson",
                    "caption": "Shop products",
                    "varName": "extraCodeShopProducts",
                    "pluralForList": "extraCodeShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ]
                },
                "_rel_fkProductNoteAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "note",
                    "canLoadSrc": true,
                    "canLoadDest": false,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_notes",
                            "fkProductNoteAuthor"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductNoteAuthor",
                    "caption": "Shop products",
                    "varName": "noteShopProducts",
                    "pluralForList": "noteShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "personId"
                    ]
                },
                "name": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "name",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "name",
                    "caption": "Name",
                    "varName": "name",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "name"
                    ]
                },
                "gender": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "gender",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": false,
                    "valueList": {
                        "F": "F",
                        "M": "M"
                    },
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "F",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "gender",
                    "caption": "Gender",
                    "varName": "gender",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "gender"
                    ]
                },
                "isSingle": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "isSingle",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 1,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "isSingle",
                    "caption": "Is Single",
                    "varName": "isSingle",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "isSingle"
                    ]
                },
                "birthDate": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "birthDate",
                    "dataType": "date",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "birthDate",
                    "caption": "Birth Date",
                    "varName": "birthDate",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d",
                        "outputDateFormat": "Y-m-d"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "birthDate"
                    ]
                },
                "lastUpdatedDatetime": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "lastUpdatedDatetime",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "lastUpdatedDatetime",
                    "caption": "Last Updated Datetime",
                    "varName": "lastUpdatedDatetime",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "lastUpdatedDatetime"
                    ]
                },
                "createdTs": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "createdTs",
                    "dataType": "timestamp",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": false,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "createdTs",
                    "caption": "Created Ts",
                    "varName": "createdTs",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "createdTs"
                    ]
                },
                "religionId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "religionId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Religion_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "religionId",
                    "caption": "Religion Id",
                    "varName": "religionId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "religionId"
                    ]
                },
                "portraitId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "portraitId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Photo_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "portraitId",
                    "caption": "Portrait Id",
                    "varName": "portraitId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "portraitId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_person_photos_ac_people_portrait",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_person_religion",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK_ac_people_tags_2",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_albums",
                        "FK__ac_people"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__publish",
                        "fkPubAuthor"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__publish",
                        "fkPubEditor"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "perks": {
            "__class": "Ac_Cg_Model",
            "name": "perks",
            "table": "#__perks",
            "subsystemPrefixes": [],
            "single": "perk",
            "plural": "perks",
            "className": "Sample_Perk",
            "singleCaption": "Perk",
            "pluralCaption": "Perks",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "name"
            ],
            "mapperVars": [],
            "titleProp": "name",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkPerkId": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__tag_perks",
                        "fkPerkId"
                    ],
                    "otherRelation": "fkTagId",
                    "isOtherIncoming": false,
                    "className": "Sample_Tag",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Tag_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__tag_perks",
                            "fkPerkId"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkTagId",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPerkId",
                    "caption": "Tags",
                    "varName": "tags",
                    "pluralForList": "tags",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "tags",
                    "_rel": [
                        "#__tag_perks",
                        "fkPerkId"
                    ],
                    "_otherRel": [
                        "#__tag_perks",
                        "fkTagId"
                    ]
                },
                "perkId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "perkId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "perkId",
                    "caption": "Perk Id",
                    "varName": "perkId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__perks",
                        "perkId"
                    ]
                },
                "name": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "name",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "name",
                    "caption": "Name",
                    "varName": "name",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__perks",
                        "name"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__tag_perks",
                        "fkPerkId"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkTagId",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "personAlbums": {
            "__class": "Ac_Cg_Model",
            "name": "personAlbums",
            "table": "#__person_albums",
            "subsystemPrefixes": [],
            "single": "personAlbum",
            "plural": "personAlbums",
            "className": "Sample_Person_Album",
            "singleCaption": "Person album",
            "pluralCaption": "Person albums",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "albumName",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK__ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK__ac_people",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK__ac_people",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_people",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__person_albums",
                        "FK__ac_people"
                    ]
                },
                "_rel_FK__ac_person_albums": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ],
                    "otherRelation": "FK__ac_person_photos",
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Photo",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__album_photos",
                            "FK__ac_person_albums"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK__ac_person_photos",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_person_albums",
                    "caption": "Person photos",
                    "varName": "personPhotos",
                    "pluralForList": "personPhotos",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ],
                    "_otherRel": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ]
                },
                "albumId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "albumId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "albumId",
                    "caption": "Album Id",
                    "varName": "albumId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_albums",
                        "albumId"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_albums",
                        "personId"
                    ]
                },
                "albumName": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "albumName",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "''",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "albumName",
                    "caption": "Album Name",
                    "varName": "albumName",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_albums",
                        "albumName"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK__ac_people",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK__ac_person_photos",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "personPhotos": {
            "__class": "Ac_Cg_Model",
            "name": "personPhotos",
            "table": "#__person_photos",
            "subsystemPrefixes": [],
            "single": "personPhoto",
            "plural": "personPhotos",
            "className": "Sample_Person_Photo",
            "singleCaption": "Person photo",
            "pluralCaption": "Person photos",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "filename",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_person_photos_ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_person_photos_ac_people",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_person_photos_ac_people",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ]
                },
                "_rel_FK__ac_person_photos": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ],
                    "otherRelation": "FK__ac_person_albums",
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Album",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Album_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__album_photos",
                            "FK__ac_person_photos"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK__ac_person_albums",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_person_photos",
                    "caption": "Person albums",
                    "varName": "personAlbums",
                    "pluralForList": "personAlbums",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personAlbums",
                    "_rel": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ],
                    "_otherRel": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ]
                },
                "_rel_FK_ac_person_photos_ac_people_portrait": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "portrait",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people",
                            "FK_ac_person_photos_ac_people_portrait"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people_portrait",
                    "caption": "People",
                    "varName": "portraitPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ]
                },
                "_rel_FK__ac_post_photo": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Post",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Post_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_posts",
                            "FK__ac_post_photo"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_photo",
                    "caption": "Person posts",
                    "varName": "personPosts",
                    "pluralForList": "personPosts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personPosts",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ]
                },
                "photoId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "photoId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "photoId",
                    "caption": "Photo Id",
                    "varName": "photoId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_photos",
                        "photoId"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_photos",
                        "personId"
                    ]
                },
                "filename": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "filename",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "filename",
                    "caption": "Filename",
                    "varName": "filename",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_photos",
                        "filename"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_person_photos_ac_people",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK__ac_person_albums",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "personPosts": {
            "__class": "Ac_Cg_Model",
            "name": "personPosts",
            "table": "#__person_posts",
            "subsystemPrefixes": [],
            "single": "personPost",
            "plural": "personPosts",
            "className": "Sample_Person_Post",
            "singleCaption": "Person post",
            "pluralCaption": "Person posts",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "personId",
                "photoId",
                "title",
                "content",
                "pubId"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "publish": {
                    "class": "Sample_Publish_MapperMixable",
                    "colMap": {
                        "id": "pubId"
                    }
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkPostPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPostPublish",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPostPublish",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPostPublish",
                    "caption": "Publish",
                    "varName": "publish",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "publish",
                    "_rel": [
                        "#__person_posts",
                        "fkPostPublish"
                    ]
                },
                "_rel_FK__ac_post_person": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK__ac_post_person",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK__ac_post_person",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_person",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ]
                },
                "_rel_FK__ac_post_photo": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK__ac_post_photo",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Photo",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK__ac_post_photo",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_photo",
                    "caption": "Person photo",
                    "varName": "personPhoto",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "id"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "personId"
                    ]
                },
                "photoId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "photoId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Photo_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "photoId",
                    "caption": "Photo Id",
                    "varName": "photoId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "photoId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "title"
                    ]
                },
                "content": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "content",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "content",
                    "caption": "Content",
                    "varName": "content",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "content"
                    ]
                },
                "pubId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Publish_ImplMapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubId",
                    "caption": "Pub Id",
                    "varName": "pubId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "pubId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPostPublish",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK__ac_post_person",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK__ac_post_photo",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "publish": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkPersonPublish",
                "fkCategoryPublish",
                "fkPostPublish"
            ],
            "skipMapperMixables": [],
            "masterProperties": {
                "fkPersonPublish": "_rel_fkPersonPublish",
                "fkCategoryPublish": "_rel_fkCategoryPublish",
                "fkPostPublish": "_rel_fkPostPublish"
            },
            "isReferenced": true,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_authorPerson": {
                    "srcMapperClass": "Sample_Publish_ImplMapper",
                    "destMapperClass": "Sample_Person_Mapper",
                    "srcVarName": "_authorPerson",
                    "destVarName": "_authorPublish",
                    "destCountVarName": "_authorPublishCount",
                    "destLoadedVarName": "_authorPublishLoaded",
                    "fieldLinks": {
                        "authorId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                },
                "_editorPerson": {
                    "srcMapperClass": "Sample_Publish_ImplMapper",
                    "destMapperClass": "Sample_Person_Mapper",
                    "srcVarName": "_editorPerson",
                    "destVarName": "_editorPublish",
                    "destCountVarName": "_editorPublishCount",
                    "destLoadedVarName": "_editorPublishLoaded",
                    "fieldLinks": {
                        "editorId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "authorPerson": {
                    "relationId": "_authorPerson",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "authorPerson",
                    "plural": "authorPeople",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadAuthorPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfAuthorPeople",
                    "createDestObjectMethod": "createAuthorPerson",
                    "getDestObjectMethod": "getAuthorPerson",
                    "setDestObjectMethod": "setAuthorPerson",
                    "clearDestObjectMethod": "clearAuthorPerson"
                },
                "editorPerson": {
                    "relationId": "_editorPerson",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "editorPerson",
                    "plural": "editorPeople",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadEditorPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfEditorPeople",
                    "createDestObjectMethod": "createEditorPerson",
                    "getDestObjectMethod": "getEditorPerson",
                    "setDestObjectMethod": "setEditorPerson",
                    "clearDestObjectMethod": "clearEditorPerson"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": {
                "shopProducts": {
                    "fieldNames": {
                        "sharedObjectType": false
                    }
                }
            },
            "objectTypeField": "sharedObjectType",
            "inline": false,
            "name": "publish",
            "table": "#__publish",
            "subsystemPrefixes": [],
            "single": "publish",
            "plural": "publish",
            "className": "Sample_Publish",
            "singleCaption": "Publish",
            "pluralCaption": "Publish",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "published",
                "deleted",
                "publishUp",
                "publishDown",
                "authorId",
                "editorId",
                "pubChannelId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": "pubChannelId",
            "publishedProp": "published",
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__publish",
                    "objectTypeField": "sharedObjectType"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkPubAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPubAuthor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "author",
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPubAuthor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPubAuthor",
                    "caption": "People",
                    "varName": "authorPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__publish",
                        "fkPubAuthor"
                    ]
                },
                "_rel_fkPubEditor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPubEditor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "editor",
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPubEditor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPubEditor",
                    "caption": "People",
                    "varName": "editorPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__publish",
                        "fkPubEditor"
                    ]
                },
                "_rel_fkPostPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_posts",
                        "fkPostPublish"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person_Post",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Post_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_posts",
                            "fkPostPublish"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPostPublish",
                    "caption": "Person post",
                    "varName": "personPost",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "personPosts",
                    "_rel": [
                        "#__person_posts",
                        "fkPostPublish"
                    ]
                },
                "_rel_fkCategoryPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Category",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Category_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_categories",
                            "fkCategoryPublish"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkCategoryPublish",
                    "caption": "Shop category",
                    "varName": "shopCategory",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopCategories",
                    "_rel": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ]
                },
                "_rel_fkPersonPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_products",
                            "fkPersonPublish"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPersonPublish",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "id"
                    ]
                },
                "sharedObjectType": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "sharedObjectType",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "50",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "sharedObjectType",
                    "caption": "Shared Object Type",
                    "varName": "sharedObjectType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "sharedObjectType"
                    ]
                },
                "published": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "published",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 1,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "published",
                    "caption": "Published",
                    "varName": "published",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "published"
                    ]
                },
                "deleted": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "deleted",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "deleted",
                    "caption": "Deleted",
                    "varName": "deleted",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "deleted"
                    ]
                },
                "publishUp": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "publishUp",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "publishUp",
                    "caption": "Publish Up",
                    "varName": "publishUp",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "publishUp"
                    ]
                },
                "publishDown": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "publishDown",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "publishDown",
                    "caption": "Publish Down",
                    "varName": "publishDown",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "publishDown"
                    ]
                },
                "authorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "authorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "authorId",
                    "caption": "Author Id",
                    "varName": "authorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "authorId"
                    ]
                },
                "editorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "editorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "editorId",
                    "caption": "Editor Id",
                    "varName": "editorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "editorId"
                    ]
                },
                "pubChannelId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubChannelId",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubChannelId",
                    "caption": "Pub Channel Id",
                    "varName": "pubChannelId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "pubChannelId"
                    ]
                },
                "dateCreated": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "dateCreated",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "dateCreated",
                    "caption": "Date Created",
                    "varName": "dateCreated",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "dateCreated"
                    ]
                },
                "dateModified": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "dateModified",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "dateModified",
                    "caption": "Date Modified",
                    "varName": "dateModified",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "dateModified"
                    ]
                },
                "dateDeleted": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "dateDeleted",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "dateDeleted",
                    "caption": "Date Deleted",
                    "varName": "dateDeleted",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "dateDeleted"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPubAuthor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPubEditor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_posts",
                        "fkPostPublish"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "relationTypes": {
            "__class": "Ac_Cg_Model",
            "name": "relationTypes",
            "table": "#__relation_types",
            "subsystemPrefixes": [],
            "single": "relationType",
            "plural": "relationTypes",
            "className": "Sample_Relation_Type",
            "singleCaption": "Relation type",
            "pluralCaption": "Relation types",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_relations_3": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Relation",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Relation_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__relations",
                            "FK_ac_relations_3"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_3",
                    "caption": "Relations",
                    "varName": "relations",
                    "pluralForList": "relations",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "relations",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ]
                },
                "relationTypeId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationTypeId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationTypeId",
                    "caption": "Relation Type Id",
                    "varName": "relationTypeId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relation_types",
                        "relationTypeId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relation_types",
                        "title"
                    ]
                },
                "isSymmetrical": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "isSymmetrical",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "isSymmetrical",
                    "caption": "Is Symmetrical",
                    "varName": "isSymmetrical",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relation_types",
                        "isSymmetrical"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "relations": {
            "__class": "Ac_Cg_Model",
            "name": "relations",
            "table": "#__relations",
            "subsystemPrefixes": [],
            "single": "relation",
            "plural": "relations",
            "className": "Sample_Relation",
            "singleCaption": "Relation",
            "pluralCaption": "Relations",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": {
                "_rel_FK_ac_relations_outgoing": {
                    "otherModelIdInMethodsSingle": "person",
                    "otherModelIdInMethodsPlural": "people"
                },
                "_rel_FK_ac_relations_incoming": {
                    "otherModelIdInMethodsSingle": "otherPerson",
                    "otherModelIdInMethodsPlural": "otherPeople"
                }
            },
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "relationBegin",
                "relationEnd"
            ],
            "mapperVars": [],
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_relations_3": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_relations_3",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Relation_Type",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Relation_Type_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_relations_3",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_3",
                    "caption": "Relation type",
                    "varName": "relationType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "relationTypes",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ]
                },
                "_rel_FK_ac_relations_incoming": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_relations_incoming",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": "otherPerson",
                    "otherModelIdInMethodsPlural": "otherPeople",
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_relations_incoming",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_incoming",
                    "caption": "People",
                    "varName": "otherPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ]
                },
                "_rel_FK_ac_relations_outgoing": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_relations_outgoing",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": "person",
                    "otherModelIdInMethodsPlural": "people",
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_relations_outgoing",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_outgoing",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ]
                },
                "relationId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationId",
                    "caption": "Relation Id",
                    "varName": "relationId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationId"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "personId"
                    ]
                },
                "otherPersonId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "otherPersonId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "otherPersonId",
                    "caption": "Other Person Id",
                    "varName": "otherPersonId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "otherPersonId"
                    ]
                },
                "relationTypeId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationTypeId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Relation_Type_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationTypeId",
                    "caption": "Relation Type Id",
                    "varName": "relationTypeId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationTypeId"
                    ]
                },
                "relationBegin": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationBegin",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationBegin",
                    "caption": "Relation Begin",
                    "varName": "relationBegin",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationBegin"
                    ]
                },
                "relationEnd": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationEnd",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationEnd",
                    "caption": "Relation End",
                    "varName": "relationEnd",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationEnd"
                    ]
                },
                "notes": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "notes",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "notes",
                    "caption": "Notes",
                    "varName": "notes",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "notes"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_relations_3",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_relations_incoming",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_relations_outgoing",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "religion": {
            "__class": "Ac_Cg_Model",
            "name": "religion",
            "table": "#__religion",
            "subsystemPrefixes": [],
            "single": "religion",
            "plural": "religion",
            "className": "Sample_Religion",
            "singleCaption": "Religion",
            "pluralCaption": "Religion",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_person_religion": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people",
                        "FK_ac_person_religion"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people",
                            "FK_ac_person_religion"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_religion",
                    "caption": "People",
                    "varName": "people",
                    "pluralForList": "people",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_religion"
                    ]
                },
                "religionId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "religionId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "religionId",
                    "caption": "Religion Id",
                    "varName": "religionId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__religion",
                        "religionId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__religion",
                        "title"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people",
                        "FK_ac_person_religion"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopCategories": {
            "__class": "Ac_Cg_Model",
            "name": "shopCategories",
            "table": "#__shop_categories",
            "subsystemPrefixes": [],
            "single": "shopCategory",
            "plural": "shopCategories",
            "className": "Sample_Shop_Category",
            "singleCaption": "Shop category",
            "pluralCaption": "Shop categories",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "title",
                "parentId",
                "metaId",
                "pubId"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": "ordering",
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "publish": {
                    "class": "Sample_Publish_MapperMixable",
                    "colMap": {
                        "id": "pubId"
                    }
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkCategoryPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkCategoryPublish",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkCategoryPublish",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkCategoryPublish",
                    "caption": "Publish",
                    "varName": "publish",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "publish",
                    "_rel": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ]
                },
                "_rel_fkProductCategoryCategory": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ],
                    "otherRelation": "fkProductCategoryProduct",
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_categories",
                            "fkProductCategoryCategory"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkProductCategoryProduct",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductCategoryCategory",
                    "caption": "Shop products",
                    "varName": "shopProducts",
                    "pluralForList": "shopProducts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ],
                    "_otherRel": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "id"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "title"
                    ]
                },
                "leftCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "leftCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "leftCol",
                    "caption": "Left Col",
                    "varName": "leftCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "leftCol"
                    ]
                },
                "rightCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "rightCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "rightCol",
                    "caption": "Right Col",
                    "varName": "rightCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "rightCol"
                    ]
                },
                "ignore": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ignore",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ignore",
                    "caption": "Ignore",
                    "varName": "ignore",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "ignore"
                    ]
                },
                "parentId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "parentId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "parentId",
                    "caption": "Parent Id",
                    "varName": "parentId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "parentId"
                    ]
                },
                "ordering": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ordering",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ordering",
                    "caption": "Ordering",
                    "varName": "ordering",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "ordering"
                    ]
                },
                "depth": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "depth",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "depth",
                    "caption": "Depth",
                    "varName": "depth",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "depth"
                    ]
                },
                "metaId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "metaId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "metaId",
                    "caption": "Meta Id",
                    "varName": "metaId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "metaId"
                    ]
                },
                "pubId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Publish_ImplMapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubId",
                    "caption": "Pub Id",
                    "varName": "pubId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "pubId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkCategoryPublish",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkProductCategoryProduct",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopClassifier": {
            "__class": "Ac_Cg_Model",
            "name": "shopClassifier",
            "table": "#__shop_classifier",
            "subsystemPrefixes": [],
            "single": "shopClassifier",
            "plural": "shopClassifier",
            "className": "Sample_Shop_Classifier",
            "singleCaption": "Shop classifier",
            "pluralCaption": "Shop classifier",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkClassifierType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkClassifierType",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Classifier_Type",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Classifier_Type_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkClassifierType",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkClassifierType",
                    "caption": "Shop classifier type",
                    "varName": "shopClassifierType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopClassifierType",
                    "_rel": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ]
                },
                "_rel_fkMonitorMatrixType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "monitor",
                    "canLoadSrc": true,
                    "canLoadDest": false,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_monitor",
                            "fkMonitorMatrixType"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkMonitorMatrixType",
                    "caption": "Shop specs",
                    "varName": "monitorShopSpecs",
                    "pluralForList": "monitorShopSpecs",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier",
                        "id"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier",
                        "title"
                    ]
                },
                "type": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "type",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": "16",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Classifier_Type_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "type",
                    "caption": "Type",
                    "varName": "type",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier",
                        "type"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkClassifierType",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopClassifierType": {
            "__class": "Ac_Cg_Model",
            "name": "shopClassifierType",
            "table": "#__shop_classifier_type",
            "subsystemPrefixes": [],
            "single": "shopClassifierType",
            "plural": "shopClassifierType",
            "className": "Sample_Shop_Classifier_Type",
            "singleCaption": "Shop classifier type",
            "pluralCaption": "Shop classifier type",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "type",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkClassifierType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Classifier",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Classifier_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_classifier",
                            "fkClassifierType"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkClassifierType",
                    "caption": "Shop classifier",
                    "varName": "shopClassifier",
                    "pluralForList": "shopClassifier",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopClassifier",
                    "_rel": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ]
                },
                "type": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "type",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "16",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "type",
                    "caption": "Type",
                    "varName": "type",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier_type",
                        "type"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopProductExtraCodes": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkExtraCodeProduct"
            ],
            "skipMapperMixables": [],
            "masterProperties": {
                "fkExtraCodeProduct": "_rel_fkExtraCodeProduct"
            },
            "isReferenced": false,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_person": {
                    "srcMapperClass": "Sample_Shop_Product_Extra_Code_ImplMapper",
                    "destMapperClass": "Sample_Person_Mapper",
                    "srcVarName": "_person",
                    "destVarName": "_extraCodeShopProducts",
                    "destCountVarName": "_extraCodeShopProductsCount",
                    "destLoadedVarName": "_extraCodeShopProductsLoaded",
                    "fieldLinks": {
                        "responsiblePersonId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "person": {
                    "relationId": "_person",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "person",
                    "plural": "people",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfPeople",
                    "createDestObjectMethod": "createPerson",
                    "getDestObjectMethod": "getPerson",
                    "setDestObjectMethod": "setPerson",
                    "clearDestObjectMethod": "clearPerson"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopProductExtraCodes",
            "table": "#__shop_product_extraCodes",
            "subsystemPrefixes": [],
            "single": "shopProductExtraCode",
            "plural": "shopProductExtraCodes",
            "className": "Sample_Shop_Product_Extra_Code",
            "singleCaption": "Shop product extra code",
            "pluralCaption": "Shop product extra codes",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "responsiblePersonId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": "ean",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__shop_product_extraCodes",
                    "uniformTypeId": "Sample_Shop_Product_Mapper"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "shopProducts",
            "_properties": {
                "_rel_fkExtraCodeProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkExtraCodeProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkExtraCodeProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkExtraCodeProduct",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ]
                },
                "_rel_fkExtraCodeResponsiblePerson": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkExtraCodeResponsiblePerson",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkExtraCodeResponsiblePerson",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkExtraCodeResponsiblePerson",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "productId"
                    ]
                },
                "ean": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ean",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ean",
                    "caption": "Ean",
                    "varName": "ean",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "ean"
                    ]
                },
                "asin": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "asin",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "asin",
                    "caption": "Asin",
                    "varName": "asin",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "asin"
                    ]
                },
                "gtin": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "gtin",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "gtin",
                    "caption": "Gtin",
                    "varName": "gtin",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "gtin"
                    ]
                },
                "responsiblePersonId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "responsiblePersonId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "responsiblePersonId",
                    "caption": "Responsible Person Id",
                    "varName": "responsiblePersonId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "responsiblePersonId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkExtraCodeProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkExtraCodeResponsiblePerson",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopProductNotes": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkProductNoteProduct"
            ],
            "skipMapperMixables": [],
            "masterProperties": {
                "fkProductNoteProduct": "_rel_fkProductNoteProduct"
            },
            "isReferenced": false,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_person": {
                    "srcMapperClass": "Sample_Shop_Product_Note_ImplMapper",
                    "destMapperClass": "Sample_Person_Mapper",
                    "srcVarName": "_person",
                    "destVarName": "_noteShopProducts",
                    "destCountVarName": "_noteShopProductsCount",
                    "destLoadedVarName": "_noteShopProductsLoaded",
                    "fieldLinks": {
                        "noteAuthorId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "person": {
                    "relationId": "_person",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "person",
                    "plural": "people",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfPeople",
                    "createDestObjectMethod": "createPerson",
                    "getDestObjectMethod": "getPerson",
                    "setDestObjectMethod": "setPerson",
                    "clearDestObjectMethod": "clearPerson"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": true,
            "name": "shopProductNotes",
            "table": "#__shop_product_notes",
            "subsystemPrefixes": [],
            "single": "shopProductNote",
            "plural": "shopProductNotes",
            "className": "Sample_Shop_Product_Note",
            "singleCaption": "Shop product note",
            "pluralCaption": "Shop product notes",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "noteAuthorId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__shop_product_notes",
                    "uniformTypeId": "Sample_Shop_Product_Mapper"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "shopProducts",
            "_properties": {
                "_rel_fkProductNoteAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkProductNoteAuthor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkProductNoteAuthor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductNoteAuthor",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ]
                },
                "_rel_fkProductNoteProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkProductNoteProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkProductNoteProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkProductNoteProduct",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "11",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "productId"
                    ]
                },
                "note": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "note",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "note",
                    "caption": "Note",
                    "varName": "note",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "note"
                    ]
                },
                "noteAuthorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "noteAuthorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "noteAuthorId",
                    "caption": "Note Author Id",
                    "varName": "noteAuthorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "noteAuthorId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkProductNoteAuthor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkProductNoteProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopProducts": {
            "__class": "Ac_Cg_Model",
            "name": "shopProducts",
            "table": "#__shop_products",
            "subsystemPrefixes": [],
            "single": "shopProduct",
            "plural": "shopProducts",
            "className": "Sample_Shop_Product",
            "singleCaption": "Shop product",
            "pluralCaption": "Shop products",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "metaId",
                "pubId"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "publish": {
                    "class": "Sample_Publish_MapperMixable",
                    "colMap": {
                        "id": "pubId"
                    },
                    "fieldNames": {
                        "sharedObjectType": false
                    }
                },
                "extraCode": {
                    "class": "Sample_Shop_Product_Extra_Code_MapperMixable",
                    "colMap": {
                        "productId": "id"
                    }
                },
                "note": {
                    "class": "Sample_Shop_Product_Note_MapperMixable",
                    "colMap": {
                        "productId": "id"
                    }
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkPersonPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPersonPublish",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPersonPublish",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPersonPublish",
                    "caption": "Publish",
                    "varName": "publish",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "publish",
                    "_rel": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ]
                },
                "_rel_fkProductCategoryProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ],
                    "otherRelation": "fkProductCategoryCategory",
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Category",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Category_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_categories",
                            "fkProductCategoryProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkProductCategoryCategory",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductCategoryProduct",
                    "caption": "Shop categories",
                    "varName": "shopCategories",
                    "pluralForList": "shopCategories",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopCategories",
                    "_rel": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ],
                    "_otherRel": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ]
                },
                "_rel_fkExtraCodeProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product_Extra_Code",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Extra_Code_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_extraCodes",
                            "fkExtraCodeProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkExtraCodeProduct",
                    "caption": "Shop product extra code",
                    "varName": "shopProductExtraCode",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProductExtraCodes",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ]
                },
                "_rel_fkProductNoteProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product_Note",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Note_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_notes",
                            "fkProductNoteProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkProductNoteProduct",
                    "caption": "Shop product note",
                    "varName": "shopProductNote",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProductNotes",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ]
                },
                "_rel_relatedProductReferenced": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ],
                    "otherRelation": "relatedProductReferencing",
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "referenced",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_related",
                            "relatedProductReferenced"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "relatedProductReferencing",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_relatedProductReferenced",
                    "caption": "Shop products",
                    "varName": "referencedShopProducts",
                    "pluralForList": "referencedShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ],
                    "_otherRel": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ]
                },
                "_rel_relatedProductReferencing": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ],
                    "otherRelation": "relatedProductReferenced",
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "referencing",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_related",
                            "relatedProductReferencing"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "relatedProductReferenced",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_relatedProductReferencing",
                    "caption": "Shop products",
                    "varName": "referencingShopProducts",
                    "pluralForList": "referencingShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ],
                    "_otherRel": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ]
                },
                "_rel_specsProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_specs",
                        "specsProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_specs",
                            "specsProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_specsProduct",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_specs",
                        "specsProduct"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "id"
                    ]
                },
                "sku": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "sku",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "sku",
                    "caption": "Sku",
                    "varName": "sku",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "sku"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "title"
                    ]
                },
                "metaId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "metaId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "metaId",
                    "caption": "Meta Id",
                    "varName": "metaId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "metaId"
                    ]
                },
                "pubId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Publish_ImplMapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubId",
                    "caption": "Pub Id",
                    "varName": "pubId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "pubId"
                    ]
                },
                "_rel_fkProductNoteAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkProductNoteAuthor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkProductNoteAuthor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": false,
                        "createAssociationObject": false
                    },
                    "enabled": true,
                    "name": "_rel_fkProductNoteAuthor",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": "noteShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "11",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "productId"
                    ]
                },
                "note": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "note",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "note",
                    "caption": "Note",
                    "varName": "note",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "note"
                    ]
                },
                "noteAuthorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "noteAuthorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "noteAuthorId",
                    "caption": "Note Author Id",
                    "varName": "noteAuthorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "noteAuthorId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPersonPublish",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkProductCategoryCategory",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "relatedProductReferencing",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "relatedProductReferenced",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_specs",
                        "specsProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkProductNoteAuthor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": false,
                    "createAssociationObject": false
                }
            ]
        },
        "shopSpecComputer": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkMonitorSpec"
            ],
            "skipMapperMixables": true,
            "masterProperties": [],
            "isReferenced": true,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopSpec": {
                    "srcMapperClass": "Sample_Shop_Spec_Computer_ImplMapper",
                    "destMapperClass": "Sample_Shop_Spec_Mapper",
                    "srcVarName": "_shopSpec",
                    "fieldLinks": {
                        "productId": "productId"
                    },
                    "srcIsUnique": true,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopSpec": {
                    "relationId": "_shopSpec",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopSpec",
                    "plural": "shopSpecs",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopSpecsFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopSpecs",
                    "createDestObjectMethod": "createShopSpec",
                    "getDestObjectMethod": "getShopSpec",
                    "setDestObjectMethod": "setShopSpec",
                    "clearDestObjectMethod": "clearShopSpec"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecComputer",
            "table": "#__shop_spec_computer",
            "subsystemPrefixes": [],
            "single": "shopSpecComputer",
            "plural": "shopSpecComputer",
            "className": "Sample_Shop_Spec_Computer",
            "singleCaption": "Shop spec computer",
            "pluralCaption": "Shop spec computer",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "os",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": {
                "masterFkIds": [
                    {
                        "notFound": "Property specified by foreign key 'fkMonitorSpec' not found"
                    }
                ]
            },
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkSpecsComputer": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkSpecsComputer",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkSpecsComputer",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkSpecsComputer",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "productId"
                    ]
                },
                "hdd": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "hdd",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "hdd",
                    "caption": "Hdd",
                    "varName": "hdd",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "hdd"
                    ]
                },
                "ram": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ram",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ram",
                    "caption": "Ram",
                    "varName": "ram",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "ram"
                    ]
                },
                "os": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "os",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "os",
                    "caption": "Os",
                    "varName": "os",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "os"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkSpecsComputer",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecFood": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [],
            "skipMapperMixables": true,
            "masterProperties": [],
            "isReferenced": true,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopSpec": {
                    "srcMapperClass": "Sample_Shop_Spec_Food_ImplMapper",
                    "destMapperClass": "Sample_Shop_Spec_Mapper",
                    "srcVarName": "_shopSpec",
                    "fieldLinks": {
                        "productId": "productId"
                    },
                    "srcIsUnique": true,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopSpec": {
                    "relationId": "_shopSpec",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopSpec",
                    "plural": "shopSpecs",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopSpecsFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopSpecs",
                    "createDestObjectMethod": "createShopSpec",
                    "getDestObjectMethod": "getShopSpec",
                    "setDestObjectMethod": "setShopSpec",
                    "clearDestObjectMethod": "clearShopSpec"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecFood",
            "table": "#__shop_spec_food",
            "subsystemPrefixes": [],
            "single": "shopSpecFood",
            "plural": "shopSpecFood",
            "className": "Sample_Shop_Spec_Food",
            "singleCaption": "Shop spec food",
            "pluralCaption": "Shop spec food",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "storageType"
            ],
            "mapperVars": [],
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkSpecsFood": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkSpecsFood",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkSpecsFood",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkSpecsFood",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "productId"
                    ]
                },
                "storageType": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "storageType",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": false,
                    "valueList": {
                        "shelfStable": "shelfStable",
                        "frozen": "frozen",
                        "refrigerated": "refrigerated"
                    },
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "shelfStable",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "storageType",
                    "caption": "Storage Type",
                    "varName": "storageType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "storageType"
                    ]
                },
                "storageTerm": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "storageTerm",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "3",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "storageTerm",
                    "caption": "Storage Term",
                    "varName": "storageTerm",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "storageTerm"
                    ]
                },
                "storageTermUnit": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "storageTermUnit",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": false,
                    "valueList": {
                        "days": "days",
                        "months": "months",
                        "years": "years"
                    },
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "days",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "storageTermUnit",
                    "caption": "Storage Term Unit",
                    "varName": "storageTermUnit",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "storageTermUnit"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkSpecsFood",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecLaptop": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkMonitorSpec"
            ],
            "skipMapperMixables": true,
            "masterProperties": [],
            "isReferenced": true,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopSpec": {
                    "srcMapperClass": "Sample_Shop_Spec_Laptop_ImplMapper",
                    "destMapperClass": "Sample_Shop_Spec_Mapper",
                    "srcVarName": "_shopSpec",
                    "fieldLinks": {
                        "productId": "productId"
                    },
                    "srcIsUnique": true,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopSpec": {
                    "relationId": "_shopSpec",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopSpec",
                    "plural": "shopSpecs",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopSpecsFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopSpecs",
                    "createDestObjectMethod": "createShopSpec",
                    "getDestObjectMethod": "getShopSpec",
                    "setDestObjectMethod": "setShopSpec",
                    "clearDestObjectMethod": "clearShopSpec"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecLaptop",
            "table": "#__shop_spec_laptop",
            "subsystemPrefixes": [],
            "single": "shopSpecLaptop",
            "plural": "shopSpecLaptop",
            "className": "Sample_Shop_Spec_Laptop",
            "singleCaption": "Shop spec laptop",
            "pluralCaption": "Shop spec laptop",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "battery",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": {
                "masterFkIds": [
                    {
                        "notFound": "Property specified by foreign key 'fkMonitorSpec' not found"
                    }
                ]
            },
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkSpecLaptopProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkSpecLaptopProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkSpecLaptopProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkSpecLaptopProduct",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_laptop",
                        "productId"
                    ]
                },
                "weight": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "weight",
                    "dataType": "float",
                    "controlType": false,
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "weight",
                    "caption": "Weight",
                    "varName": "weight",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_laptop",
                        "weight"
                    ]
                },
                "battery": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "battery",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "battery",
                    "caption": "Battery",
                    "varName": "battery",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_laptop",
                        "battery"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkSpecLaptopProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecMonitor": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkMonitorSpec"
            ],
            "skipMapperMixables": true,
            "masterProperties": {
                "fkMonitorSpec": "_rel_fkMonitorSpec"
            },
            "isReferenced": false,
            "parentExtraTableClass": "Ac_Model_Mapper_Mixable_ExtraTable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopClassifier": {
                    "srcMapperClass": "Sample_Shop_Spec_Monitor_ImplMapper",
                    "destMapperClass": "Sample_Shop_Classifier_Mapper",
                    "srcVarName": "_shopClassifier",
                    "destVarName": "_monitorShopSpecs",
                    "destCountVarName": "_monitorShopSpecsCount",
                    "destLoadedVarName": "_monitorShopSpecsLoaded",
                    "fieldLinks": {
                        "matrixTypeId": "id"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopClassifier": {
                    "relationId": "_shopClassifier",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopClassifier",
                    "plural": "shopClassifier",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopClassifierFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopClassifier",
                    "createDestObjectMethod": "createShopClassifier",
                    "getDestObjectMethod": "getShopClassifier",
                    "setDestObjectMethod": "setShopClassifier",
                    "clearDestObjectMethod": "clearShopClassifier"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecMonitor",
            "table": "#__shop_spec_monitor",
            "subsystemPrefixes": [],
            "single": "shopSpecMonitor",
            "plural": "shopSpecMonitor",
            "className": "Sample_Shop_Spec_Monitor",
            "singleCaption": "Shop spec monitor",
            "pluralCaption": "Shop spec monitor",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "matrixTypeId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__shop_spec_monitor",
                    "uniformTypeId": "Sample_Shop_Spec_Mapper"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "shopSpecs",
            "_properties": {
                "_rel_fkMonitorMatrixType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkMonitorMatrixType",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Classifier",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Classifier_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkMonitorMatrixType",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkMonitorMatrixType",
                    "caption": "Shop classifier",
                    "varName": "shopClassifier",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopClassifier",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ]
                },
                "_rel_fkMonitorSpec": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkMonitorSpec",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkMonitorSpec",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkMonitorSpec",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "productId"
                    ]
                },
                "diagonal": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "diagonal",
                    "dataType": "float",
                    "controlType": false,
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "diagonal",
                    "caption": "Diagonal",
                    "varName": "diagonal",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "diagonal"
                    ]
                },
                "hRes": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "hRes",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "5",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "hRes",
                    "caption": "H Res",
                    "varName": "hRes",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "hRes"
                    ]
                },
                "vRes": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "vRes",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "5",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "vRes",
                    "caption": "V Res",
                    "varName": "vRes",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "vRes"
                    ]
                },
                "matrixTypeId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "matrixTypeId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Classifier_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "matrixTypeId",
                    "caption": "Matrix Type Id",
                    "varName": "matrixTypeId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "matrixTypeId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkMonitorMatrixType",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkMonitorSpec",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecs": {
            "__class": "Ac_Cg_Model",
            "name": "shopSpecs",
            "table": "#__shop_specs",
            "subsystemPrefixes": [],
            "single": "shopSpec",
            "plural": "shopSpecs",
            "className": "Sample_Shop_Spec",
            "singleCaption": "Shop spec",
            "pluralCaption": "Shop specs",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "detailsUrl",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_specsProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "specsProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "specsProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_specsProduct",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_specs",
                        "specsProduct"
                    ]
                },
                "_rel_fkSpecsComputer": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec_Computer",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Computer_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_computer",
                            "fkSpecsComputer"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkSpecsComputer",
                    "caption": "Shop spec computer",
                    "varName": "shopSpecComputer",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecComputer",
                    "_rel": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ]
                },
                "_rel_fkSpecsFood": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec_Food",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Food_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_food",
                            "fkSpecsFood"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkSpecsFood",
                    "caption": "Shop spec food",
                    "varName": "shopSpecFood",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecFood",
                    "_rel": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ]
                },
                "_rel_fkSpecLaptopProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec_Laptop",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Laptop_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_laptop",
                            "fkSpecLaptopProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkSpecLaptopProduct",
                    "caption": "Shop spec laptop",
                    "varName": "shopSpecLaptop",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecLaptop",
                    "_rel": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ]
                },
                "_rel_fkMonitorSpec": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Sample_Shop_Spec_Monitor",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Shop_Spec_Monitor_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_monitor",
                            "fkMonitorSpec"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkMonitorSpec",
                    "caption": "Shop spec monitor",
                    "varName": "shopSpecMonitor",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecMonitor",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Sample_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_specs",
                        "productId"
                    ]
                },
                "detailsUrl": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "detailsUrl",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "detailsUrl",
                    "caption": "Details Url",
                    "varName": "detailsUrl",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_specs",
                        "detailsUrl"
                    ]
                },
                "specsType": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "specsType",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "40",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "specsType",
                    "caption": "Specs Type",
                    "varName": "specsType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_specs",
                        "specsType"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "specsProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "tags": {
            "__class": "Ac_Cg_Model",
            "name": "tags",
            "table": "#__tags",
            "subsystemPrefixes": [],
            "single": "tag",
            "plural": "tags",
            "className": "Sample_Tag",
            "singleCaption": "Tag",
            "pluralCaption": "Tags",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "titleM",
                "titleF"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_people_tags_2": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ],
                    "otherRelation": "FK_ac_people_tags_1",
                    "isOtherIncoming": false,
                    "className": "Sample_Person",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people_tags",
                            "FK_ac_people_tags_2"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK_ac_people_tags_1",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_people_tags_2",
                    "caption": "People",
                    "varName": "people",
                    "pluralForList": "people",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ],
                    "_otherRel": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ]
                },
                "_rel_fkTagId": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__tag_perks",
                        "fkTagId"
                    ],
                    "otherRelation": "fkPerkId",
                    "isOtherIncoming": false,
                    "className": "Sample_Perk",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Sample_Perk_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__tag_perks",
                            "fkTagId"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkPerkId",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkTagId",
                    "caption": "Perks",
                    "varName": "perks",
                    "pluralForList": "perks",
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_other": "perks",
                    "_rel": [
                        "#__tag_perks",
                        "fkTagId"
                    ],
                    "_otherRel": [
                        "#__tag_perks",
                        "fkPerkId"
                    ]
                },
                "tagId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tagId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tagId",
                    "caption": "Tag Id",
                    "varName": "tagId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "tagId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "title"
                    ]
                },
                "titleM": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "titleM",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "titleM",
                    "caption": "TitleM",
                    "varName": "titleM",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "titleM"
                    ]
                },
                "titleF": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "titleF",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "titleF",
                    "caption": "TitleF",
                    "varName": "titleF",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "titleF"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK_ac_people_tags_1",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__tag_perks",
                        "fkTagId"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkPerkId",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "treeAdjacent": {
            "__class": "Ac_Cg_Model",
            "name": "treeAdjacent",
            "table": "#__tree_adjacent",
            "subsystemPrefixes": [],
            "single": "treeAdjacent",
            "plural": "treeAdjacent",
            "className": "Sample_Tree_Adjacent",
            "singleCaption": "Tree adjacent",
            "pluralCaption": "Tree adjacent",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "parentId",
                "tag"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": "ordering",
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "id"
                    ]
                },
                "parentId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "parentId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "parentId",
                    "caption": "Parent Id",
                    "varName": "parentId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "parentId"
                    ]
                },
                "ordering": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ordering",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ordering",
                    "caption": "Ordering",
                    "varName": "ordering",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "ordering"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "title"
                    ]
                },
                "tag": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tag",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tag",
                    "caption": "Tag",
                    "varName": "tag",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "tag"
                    ]
                }
            }
        },
        "treeCombos": {
            "__class": "Ac_Cg_Model",
            "name": "treeCombos",
            "table": "#__tree_combos",
            "subsystemPrefixes": [],
            "single": "treeCombo",
            "plural": "treeCombos",
            "className": "Sample_Tree_Combo",
            "singleCaption": "Tree combo",
            "pluralCaption": "Tree combos",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "parentId",
                "tag"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": "ordering",
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "id"
                    ]
                },
                "leftCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "leftCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "leftCol",
                    "caption": "Left Col",
                    "varName": "leftCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "leftCol"
                    ]
                },
                "rightCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "rightCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 1,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "rightCol",
                    "caption": "Right Col",
                    "varName": "rightCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "rightCol"
                    ]
                },
                "parentId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "parentId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "parentId",
                    "caption": "Parent Id",
                    "varName": "parentId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "parentId"
                    ]
                },
                "ordering": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ordering",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ordering",
                    "caption": "Ordering",
                    "varName": "ordering",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "ordering"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "title"
                    ]
                },
                "tag": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tag",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tag",
                    "caption": "Tag",
                    "varName": "tag",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "tag"
                    ]
                },
                "ignore": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ignore",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ignore",
                    "caption": "Ignore",
                    "varName": "ignore",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "ignore"
                    ]
                },
                "depth": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "depth",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "depth",
                    "caption": "Depth",
                    "varName": "depth",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "depth"
                    ]
                }
            }
        },
        "treeRecords": {
            "__class": "Ac_Cg_Model",
            "name": "treeRecords",
            "table": "#__tree_records",
            "subsystemPrefixes": [],
            "single": "treeRecord",
            "plural": "treeRecords",
            "className": "Sample_Tree_Record",
            "singleCaption": "Tree record",
            "pluralCaption": "Tree records",
            "parentClassName": "Ac_Model_Object",
            "parentMapperClassName": "Ac_Model_Mapper",
            "parentStorageClassName": "Ac_Model_Storage_MonoTable",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "tag"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_records",
                        "id"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_records",
                        "title"
                    ]
                },
                "tag": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tag",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tag",
                    "caption": "Tag",
                    "varName": "tag",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_records",
                        "tag"
                    ]
                }
            }
        }
    },
    "models": {
        "relations": {
            "properties": {
                "_rel_FK_ac_relations_outgoing": {
                    "otherModelIdInMethodsSingle": "person",
                    "otherModelIdInMethodsPlural": "people"
                },
                "_rel_FK_ac_relations_incoming": {
                    "otherModelIdInMethodsSingle": "otherPerson",
                    "otherModelIdInMethodsPlural": "otherPeople"
                }
            }
        },
        "people": {
            "single": "person",
            "properties": {
                "_rel_FK_ac_relations_outgoing": {
                    "otherModelIdInMethodsSingle": "outgoingRelation",
                    "otherModelIdInMethodsPlural": "outgoingRelations"
                },
                "_rel_FK_ac_relations_incoming": {
                    "otherModelIdInMethodsSingle": "incomingRelation",
                    "otherModelIdInMethodsPlural": "incomingRelations"
                }
            }
        },
        "publish": {
            "class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkPersonPublish",
                "fkCategoryPublish",
                "fkPostPublish"
            ],
            "skipMapperMixables": [],
            "objectTypeField": "sharedObjectType",
            "perModelMapperMixableExtras": {
                "shopProducts": {
                    "fieldNames": {
                        "sharedObjectType": false
                    }
                }
            }
        },
        "shopProductExtraCodes": {
            "class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkExtraCodeProduct"
            ]
        },
        "shopProductNotes": {
            "class": "Ac_Cg_Model_Part",
            "inline": true,
            "masterFkIds": [
                "fkProductNoteProduct"
            ]
        },
        "shopSpecFood": {
            "class": "Ac_Cg_Model_Part",
            "skipMapperMixables": true
        },
        "shopSpecComputer": {
            "class": "Ac_Cg_Model_Part",
            "skipMapperMixables": true,
            "masterFkIds": [
                "fkMonitorSpec"
            ]
        },
        "shopSpecMonitor": {
            "class": "Ac_Cg_Model_Part",
            "skipMapperMixables": true,
            "masterFkIds": [
                "fkMonitorSpec"
            ]
        },
        "shopSpecLaptop": {
            "class": "Ac_Cg_Model_Part",
            "skipMapperMixables": true,
            "masterFkIds": [
                "fkMonitorSpec"
            ]
        }
    }
}    <IfModule mod_version.c>
        <IfVersion < 2.4>
            Order Deny,Allow
            Deny from All
        </IfVersion>

        <IfVersion >= 2.4>
            Access all denied
        </IfVersion>
    </IfModule>
    <IfModule !mod_version.c>
        Order Deny,Allow
        Deny from All
    </IfModule>
<?php
    $lang = [
        'sample_people_plural' => 'people',
        'sample_people_single' => 'person',
        'sample_perk_name' => 'Name',
        'sample_perk_perk_id' => 'Perk Id',
        'sample_perk_tags' => 'Tags',
        'sample_perks_plural' => 'perks',
        'sample_perks_single' => 'perk',
        'sample_person_album_album_id' => 'Album Id',
        'sample_person_album_album_name' => 'Album Name',
        'sample_person_album_person' => 'People',
        'sample_person_album_person_id' => 'Person Id',
        'sample_person_album_person_photos' => 'Person photos',
        'sample_person_albums_plural' => 'personAlbums',
        'sample_person_albums_single' => 'personAlbum',
        'sample_person_author_publish' => 'Publish',
        'sample_person_birth_date' => 'Birth Date',
        'sample_person_created_ts' => 'Created Ts',
        'sample_person_editor_publish' => 'Publish',
        'sample_person_extra_code_shop_products' => 'Shop products',
        'sample_person_gender' => 'Gender',
        'sample_person_incoming_relations' => 'Relations',
        'sample_person_is_single' => 'Is Single',
        'sample_person_last_updated_datetime' => 'Last Updated Datetime',
        'sample_person_name' => 'Name',
        'sample_person_note_shop_products' => 'Shop products',
        'sample_person_outgoing_relations' => 'Relations',
        'sample_person_person_albums' => 'Person albums',
        'sample_person_person_id' => 'Person Id',
        'sample_person_person_photos' => 'Person photos',
        'sample_person_person_posts' => 'Person posts',
        'sample_person_photo_filename' => 'Filename',
        'sample_person_photo_person' => 'People',
        'sample_person_photo_person_albums' => 'Person albums',
        'sample_person_photo_person_id' => 'Person Id',
        'sample_person_photo_person_posts' => 'Person posts',
        'sample_person_photo_photo_id' => 'Photo Id',
        'sample_person_photo_portrait_person' => 'People',
        'sample_person_photos_plural' => 'personPhotos',
        'sample_person_photos_single' => 'personPhoto',
        'sample_person_portrait_id' => 'Portrait Id',
        'sample_person_portrait_person_photo' => 'Person photo',
        'sample_person_post_content' => 'Content',
        'sample_person_post_id' => 'Id',
        'sample_person_post_person' => 'People',
        'sample_person_post_person_id' => 'Person Id',
        'sample_person_post_person_photo' => 'Person photo',
        'sample_person_post_photo_id' => 'Photo Id',
        'sample_person_post_pub_id' => 'Pub Id',
        'sample_person_post_publish' => 'Publish',
        'sample_person_post_title' => 'Title',
        'sample_person_posts_plural' => 'personPosts',
        'sample_person_posts_single' => 'personPost',
        'sample_person_religion' => 'Religion',
        'sample_person_religion_id' => 'Religion Id',
        'sample_person_tags' => 'Tags',
        'sample_publish_author_id' => 'Author Id',
        'sample_publish_author_person' => 'People',
        'sample_publish_date_created' => 'Date Created',
        'sample_publish_date_deleted' => 'Date Deleted',
        'sample_publish_date_modified' => 'Date Modified',
        'sample_publish_deleted' => 'Deleted',
        'sample_publish_editor_id' => 'Editor Id',
        'sample_publish_editor_person' => 'People',
        'sample_publish_id' => 'Id',
        'sample_publish_person_post' => 'Person post',
        'sample_publish_plural' => 'publish',
        'sample_publish_pub_channel_id' => 'Pub Channel Id',
        'sample_publish_publish_down' => 'Publish Down',
        'sample_publish_publish_up' => 'Publish Up',
        'sample_publish_published' => 'Published',
        'sample_publish_shared_object_type' => 'Shared Object Type',
        'sample_publish_shop_category' => 'Shop category',
        'sample_publish_shop_product' => 'Shop product',
        'sample_publish_single' => 'publish',
        'sample_relation_notes' => 'Notes',
        'sample_relation_other_person' => 'People',
        'sample_relation_other_person_id' => 'Other Person Id',
        'sample_relation_person' => 'People',
        'sample_relation_person_id' => 'Person Id',
        'sample_relation_relation_begin' => 'Relation Begin',
        'sample_relation_relation_end' => 'Relation End',
        'sample_relation_relation_id' => 'Relation Id',
        'sample_relation_relation_type' => 'Relation type',
        'sample_relation_relation_type_id' => 'Relation Type Id',
        'sample_relation_type_is_symmetrical' => 'Is Symmetrical',
        'sample_relation_type_relation_type_id' => 'Relation Type Id',
        'sample_relation_type_relations' => 'Relations',
        'sample_relation_type_title' => 'Title',
        'sample_relation_types_plural' => 'relationTypes',
        'sample_relation_types_single' => 'relationType',
        'sample_relations_plural' => 'relations',
        'sample_relations_single' => 'relation',
        'sample_religion_people' => 'People',
        'sample_religion_plural' => 'religion',
        'sample_religion_religion_id' => 'Religion Id',
        'sample_religion_single' => 'religion',
        'sample_religion_title' => 'Title',
        'sample_shop_categories_plural' => 'shopCategories',
        'sample_shop_categories_single' => 'shopCategory',
        'sample_shop_category_depth' => 'Depth',
        'sample_shop_category_id' => 'Id',
        'sample_shop_category_ignore' => 'Ignore',
        'sample_shop_category_left_col' => 'Left Col',
        'sample_shop_category_meta_id' => 'Meta Id',
        'sample_shop_category_ordering' => 'Ordering',
        'sample_shop_category_parent_id' => 'Parent Id',
        'sample_shop_category_pub_id' => 'Pub Id',
        'sample_shop_category_publish' => 'Publish',
        'sample_shop_category_right_col' => 'Right Col',
        'sample_shop_category_shop_products' => 'Shop products',
        'sample_shop_category_title' => 'Title',
        'sample_shop_classifier_id' => 'Id',
        'sample_shop_classifier_monitor_shop_specs' => 'Shop specs',
        'sample_shop_classifier_plural' => 'shopClassifier',
        'sample_shop_classifier_shop_classifier_type' => 'Shop classifier type',
        'sample_shop_classifier_single' => 'shopClassifier',
        'sample_shop_classifier_title' => 'Title',
        'sample_shop_classifier_type' => 'Type',
        'sample_shop_classifier_type_plural' => 'shopClassifierType',
        'sample_shop_classifier_type_shop_classifier' => 'Shop classifier',
        'sample_shop_classifier_type_single' => 'shopClassifierType',
        'sample_shop_classifier_type_type' => 'Type',
        'sample_shop_product_extra_code_asin' => 'Asin',
        'sample_shop_product_extra_code_ean' => 'Ean',
        'sample_shop_product_extra_code_gtin' => 'Gtin',
        'sample_shop_product_extra_code_person' => 'People',
        'sample_shop_product_extra_code_product_id' => 'Product Id',
        'sample_shop_product_extra_code_responsible_person_id' => 'Responsible Person Id',
        'sample_shop_product_extra_code_shop_product' => 'Shop product',
        'sample_shop_product_extra_codes_plural' => 'shopProductExtraCodes',
        'sample_shop_product_extra_codes_single' => 'shopProductExtraCode',
        'sample_shop_product_id' => 'Id',
        'sample_shop_product_meta_id' => 'Meta Id',
        'sample_shop_product_note' => 'Note',
        'sample_shop_product_note_author_id' => 'Note Author Id',
        'sample_shop_product_note_note' => 'Note',
        'sample_shop_product_note_note_author_id' => 'Note Author Id',
        'sample_shop_product_note_person' => 'People',
        'sample_shop_product_note_product_id' => 'Product Id',
        'sample_shop_product_note_shop_product' => 'Shop product',
        'sample_shop_product_notes_plural' => 'shopProductNotes',
        'sample_shop_product_notes_single' => 'shopProductNote',
        'sample_shop_product_person' => 'People',
        'sample_shop_product_product_id' => 'Product Id',
        'sample_shop_product_pub_id' => 'Pub Id',
        'sample_shop_product_publish' => 'Publish',
        'sample_shop_product_referenced_shop_products' => 'Shop products',
        'sample_shop_product_referencing_shop_products' => 'Shop products',
        'sample_shop_product_shop_categories' => 'Shop categories',
        'sample_shop_product_shop_product_extra_code' => 'Shop product extra code',
        'sample_shop_product_shop_product_note' => 'Shop product note',
        'sample_shop_product_shop_spec' => 'Shop spec',
        'sample_shop_product_sku' => 'Sku',
        'sample_shop_product_title' => 'Title',
        'sample_shop_products_plural' => 'shopProducts',
        'sample_shop_products_single' => 'shopProduct',
        'sample_shop_spec_computer_hdd' => 'Hdd',
        'sample_shop_spec_computer_os' => 'Os',
        'sample_shop_spec_computer_plural' => 'shopSpecComputer',
        'sample_shop_spec_computer_product_id' => 'Product Id',
        'sample_shop_spec_computer_ram' => 'Ram',
        'sample_shop_spec_computer_shop_spec' => 'Shop spec',
        'sample_shop_spec_computer_single' => 'shopSpecComputer',
        'sample_shop_spec_details_url' => 'Details Url',
        'sample_shop_spec_food_plural' => 'shopSpecFood',
        'sample_shop_spec_food_product_id' => 'Product Id',
        'sample_shop_spec_food_shop_spec' => 'Shop spec',
        'sample_shop_spec_food_single' => 'shopSpecFood',
        'sample_shop_spec_food_storage_term' => 'Storage Term',
        'sample_shop_spec_food_storage_term_unit' => 'Storage Term Unit',
        'sample_shop_spec_food_storage_type' => 'Storage Type',
        'sample_shop_spec_laptop_battery' => 'Battery',
        'sample_shop_spec_laptop_plural' => 'shopSpecLaptop',
        'sample_shop_spec_laptop_product_id' => 'Product Id',
        'sample_shop_spec_laptop_shop_spec' => 'Shop spec',
        'sample_shop_spec_laptop_single' => 'shopSpecLaptop',
        'sample_shop_spec_laptop_weight' => 'Weight',
        'sample_shop_spec_monitor_diagonal' => 'Diagonal',
        'sample_shop_spec_monitor_h_res' => 'H Res',
        'sample_shop_spec_monitor_matrix_type_id' => 'Matrix Type Id',
        'sample_shop_spec_monitor_plural' => 'shopSpecMonitor',
        'sample_shop_spec_monitor_product_id' => 'Product Id',
        'sample_shop_spec_monitor_shop_classifier' => 'Shop classifier',
        'sample_shop_spec_monitor_shop_spec' => 'Shop spec',
        'sample_shop_spec_monitor_single' => 'shopSpecMonitor',
        'sample_shop_spec_monitor_v_res' => 'V Res',
        'sample_shop_spec_product_id' => 'Product Id',
        'sample_shop_spec_shop_product' => 'Shop product',
        'sample_shop_spec_shop_spec_computer' => 'Shop spec computer',
        'sample_shop_spec_shop_spec_food' => 'Shop spec food',
        'sample_shop_spec_shop_spec_laptop' => 'Shop spec laptop',
        'sample_shop_spec_shop_spec_monitor' => 'Shop spec monitor',
        'sample_shop_spec_specs_type' => 'Specs Type',
        'sample_shop_specs_plural' => 'shopSpecs',
        'sample_shop_specs_single' => 'shopSpec',
        'sample_tag_people' => 'People',
        'sample_tag_perks' => 'Perks',
        'sample_tag_tag_id' => 'Tag Id',
        'sample_tag_title' => 'Title',
        'sample_tag_title_f' => 'TitleF',
        'sample_tag_title_m' => 'TitleM',
        'sample_tags_plural' => 'tags',
        'sample_tags_single' => 'tag',
        'sample_tree_adjacent_id' => 'Id',
        'sample_tree_adjacent_ordering' => 'Ordering',
        'sample_tree_adjacent_parent_id' => 'Parent Id',
        'sample_tree_adjacent_plural' => 'treeAdjacent',
        'sample_tree_adjacent_single' => 'treeAdjacent',
        'sample_tree_adjacent_tag' => 'Tag',
        'sample_tree_adjacent_title' => 'Title',
        'sample_tree_combo_depth' => 'Depth',
        'sample_tree_combo_id' => 'Id',
        'sample_tree_combo_ignore' => 'Ignore',
        'sample_tree_combo_left_col' => 'Left Col',
        'sample_tree_combo_ordering' => 'Ordering',
        'sample_tree_combo_parent_id' => 'Parent Id',
        'sample_tree_combo_right_col' => 'Right Col',
        'sample_tree_combo_tag' => 'Tag',
        'sample_tree_combo_title' => 'Title',
        'sample_tree_combos_plural' => 'treeCombos',
        'sample_tree_combos_single' => 'treeCombo',
        'sample_tree_record_id' => 'Id',
        'sample_tree_record_tag' => 'Tag',
        'sample_tree_record_title' => 'Title',
        'sample_tree_records_plural' => 'treeRecords',
        'sample_tree_records_single' => 'treeRecord',
    ];
    
<?php    
    require(dirname(__FILE__).'/../../gen/languages/en.php');
    Ac_Util::ms($lang, array(
    
//  'lang_string_1' => 'caption_1',
//  'lang_string_2' => 'caption_2', 
    
    ));

<?php

class Sample_Person extends Sample_Person_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Person_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_portraitPersonPhoto = false;

    var $_religion = false;

    var $_tags = false;

    var $_tagsCount = false;

    var $_tagsLoaded = false;

    var $_tagIds = false;

    var $_personAlbums = false;

    var $_personAlbumsCount = false;

    var $_personAlbumsLoaded = false;

    var $_personPhotos = false;

    var $_personPhotosCount = false;

    var $_personPhotosLoaded = false;

    var $_personPosts = false;

    var $_personPostsCount = false;

    var $_personPostsLoaded = false;

    var $_authorPublish = false;

    var $_authorPublishCount = false;

    var $_authorPublishLoaded = false;

    var $_editorPublish = false;

    var $_editorPublishCount = false;

    var $_editorPublishLoaded = false;

    var $_incomingRelations = false;

    var $_incomingRelationsCount = false;

    var $_incomingRelationsLoaded = false;

    var $_outgoingRelations = false;

    var $_outgoingRelationsCount = false;

    var $_outgoingRelationsLoaded = false;

    var $_extraCodeShopProducts = false;

    var $_extraCodeShopProductsCount = false;

    var $_extraCodeShopProductsLoaded = false;

    var $_noteShopProducts = false;

    var $_noteShopProductsCount = false;

    var $_noteShopProductsLoaded = false;

    var $personId = NULL;

    var $name = '';

    var $gender = 'F';

    var $isSingle = 1;

    var $birthDate = NULL;

    var $lastUpdatedDatetime = NULL;

    var $createdTs = false;

    var $religionId = NULL;

    var $portraitId = NULL;
    
    var $_mapperClass = 'Sample_Person_Mapper';
    
    /**
     * @var Sample_Person_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'portraitPersonPhoto', 1 => 'religion', 2 => 'tags', 3 => 'tagIds', 4 => 'personAlbums', 5 => 'personPhotos', 6 => 'personPosts', 7 => 'authorPublish', 8 => 'editorPublish', 9 => 'incomingRelations', 10 => 'outgoingRelations', 11 => 'extraCodeShopProducts', 12 => 'noteShopProducts', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'tags' => 'tags', 'personAlbums' => 'personAlbums', 'personPhotos' => 'personPhotos', 'personPosts' => 'personPosts', 'authorPublish' => 'authorPublish', 'editorPublish' => 'editorPublish', 'incomingRelations' => 'incomingRelations', 'outgoingRelations' => 'outgoingRelations', 'extraCodeShopProducts' => 'extraCodeShopProducts', 'noteShopProducts' => 'noteShopProducts', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'portraitPersonPhoto' => 'Sample_Person_Photo', 'religion' => 'Sample_Religion', 'tags' => 'Sample_Tag', 'personAlbums' => 'Sample_Person_Album', 'personPhotos' => 'Sample_Person_Photo', 'personPosts' => 'Sample_Person_Post', 'authorPublish' => 'Sample_Publish', 'editorPublish' => 'Sample_Publish', 'incomingRelations' => 'Sample_Relation', 'outgoingRelations' => 'Sample_Relation', 'extraCodeShopProducts' => 'Sample_Shop_Product', 'noteShopProducts' => 'Sample_Shop_Product', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'portraitPersonPhoto' => [
                'className' => 'Sample_Person_Photo',
                'mapperClass' => 'Sample_Person_Photo_Mapper',
                'otherModelIdInMethodsPrefix' => 'portrait',

                'caption' => new Ac_Lang_String('sample_person_portrait_person_photo'),
                'relationId' => '_portraitPersonPhoto',
                'referenceVarName' => '_portraitPersonPhoto',
            ],
            'religion' => [
                'className' => 'Sample_Religion',
                'mapperClass' => 'Sample_Religion_Mapper',

                'caption' => new Ac_Lang_String('sample_person_religion'),
                'relationId' => '_religion',
                'referenceVarName' => '_religion',
            ],
            'tags' => [
                'className' => 'Sample_Tag',
                'mapperClass' => 'Sample_Tag_Mapper',

                'caption' => new Ac_Lang_String('sample_person_tags'),
                'relationId' => '_tags',
                'countVarName' => '_tagsCount',
                'nnIdsVarName' => '_tagIds',
                'referenceVarName' => '_tags',
            ],
            'tagIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Tag_Mapper',
                ],
                'showInTable' => false,
            ],
            'personAlbums' => [
                'className' => 'Sample_Person_Album',
                'mapperClass' => 'Sample_Person_Album_Mapper',

                'caption' => new Ac_Lang_String('sample_person_person_albums'),
                'relationId' => '_personAlbums',
                'countVarName' => '_personAlbumsCount',
                'referenceVarName' => '_personAlbums',
            ],
            'personPhotos' => [
                'className' => 'Sample_Person_Photo',
                'mapperClass' => 'Sample_Person_Photo_Mapper',

                'caption' => new Ac_Lang_String('sample_person_person_photos'),
                'relationId' => '_personPhotos',
                'countVarName' => '_personPhotosCount',
                'referenceVarName' => '_personPhotos',
            ],
            'personPosts' => [
                'className' => 'Sample_Person_Post',
                'mapperClass' => 'Sample_Person_Post_Mapper',

                'caption' => new Ac_Lang_String('sample_person_person_posts'),
                'relationId' => '_personPosts',
                'countVarName' => '_personPostsCount',
                'referenceVarName' => '_personPosts',
            ],
            'authorPublish' => [
                'className' => 'Sample_Publish',
                'mapperClass' => 'Sample_Publish_ImplMapper',
                'otherModelIdInMethodsPrefix' => 'author',

                'caption' => new Ac_Lang_String('sample_person_author_publish'),
                'relationId' => '_authorPublish',
                'countVarName' => '_authorPublishCount',
                'referenceVarName' => '_authorPublish',
            ],
            'editorPublish' => [
                'className' => 'Sample_Publish',
                'mapperClass' => 'Sample_Publish_ImplMapper',
                'otherModelIdInMethodsPrefix' => 'editor',

                'caption' => new Ac_Lang_String('sample_person_editor_publish'),
                'relationId' => '_editorPublish',
                'countVarName' => '_editorPublishCount',
                'referenceVarName' => '_editorPublish',
            ],
            'incomingRelations' => [
                'className' => 'Sample_Relation',
                'mapperClass' => 'Sample_Relation_Mapper',
                'otherModelIdInMethodsSingle' => 'incomingRelation',
                'otherModelIdInMethodsPlural' => 'incomingRelations',

                'caption' => new Ac_Lang_String('sample_person_incoming_relations'),
                'relationId' => '_incomingRelations',
                'countVarName' => '_incomingRelationsCount',
                'referenceVarName' => '_incomingRelations',
            ],
            'outgoingRelations' => [
                'className' => 'Sample_Relation',
                'mapperClass' => 'Sample_Relation_Mapper',
                'otherModelIdInMethodsSingle' => 'outgoingRelation',
                'otherModelIdInMethodsPlural' => 'outgoingRelations',

                'caption' => new Ac_Lang_String('sample_person_outgoing_relations'),
                'relationId' => '_outgoingRelations',
                'countVarName' => '_outgoingRelationsCount',
                'referenceVarName' => '_outgoingRelations',
            ],
            'extraCodeShopProducts' => [
                'className' => 'Sample_Shop_Product',
                'mapperClass' => 'Sample_Shop_Product_Mapper',
                'otherModelIdInMethodsPrefix' => 'extraCode',

                'caption' => new Ac_Lang_String('sample_person_extra_code_shop_products'),
                'relationId' => '_extraCodeShopProducts',
                'countVarName' => '_extraCodeShopProductsCount',
                'referenceVarName' => '_extraCodeShopProducts',
            ],
            'noteShopProducts' => [
                'className' => 'Sample_Shop_Product',
                'mapperClass' => 'Sample_Shop_Product_Mapper',
                'otherModelIdInMethodsPrefix' => 'note',

                'caption' => new Ac_Lang_String('sample_person_note_shop_products'),
                'relationId' => '_noteShopProducts',
                'countVarName' => '_noteShopProductsCount',
                'referenceVarName' => '_noteShopProducts',
            ],
            'personId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_person_person_id'),
            ],
            'name' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_person_name'),
            ],
            'gender' => [
                'controlType' => 'selectList',
                'valueList' => [
                    'F' => 'F',
                    'M' => 'M',
                ],

                'caption' => new Ac_Lang_String('sample_person_gender'),
            ],
            'isSingle' => [
                'dataType' => 'bool',
                'controlType' => 'selectList',
                'maxLength' => '1',
                'valueList' => [
                    0 => 'No',
                    1 => 'Yes',
                ],

                'caption' => new Ac_Lang_String('sample_person_is_single'),
            ],
            'birthDate' => [
                'dataType' => 'date',
                'controlType' => 'dateInput',

                'caption' => new Ac_Lang_String('sample_person_birth_date'),
                'internalDateFormat' => 'Y-m-d',
                'outputDateFormat' => 'Y-m-d',
            ],
            'lastUpdatedDatetime' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_last_updated_datetime'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'createdTs' => [
                'dataType' => 'timestamp',
                'controlType' => 'dateInput',

                'caption' => new Ac_Lang_String('sample_person_created_ts'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'religionId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Religion_Mapper',
                ],
                'objectPropertyName' => 'religion',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_religion_id'),
            ],
            'portraitId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Photo_Mapper',
                ],
                'objectPropertyName' => 'portraitPersonPhoto',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_portrait_id'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Person_Photo 
     */
    function getPortraitPersonPhoto() {
        if ($this->_portraitPersonPhoto === false) {
            $this->mapper->loadPortraitPersonPhotosFor($this);
            
        }
        return $this->_portraitPersonPhoto;
    }
    
    /**
     * @param Sample_Person_Photo $portraitPersonPhoto 
     */
    function setPortraitPersonPhoto($portraitPersonPhoto) {
        if ($portraitPersonPhoto === false) $this->_portraitPersonPhoto = false;
        elseif ($portraitPersonPhoto === null) $this->_portraitPersonPhoto = null;
        else {
            if (!is_a($portraitPersonPhoto, 'Sample_Person_Photo')) trigger_error('$portraitPersonPhoto must be an instance of Sample_Person_Photo', E_USER_ERROR);
            if (!is_object($this->_portraitPersonPhoto) && !Ac_Util::sameObject($this->_portraitPersonPhoto, $portraitPersonPhoto)) { 
                $this->_portraitPersonPhoto = $portraitPersonPhoto;
            }
        }
    }
    
    function clearPortraitPersonPhoto() {
        $this->portraitPersonPhoto = null;
    }

    /**
     * @return Sample_Person_Photo  
     */
    function createPortraitPersonPhoto($values = array()) {
        $m = $this->getMapper('Sample_Person_Photo_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPortraitPersonPhoto($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Religion 
     */
    function getReligion() {
        if ($this->_religion === false) {
            $this->mapper->loadReligionFor($this);
            
        }
        return $this->_religion;
    }
    
    /**
     * @param Sample_Religion $religion 
     */
    function setReligion($religion) {
        if ($religion === false) $this->_religion = false;
        elseif ($religion === null) $this->_religion = null;
        else {
            if (!is_a($religion, 'Sample_Religion')) trigger_error('$religion must be an instance of Sample_Religion', E_USER_ERROR);
            if (!is_object($this->_religion) && !Ac_Util::sameObject($this->_religion, $religion)) { 
                $this->_religion = $religion;
            }
        }
    }
    
    function clearReligion() {
        $this->religion = null;
    }

    /**
     * @return Sample_Religion  
     */
    function createReligion($values = array()) {
        $m = $this->getMapper('Sample_Religion_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setReligion($res);
        return $res;
    }

    

    function countTags() {
        if (is_array($this->_tags)) return count($this->_tags);
        if ($this->_tagsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_tags');
        }
        return $this->_tagsCount;
        
    }

    function listTags() {
        if (!$this->_tagsLoaded) {
            $this->mapper->loadTagsFor($this);
        }
        return array_keys($this->_tags);
    }
    
    /**
     * @return bool
     */
    function isTagsLoaded() {
        return $this->_tagsLoaded;
    }
    
    /**
     * @return Sample_Tag 
     */
    function getTag($id) {
        if (!$this->_tagsLoaded) {
            $this->mapper->loadTagsFor($this);
        }
        
        if (!isset($this->_tags[$id])) trigger_error ('No such Tag: \''.$id.'\'', E_USER_ERROR);
        return $this->_tags[$id];
    }
    
    /**
     * @return Sample_Tag 
     */
    function getTagsItem($id) {
        return $this->getTag($id);
    }
    
    /**
     * @return Sample_Tag[] 
     */
    function getAllTags() {
        $res = [];
        foreach ($this->listTags() as $id)
            $res[] = $this->getTag($id);
        return $res;
    }
    
    /**
     * @param Sample_Tag $tag 
     */
    function addTag($tag) {
        if (!is_a($tag, 'Sample_Tag')) trigger_error('$tag must be an instance of Sample_Tag', E_USER_ERROR);
        $this->listTags();
        $this->_tags[] = $tag;
        
        if (is_array($tag->_people) && !Ac_Util::sameInArray($this, $tag->_people)) {
                $tag->_people[] = $this;
        }
        
    }

    /**
     * @return Sample_Tag  
     */
    function createTag($values = array()) {
        $m = $this->getMapper('Sample_Tag_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addTag($res);
        return $res;
    }
    

    function getTagIds() {
        if ($this->_tagIds === false) {
            $this->mapper->loadTagIdsFor($this);
        }
        return $this->_tagIds;
    }
    
    function setTagIds($tagIds) {
        if (!is_array($tagIds)) trigger_error('$tagIds must be an array', E_USER_ERROR);
        $this->_tagIds = $tagIds;
        $this->_tagsLoaded = false;
        $this->_tags = false; 
    }
    
    function clearTags() {
        $this->_tags = array();
        $this->_tagsLoaded = true;
        $this->_tagIds = false;
    }               

    function countPersonAlbums() {
        if (is_array($this->_personAlbums)) return count($this->_personAlbums);
        if ($this->_personAlbumsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_personAlbums');
        }
        return $this->_personAlbumsCount;
        
    }

    function listPersonAlbums() {
        if (!$this->_personAlbumsLoaded) {
            $this->mapper->loadPersonAlbumsFor($this);
        }
        return array_keys($this->_personAlbums);
    }
    
    /**
     * @return bool
     */
    function isPersonAlbumsLoaded() {
        return $this->_personAlbumsLoaded;
    }
    
    /**
     * @return Sample_Person_Album 
     */
    function getPersonAlbum($id) {
        if (!$this->_personAlbumsLoaded) {
            $this->mapper->loadPersonAlbumsFor($this);
        }
        
        if (!isset($this->_personAlbums[$id])) trigger_error ('No such Person album: \''.$id.'\'', E_USER_ERROR);
        return $this->_personAlbums[$id];
    }
    
    /**
     * @return Sample_Person_Album 
     */
    function getPersonAlbumsItem($id) {
        return $this->getPersonAlbum($id);
    }
    
    /**
     * @return Sample_Person_Album[] 
     */
    function getAllPersonAlbums() {
        $res = [];
        foreach ($this->listPersonAlbums() as $id)
            $res[] = $this->getPersonAlbum($id);
        return $res;
    }
    
    /**
     * @param Sample_Person_Album $personAlbum 
     */
    function addPersonAlbum($personAlbum) {
        if (!is_a($personAlbum, 'Sample_Person_Album')) trigger_error('$personAlbum must be an instance of Sample_Person_Album', E_USER_ERROR);
        $this->listPersonAlbums();
        $this->_personAlbums[] = $personAlbum;
        
        $personAlbum->_person = $this;
        
    }

    /**
     * @return Sample_Person_Album  
     */
    function createPersonAlbum($values = array()) {
        $m = $this->getMapper('Sample_Person_Album_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPersonAlbum($res);
        return $res;
    }
    

    function countPersonPhotos() {
        if (is_array($this->_personPhotos)) return count($this->_personPhotos);
        if ($this->_personPhotosCount === false) {
            $this->mapper->loadAssocCountFor($this, '_personPhotos');
        }
        return $this->_personPhotosCount;
        
    }

    function listPersonPhotos() {
        if (!$this->_personPhotosLoaded) {
            $this->mapper->loadPersonPhotosFor($this);
        }
        return array_keys($this->_personPhotos);
    }
    
    /**
     * @return bool
     */
    function isPersonPhotosLoaded() {
        return $this->_personPhotosLoaded;
    }
    
    /**
     * @return Sample_Person_Photo 
     */
    function getPersonPhoto($id) {
        if (!$this->_personPhotosLoaded) {
            $this->mapper->loadPersonPhotosFor($this);
        }
        
        if (!isset($this->_personPhotos[$id])) trigger_error ('No such Person photo: \''.$id.'\'', E_USER_ERROR);
        return $this->_personPhotos[$id];
    }
    
    /**
     * @return Sample_Person_Photo 
     */
    function getPersonPhotosItem($id) {
        return $this->getPersonPhoto($id);
    }
    
    /**
     * @return Sample_Person_Photo[] 
     */
    function getAllPersonPhotos() {
        $res = [];
        foreach ($this->listPersonPhotos() as $id)
            $res[] = $this->getPersonPhoto($id);
        return $res;
    }
    
    /**
     * @param Sample_Person_Photo $personPhoto 
     */
    function addPersonPhoto($personPhoto) {
        if (!is_a($personPhoto, 'Sample_Person_Photo')) trigger_error('$personPhoto must be an instance of Sample_Person_Photo', E_USER_ERROR);
        $this->listPersonPhotos();
        $this->_personPhotos[] = $personPhoto;
        
        $personPhoto->_person = $this;
        
    }

    /**
     * @return Sample_Person_Photo  
     */
    function createPersonPhoto($values = array()) {
        $m = $this->getMapper('Sample_Person_Photo_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPersonPhoto($res);
        return $res;
    }
    

    function countPersonPosts() {
        if (is_array($this->_personPosts)) return count($this->_personPosts);
        if ($this->_personPostsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_personPosts');
        }
        return $this->_personPostsCount;
        
    }

    function listPersonPosts() {
        if (!$this->_personPostsLoaded) {
            $this->mapper->loadPersonPostsFor($this);
        }
        return array_keys($this->_personPosts);
    }
    
    /**
     * @return bool
     */
    function isPersonPostsLoaded() {
        return $this->_personPostsLoaded;
    }
    
    /**
     * @return Sample_Person_Post 
     */
    function getPersonPost($id) {
        if (!$this->_personPostsLoaded) {
            $this->mapper->loadPersonPostsFor($this);
        }
        
        if (!isset($this->_personPosts[$id])) trigger_error ('No such Person post: \''.$id.'\'', E_USER_ERROR);
        return $this->_personPosts[$id];
    }
    
    /**
     * @return Sample_Person_Post 
     */
    function getPersonPostsItem($id) {
        return $this->getPersonPost($id);
    }
    
    /**
     * @return Sample_Person_Post[] 
     */
    function getAllPersonPosts() {
        $res = [];
        foreach ($this->listPersonPosts() as $id)
            $res[] = $this->getPersonPost($id);
        return $res;
    }
    
    /**
     * @param Sample_Person_Post $personPost 
     */
    function addPersonPost($personPost) {
        if (!is_a($personPost, 'Sample_Person_Post')) trigger_error('$personPost must be an instance of Sample_Person_Post', E_USER_ERROR);
        $this->listPersonPosts();
        $this->_personPosts[] = $personPost;
        
        $personPost->_person = $this;
        
    }

    /**
     * @return Sample_Person_Post  
     */
    function createPersonPost($values = array()) {
        $m = $this->getMapper('Sample_Person_Post_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPersonPost($res);
        return $res;
    }
    

    function countAuthorPublish() {
        if (is_array($this->_authorPublish)) return count($this->_authorPublish);
        if ($this->_authorPublishCount === false) {
            $this->mapper->loadAssocCountFor($this, '_authorPublish');
        }
        return $this->_authorPublishCount;
        
    }

    function listAuthorPublish() {
        if (!$this->_authorPublishLoaded) {
            $this->mapper->loadAuthorPublishFor($this);
        }
        return array_keys($this->_authorPublish);
    }
    
    /**
     * @return bool
     */
    function isAuthorPublishLoaded() {
        return $this->_authorPublishLoaded;
    }
    
    /**
     * @return Sample_Publish 
     */
    function getAuthorPublish($id) {
        if (!$this->_authorPublishLoaded) {
            $this->mapper->loadAuthorPublishFor($this);
        }
        
        if (!isset($this->_authorPublish[$id])) trigger_error ('No such Publish: \''.$id.'\'', E_USER_ERROR);
        return $this->_authorPublish[$id];
    }
    
    /**
     * @return Sample_Publish 
     */
    function getAuthorPublishItem($id) {
        return $this->getAuthorPublish($id);
    }
    
    /**
     * @return Sample_Publish[] 
     */
    function getAllAuthorPublish() {
        $res = [];
        foreach ($this->listAuthorPublish() as $id)
            $res[] = $this->getAuthorPublish($id);
        return $res;
    }
    
    /**
     * @param Sample_Publish $authorPublish 
     */
    function addAuthorPublish($authorPublish) {
        if (!is_a($authorPublish, 'Sample_Publish')) trigger_error('$authorPublish must be an instance of Sample_Publish', E_USER_ERROR);
        $this->listAuthorPublish();
        $this->_authorPublish[] = $authorPublish;
        
        $authorPublish->_authorPerson = $this;
        
    }

    /**
     * @return Sample_Publish  
     */
    function createAuthorPublish($values = array()) {
        $m = $this->getMapper('Sample_Publish_ImplMapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addAuthorPublish($res);
        return $res;
    }
    

    function countEditorPublish() {
        if (is_array($this->_editorPublish)) return count($this->_editorPublish);
        if ($this->_editorPublishCount === false) {
            $this->mapper->loadAssocCountFor($this, '_editorPublish');
        }
        return $this->_editorPublishCount;
        
    }

    function listEditorPublish() {
        if (!$this->_editorPublishLoaded) {
            $this->mapper->loadEditorPublishFor($this);
        }
        return array_keys($this->_editorPublish);
    }
    
    /**
     * @return bool
     */
    function isEditorPublishLoaded() {
        return $this->_editorPublishLoaded;
    }
    
    /**
     * @return Sample_Publish 
     */
    function getEditorPublish($id) {
        if (!$this->_editorPublishLoaded) {
            $this->mapper->loadEditorPublishFor($this);
        }
        
        if (!isset($this->_editorPublish[$id])) trigger_error ('No such Publish: \''.$id.'\'', E_USER_ERROR);
        return $this->_editorPublish[$id];
    }
    
    /**
     * @return Sample_Publish 
     */
    function getEditorPublishItem($id) {
        return $this->getEditorPublish($id);
    }
    
    /**
     * @return Sample_Publish[] 
     */
    function getAllEditorPublish() {
        $res = [];
        foreach ($this->listEditorPublish() as $id)
            $res[] = $this->getEditorPublish($id);
        return $res;
    }
    
    /**
     * @param Sample_Publish $editorPublish 
     */
    function addEditorPublish($editorPublish) {
        if (!is_a($editorPublish, 'Sample_Publish')) trigger_error('$editorPublish must be an instance of Sample_Publish', E_USER_ERROR);
        $this->listEditorPublish();
        $this->_editorPublish[] = $editorPublish;
        
        $editorPublish->_editorPerson = $this;
        
    }

    /**
     * @return Sample_Publish  
     */
    function createEditorPublish($values = array()) {
        $m = $this->getMapper('Sample_Publish_ImplMapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addEditorPublish($res);
        return $res;
    }
    

    function countIncomingRelations() {
        if (is_array($this->_incomingRelations)) return count($this->_incomingRelations);
        if ($this->_incomingRelationsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_incomingRelations');
        }
        return $this->_incomingRelationsCount;
        
    }

    function listIncomingRelations() {
        if (!$this->_incomingRelationsLoaded) {
            $this->mapper->loadIncomingRelationsFor($this);
        }
        return array_keys($this->_incomingRelations);
    }
    
    /**
     * @return bool
     */
    function isIncomingRelationsLoaded() {
        return $this->_incomingRelationsLoaded;
    }
    
    /**
     * @return Sample_Relation 
     */
    function getIncomingRelation($id) {
        if (!$this->_incomingRelationsLoaded) {
            $this->mapper->loadIncomingRelationsFor($this);
        }
        
        if (!isset($this->_incomingRelations[$id])) trigger_error ('No such Relation: \''.$id.'\'', E_USER_ERROR);
        return $this->_incomingRelations[$id];
    }
    
    /**
     * @return Sample_Relation 
     */
    function getIncomingRelationsItem($id) {
        return $this->getIncomingRelation($id);
    }
    
    /**
     * @return Sample_Relation[] 
     */
    function getAllIncomingRelations() {
        $res = [];
        foreach ($this->listIncomingRelations() as $id)
            $res[] = $this->getIncomingRelation($id);
        return $res;
    }
    
    /**
     * @param Sample_Relation $incomingRelation 
     */
    function addIncomingRelation($incomingRelation) {
        if (!is_a($incomingRelation, 'Sample_Relation')) trigger_error('$incomingRelation must be an instance of Sample_Relation', E_USER_ERROR);
        $this->listIncomingRelations();
        $this->_incomingRelations[] = $incomingRelation;
        
        $incomingRelation->_otherPerson = $this;
        
    }

    /**
     * @return Sample_Relation  
     */
    function createIncomingRelation($values = array()) {
        $m = $this->getMapper('Sample_Relation_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addIncomingRelation($res);
        return $res;
    }
    

    function countOutgoingRelations() {
        if (is_array($this->_outgoingRelations)) return count($this->_outgoingRelations);
        if ($this->_outgoingRelationsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_outgoingRelations');
        }
        return $this->_outgoingRelationsCount;
        
    }

    function listOutgoingRelations() {
        if (!$this->_outgoingRelationsLoaded) {
            $this->mapper->loadOutgoingRelationsFor($this);
        }
        return array_keys($this->_outgoingRelations);
    }
    
    /**
     * @return bool
     */
    function isOutgoingRelationsLoaded() {
        return $this->_outgoingRelationsLoaded;
    }
    
    /**
     * @return Sample_Relation 
     */
    function getOutgoingRelation($id) {
        if (!$this->_outgoingRelationsLoaded) {
            $this->mapper->loadOutgoingRelationsFor($this);
        }
        
        if (!isset($this->_outgoingRelations[$id])) trigger_error ('No such Relation: \''.$id.'\'', E_USER_ERROR);
        return $this->_outgoingRelations[$id];
    }
    
    /**
     * @return Sample_Relation 
     */
    function getOutgoingRelationsItem($id) {
        return $this->getOutgoingRelation($id);
    }
    
    /**
     * @return Sample_Relation[] 
     */
    function getAllOutgoingRelations() {
        $res = [];
        foreach ($this->listOutgoingRelations() as $id)
            $res[] = $this->getOutgoingRelation($id);
        return $res;
    }
    
    /**
     * @param Sample_Relation $outgoingRelation 
     */
    function addOutgoingRelation($outgoingRelation) {
        if (!is_a($outgoingRelation, 'Sample_Relation')) trigger_error('$outgoingRelation must be an instance of Sample_Relation', E_USER_ERROR);
        $this->listOutgoingRelations();
        $this->_outgoingRelations[] = $outgoingRelation;
        
        $outgoingRelation->_person = $this;
        
    }

    /**
     * @return Sample_Relation  
     */
    function createOutgoingRelation($values = array()) {
        $m = $this->getMapper('Sample_Relation_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addOutgoingRelation($res);
        return $res;
    }
    

    function countExtraCodeShopProducts() {
        if (is_array($this->_extraCodeShopProducts)) return count($this->_extraCodeShopProducts);
        return 0;
        
    }

    function listExtraCodeShopProducts() {
        if (!is_array($this->_extraCodeShopProducts)) $this->_extraCodeShopProducts = array();
        return array_keys($this->_extraCodeShopProducts);
    }
    
    /**
     * @return bool
     */
    function isExtraCodeShopProductsLoaded() {
        return $this->_extraCodeShopProductsLoaded;
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getExtraCodeShopProduct($id) {
        
        if (!isset($this->_extraCodeShopProducts[$id])) trigger_error ('No such Shop product: \''.$id.'\'', E_USER_ERROR);
        return $this->_extraCodeShopProducts[$id];
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getExtraCodeShopProductsItem($id) {
        return $this->getExtraCodeShopProduct($id);
    }
    
    /**
     * @return Sample_Shop_Product[] 
     */
    function getAllExtraCodeShopProducts() {
        $res = [];
        foreach ($this->listExtraCodeShopProducts() as $id)
            $res[] = $this->getExtraCodeShopProduct($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Product $extraCodeShopProduct 
     */
    function addExtraCodeShopProduct($extraCodeShopProduct) {
        if (!is_a($extraCodeShopProduct, 'Sample_Shop_Product')) trigger_error('$extraCodeShopProduct must be an instance of Sample_Shop_Product', E_USER_ERROR);
        $this->listExtraCodeShopProducts();
        $this->_extraCodeShopProducts[] = $extraCodeShopProduct;
        
        
    }

    /**
     * @return Sample_Shop_Product  
     */
    function createExtraCodeShopProduct($values = array()) {
        $m = $this->getMapper('Sample_Shop_Product_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addExtraCodeShopProduct($res);
        return $res;
    }
    

    function countNoteShopProducts() {
        if (is_array($this->_noteShopProducts)) return count($this->_noteShopProducts);
        return 0;
        
    }

    function listNoteShopProducts() {
        if (!is_array($this->_noteShopProducts)) $this->_noteShopProducts = array();
        return array_keys($this->_noteShopProducts);
    }
    
    /**
     * @return bool
     */
    function isNoteShopProductsLoaded() {
        return $this->_noteShopProductsLoaded;
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getNoteShopProduct($id) {
        
        if (!isset($this->_noteShopProducts[$id])) trigger_error ('No such Shop product: \''.$id.'\'', E_USER_ERROR);
        return $this->_noteShopProducts[$id];
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getNoteShopProductsItem($id) {
        return $this->getNoteShopProduct($id);
    }
    
    /**
     * @return Sample_Shop_Product[] 
     */
    function getAllNoteShopProducts() {
        $res = [];
        foreach ($this->listNoteShopProducts() as $id)
            $res[] = $this->getNoteShopProduct($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Product $noteShopProduct 
     */
    function addNoteShopProduct($noteShopProduct) {
        if (!is_a($noteShopProduct, 'Sample_Shop_Product')) trigger_error('$noteShopProduct must be an instance of Sample_Shop_Product', E_USER_ERROR);
        $this->listNoteShopProducts();
        $this->_noteShopProducts[] = $noteShopProduct;
        
        $noteShopProduct->_person = $this;
        
    }

    /**
     * @return Sample_Shop_Product  
     */
    function createNoteShopProduct($values = array()) {
        $m = $this->getMapper('Sample_Shop_Product_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addNoteShopProduct($res);
        return $res;
    }
    
  
    
}

<?php

class Sample_Person_Mapper extends Sample_Person_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Person_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Person[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Person_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'personId';

    var $recordClass = 'Sample_Person';

    var $tableName = '#__people';

    var $id = 'Sample_Person_Mapper';

    var $storage = 'Sample_Person_Storage';

    var $columnNames = [ 0 => 'personId', 1 => 'name', 2 => 'gender', 3 => 'isSingle', 4 => 'birthDate', 5 => 'lastUpdatedDatetime', 6 => 'createdTs', 7 => 'religionId', 8 => 'portraitId', ];

    var $nullableColumns = [ 0 => 'lastUpdatedDatetime', 1 => 'religionId', 2 => 'portraitId', ];

    var $defaults = [
            'personId' => NULL,
            'name' => NULL,
            'gender' => 'F',
            'isSingle' => 1,
            'birthDate' => NULL,
            'lastUpdatedDatetime' => NULL,
            'createdTs' => 'CURRENT_TIMESTAMP',
            'religionId' => NULL,
            'portraitId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'personId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_portraitPersonPhoto' => false,
            '_religion' => false,
            '_tags' => false,
            '_tagsCount' => false,
            '_tagsLoaded' => false,
            '_tagIds' => false,
            '_personAlbums' => false,
            '_personAlbumsCount' => false,
            '_personAlbumsLoaded' => false,
            '_personPhotos' => false,
            '_personPhotosCount' => false,
            '_personPhotosLoaded' => false,
            '_personPosts' => false,
            '_personPostsCount' => false,
            '_personPostsLoaded' => false,
            '_authorPublish' => false,
            '_authorPublishCount' => false,
            '_authorPublishLoaded' => false,
            '_editorPublish' => false,
            '_editorPublishCount' => false,
            '_editorPublishLoaded' => false,
            '_incomingRelations' => false,
            '_incomingRelationsCount' => false,
            '_incomingRelationsLoaded' => false,
            '_outgoingRelations' => false,
            '_outgoingRelationsCount' => false,
            '_outgoingRelationsLoaded' => false,
            '_extraCodeShopProducts' => false,
            '_extraCodeShopProductsCount' => false,
            '_extraCodeShopProductsLoaded' => false,
            '_noteShopProducts' => false,
            '_noteShopProductsCount' => false,
            '_noteShopProductsLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Person 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Person_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Person 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Person 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Person 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Person 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Person[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Person[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Person     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Person     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Person[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Person[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'name';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_portraitPersonPhoto' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Person_Photo_Mapper',
                'srcVarName' => '_portraitPersonPhoto',
                'destVarName' => '_portraitPerson',
                'fieldLinks' => [
                    'personId' => 'personId',
                    'portraitId' => 'photoId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_religion' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Religion_Mapper',
                'srcVarName' => '_religion',
                'destVarName' => '_people',
                'destCountVarName' => '_peopleCount',
                'destLoadedVarName' => '_peopleLoaded',
                'fieldLinks' => [
                    'religionId' => 'religionId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_tags' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Tag_Mapper',
                'srcVarName' => '_tags',
                'srcNNIdsVarName' => '_tagIds',
                'srcCountVarName' => '_tagsCount',
                'srcLoadedVarName' => '_tagsLoaded',
                'destVarName' => '_people',
                'destCountVarName' => '_peopleCount',
                'destLoadedVarName' => '_peopleLoaded',
                'destNNIdsVarName' => '_personIds',
                'fieldLinks' => [
                    'personId' => 'idOfPerson',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadTagIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPersonIdsFor',
                ],
                'midTableName' => '#__people_tags',
                'fieldLinks2' => [
                    'idOfTag' => 'tagId',
                ],
            ],
            '_personAlbums' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Person_Album_Mapper',
                'srcVarName' => '_personAlbums',
                'srcCountVarName' => '_personAlbumsCount',
                'srcLoadedVarName' => '_personAlbumsLoaded',
                'destVarName' => '_person',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_personPhotos' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Person_Photo_Mapper',
                'srcVarName' => '_personPhotos',
                'srcCountVarName' => '_personPhotosCount',
                'srcLoadedVarName' => '_personPhotosLoaded',
                'destVarName' => '_person',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_personPosts' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Person_Post_Mapper',
                'srcVarName' => '_personPosts',
                'srcCountVarName' => '_personPostsCount',
                'srcLoadedVarName' => '_personPostsLoaded',
                'destVarName' => '_person',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_authorPublish' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Publish_ImplMapper',
                'srcVarName' => '_authorPublish',
                'srcCountVarName' => '_authorPublishCount',
                'srcLoadedVarName' => '_authorPublishLoaded',
                'destVarName' => '_authorPerson',
                'fieldLinks' => [
                    'personId' => 'authorId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_editorPublish' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Publish_ImplMapper',
                'srcVarName' => '_editorPublish',
                'srcCountVarName' => '_editorPublishCount',
                'srcLoadedVarName' => '_editorPublishLoaded',
                'destVarName' => '_editorPerson',
                'fieldLinks' => [
                    'personId' => 'editorId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_incomingRelations' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Relation_Mapper',
                'srcVarName' => '_incomingRelations',
                'srcCountVarName' => '_incomingRelationsCount',
                'srcLoadedVarName' => '_incomingRelationsLoaded',
                'destVarName' => '_otherPerson',
                'fieldLinks' => [
                    'personId' => 'otherPersonId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_outgoingRelations' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Relation_Mapper',
                'srcVarName' => '_outgoingRelations',
                'srcCountVarName' => '_outgoingRelationsCount',
                'srcLoadedVarName' => '_outgoingRelationsLoaded',
                'destVarName' => '_person',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_extraCodeShopProducts' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Shop_Product_Mapper',
                'srcVarName' => '_extraCodeShopProducts',
                'srcCountVarName' => '_extraCodeShopProductsCount',
                'srcLoadedVarName' => '_extraCodeShopProductsLoaded',
                'fieldLinks' => [
                    'personId' => 'responsiblePersonId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
            '_noteShopProducts' => [
                'srcMapperClass' => 'Sample_Person_Mapper',
                'destMapperClass' => 'Sample_Shop_Product_Mapper',
                'srcVarName' => '_noteShopProducts',
                'srcCountVarName' => '_noteShopProductsCount',
                'srcLoadedVarName' => '_noteShopProductsLoaded',
                'destVarName' => '_person',
                'destCountVarName' => '_noteShopProductsCount',
                'destLoadedVarName' => '_noteShopProductsLoaded',
                'fieldLinks' => [
                    'personId' => 'noteAuthorId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'portraitPersonPhoto' => [
                'relationId' => '_portraitPersonPhoto',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'portraitPersonPhoto',
                'plural' => 'portraitPersonPhotos',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPortraitPersonPhotosFor',
                'loadSrcObjectsMapperMethod' => 'loadForPortraitPersonPhotos',
                'getSrcObjectsMapperMethod' => 'getOfPortraitPersonPhotos',
                'createDestObjectMethod' => 'createPortraitPersonPhoto',
                'getDestObjectMethod' => 'getPortraitPersonPhoto',
                'setDestObjectMethod' => 'setPortraitPersonPhoto',
                'clearDestObjectMethod' => 'clearPortraitPersonPhoto',
            ],
            'religion' => [
                'relationId' => '_religion',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'religion',
                'plural' => 'religion',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadReligionFor',
                'loadSrcObjectsMapperMethod' => 'loadForReligion',
                'getSrcObjectsMapperMethod' => 'getOfReligion',
                'createDestObjectMethod' => 'createReligion',
                'getDestObjectMethod' => 'getReligion',
                'setDestObjectMethod' => 'setReligion',
                'clearDestObjectMethod' => 'clearReligion',
            ],
            'tags' => [
                'relationId' => '_tags',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'tag',
                'plural' => 'tags',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadTagsFor',
                'loadSrcObjectsMapperMethod' => 'loadForTags',
                'getSrcObjectsMapperMethod' => 'getOfTags',
                'createDestObjectMethod' => 'createTag',
                'getAllDestObjectsMethod' => 'getAllTags',
                'listDestObjectsMethod' => 'listTags',
                'countDestObjectsMethod' => 'countTags',
                'getDestObjectMethod' => 'getTag',
                'addDestObjectMethod' => 'addTag',
                'isDestLoadedMethod' => 'isTagsLoaded',
                'loadDestIdsMapperMethod' => 'loadTagIdsFor',
                'getDestIdsMethod' => 'getTagIds',
                'setDestIdsMethod' => 'setTagIds',
                'clearDestObjectsMethod' => 'clearTags',
            ],
            'personAlbums' => [
                'relationId' => '_personAlbums',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personAlbum',
                'plural' => 'personAlbums',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadPersonAlbumsFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonAlbums',
                'getSrcObjectsMapperMethod' => 'getOfPersonAlbums',
                'createDestObjectMethod' => 'createPersonAlbum',
                'getAllDestObjectsMethod' => 'getAllPersonAlbums',
                'listDestObjectsMethod' => 'listPersonAlbums',
                'countDestObjectsMethod' => 'countPersonAlbums',
                'getDestObjectMethod' => 'getPersonAlbum',
                'addDestObjectMethod' => 'addPersonAlbum',
                'isDestLoadedMethod' => 'isPersonAlbumsLoaded',
            ],
            'personPhotos' => [
                'relationId' => '_personPhotos',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personPhoto',
                'plural' => 'personPhotos',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadPersonPhotosFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonPhotos',
                'getSrcObjectsMapperMethod' => 'getOfPersonPhotos',
                'createDestObjectMethod' => 'createPersonPhoto',
                'getAllDestObjectsMethod' => 'getAllPersonPhotos',
                'listDestObjectsMethod' => 'listPersonPhotos',
                'countDestObjectsMethod' => 'countPersonPhotos',
                'getDestObjectMethod' => 'getPersonPhoto',
                'addDestObjectMethod' => 'addPersonPhoto',
                'isDestLoadedMethod' => 'isPersonPhotosLoaded',
            ],
            'personPosts' => [
                'relationId' => '_personPosts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personPost',
                'plural' => 'personPosts',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadPersonPostsFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonPosts',
                'getSrcObjectsMapperMethod' => 'getOfPersonPosts',
                'createDestObjectMethod' => 'createPersonPost',
                'getAllDestObjectsMethod' => 'getAllPersonPosts',
                'listDestObjectsMethod' => 'listPersonPosts',
                'countDestObjectsMethod' => 'countPersonPosts',
                'getDestObjectMethod' => 'getPersonPost',
                'addDestObjectMethod' => 'addPersonPost',
                'isDestLoadedMethod' => 'isPersonPostsLoaded',
            ],
            'authorPublish' => [
                'relationId' => '_authorPublish',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'authorPublish',
                'plural' => 'authorPublish',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadAuthorPublishFor',
                'loadSrcObjectsMapperMethod' => 'loadForAuthorPublish',
                'getSrcObjectsMapperMethod' => 'getOfAuthorPublish',
                'createDestObjectMethod' => 'createAuthorPublish',
                'getAllDestObjectsMethod' => 'getAllAuthorPublish',
                'listDestObjectsMethod' => 'listAuthorPublish',
                'countDestObjectsMethod' => 'countAuthorPublish',
                'getDestObjectMethod' => 'getAuthorPublish',
                'addDestObjectMethod' => 'addAuthorPublish',
                'isDestLoadedMethod' => 'isAuthorPublishLoaded',
            ],
            'editorPublish' => [
                'relationId' => '_editorPublish',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'editorPublish',
                'plural' => 'editorPublish',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadEditorPublishFor',
                'loadSrcObjectsMapperMethod' => 'loadForEditorPublish',
                'getSrcObjectsMapperMethod' => 'getOfEditorPublish',
                'createDestObjectMethod' => 'createEditorPublish',
                'getAllDestObjectsMethod' => 'getAllEditorPublish',
                'listDestObjectsMethod' => 'listEditorPublish',
                'countDestObjectsMethod' => 'countEditorPublish',
                'getDestObjectMethod' => 'getEditorPublish',
                'addDestObjectMethod' => 'addEditorPublish',
                'isDestLoadedMethod' => 'isEditorPublishLoaded',
            ],
            'incomingRelations' => [
                'relationId' => '_incomingRelations',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'incomingRelation',
                'plural' => 'incomingRelations',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadIncomingRelationsFor',
                'loadSrcObjectsMapperMethod' => 'loadForIncomingRelations',
                'getSrcObjectsMapperMethod' => 'getOfIncomingRelations',
                'createDestObjectMethod' => 'createIncomingRelation',
                'getAllDestObjectsMethod' => 'getAllIncomingRelations',
                'listDestObjectsMethod' => 'listIncomingRelations',
                'countDestObjectsMethod' => 'countIncomingRelations',
                'getDestObjectMethod' => 'getIncomingRelation',
                'addDestObjectMethod' => 'addIncomingRelation',
                'isDestLoadedMethod' => 'isIncomingRelationsLoaded',
            ],
            'outgoingRelations' => [
                'relationId' => '_outgoingRelations',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'outgoingRelation',
                'plural' => 'outgoingRelations',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadOutgoingRelationsFor',
                'loadSrcObjectsMapperMethod' => 'loadForOutgoingRelations',
                'getSrcObjectsMapperMethod' => 'getOfOutgoingRelations',
                'createDestObjectMethod' => 'createOutgoingRelation',
                'getAllDestObjectsMethod' => 'getAllOutgoingRelations',
                'listDestObjectsMethod' => 'listOutgoingRelations',
                'countDestObjectsMethod' => 'countOutgoingRelations',
                'getDestObjectMethod' => 'getOutgoingRelation',
                'addDestObjectMethod' => 'addOutgoingRelation',
                'isDestLoadedMethod' => 'isOutgoingRelationsLoaded',
            ],
            'extraCodeShopProducts' => [
                'relationId' => '_extraCodeShopProducts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'extraCodeShopProduct',
                'plural' => 'extraCodeShopProducts',
                'canLoadDestObjects' => false,
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => NULL,
                'loadSrcObjectsMapperMethod' => 'loadForExtraCodeShopProducts',
                'getSrcObjectsMapperMethod' => 'getOfExtraCodeShopProducts',
                'createDestObjectMethod' => 'createExtraCodeShopProduct',
                'getAllDestObjectsMethod' => 'getAllExtraCodeShopProducts',
                'listDestObjectsMethod' => 'listExtraCodeShopProducts',
                'countDestObjectsMethod' => 'countExtraCodeShopProducts',
                'getDestObjectMethod' => 'getExtraCodeShopProduct',
                'addDestObjectMethod' => 'addExtraCodeShopProduct',
                'isDestLoadedMethod' => 'isExtraCodeShopProductsLoaded',
            ],
            'noteShopProducts' => [
                'relationId' => '_noteShopProducts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'noteShopProduct',
                'plural' => 'noteShopProducts',
                'canLoadDestObjects' => false,
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => NULL,
                'loadSrcObjectsMapperMethod' => 'loadForNoteShopProducts',
                'getSrcObjectsMapperMethod' => 'getOfNoteShopProducts',
                'createDestObjectMethod' => 'createNoteShopProduct',
                'getAllDestObjectsMethod' => 'getAllNoteShopProducts',
                'listDestObjectsMethod' => 'listNoteShopProducts',
                'countDestObjectsMethod' => 'countNoteShopProducts',
                'getDestObjectMethod' => 'getNoteShopProduct',
                'addDestObjectMethod' => 'addNoteShopProduct',
                'isDestLoadedMethod' => 'isNoteShopProductsLoaded',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_people_single'),

                'pluralCaption' => new Ac_Lang_String('sample_people_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'personId',
            ],
        ];
    }

    /**
     * @return Sample_Person 
     */
    function loadByPersonId ($personId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('personId').' = '.$this->getDb()->q($personId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more people of given one or more personPhotos 
     * @param Sample_Person|array $portraitPersonPhotos     
     * @return Sample_Person|array of Sample_Person objects  
     */
    function getOfPortraitPersonPhotos($portraitPersonPhotos) {
        $rel = $this->getRelation('_portraitPersonPhoto');
        $res = $rel->getSrc($portraitPersonPhotos); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more personPhotos 
     * @param Sample_Person_Photo|array $portraitPersonPhotos of Sample_Person objects      
     */
    function loadForPortraitPersonPhotos($portraitPersonPhotos) {
        $rel = $this->getRelation('_portraitPersonPhoto');
        return $rel->loadSrc($portraitPersonPhotos); 
    }
    
    /**
     * Loads one or more personPhotos of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadPortraitPersonPhotosFor($people) {
        $rel = $this->getRelation('_portraitPersonPhoto');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) several people of given one or more religion 
     * @param Sample_Person|array $religion     
     * @return Sample_Person|array of Sample_Person objects  
     */
    function getOfReligion($religion) {
        $rel = $this->getRelation('_religion');
        $res = $rel->getSrc($religion); 
        return $res;
    }
    
    /**
     * Loads several people of given one or more religion 
     * @param Sample_Religion|array $religion of Sample_Person objects      
     */
    function loadForReligion($religion) {
        $rel = $this->getRelation('_religion');
        return $rel->loadSrc($religion); 
    }
    
    /**
     * Loads several religion of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadReligionFor($people) {
        $rel = $this->getRelation('_religion');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more tags 
     * @param Sample_Person|array $tags     
     * @return Sample_Person|array of Sample_Person objects  
     */
    function getOfTags($tags) {
        $rel = $this->getRelation('_tags');
        $res = $rel->getSrc($tags); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more tags 
     * @param Sample_Tag|array $tags of Sample_Person objects      
     */
    function loadForTags($tags) {
        $rel = $this->getRelation('_tags');
        return $rel->loadSrc($tags); 
    }
    
    /**
     * Loads one or more tags of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadTagsFor($people) {
        $rel = $this->getRelation('_tags');
        return $rel->loadDest($people); 
    }


    /**
     * @param Sample_Person|array $people 
     */
     function loadTagIdsFor($people) {
        $rel = $this->getRelation('_tags');
        return $rel->loadDestNNIds($people); 
    }
    
    /**
     * Returns (but not loads!) one or more people of given one or more personAlbums 
     * @param Sample_Person|array $personAlbums     
     * @return array of Sample_Person objects  
     */
    function getOfPersonAlbums($personAlbums) {
        $rel = $this->getRelation('_personAlbums');
        $res = $rel->getSrc($personAlbums); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more personAlbums 
     * @param Sample_Person_Album|array $personAlbums of Sample_Person objects      
     */
    function loadForPersonAlbums($personAlbums) {
        $rel = $this->getRelation('_personAlbums');
        return $rel->loadSrc($personAlbums); 
    }
    
    /**
     * Loads one or more personAlbums of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadPersonAlbumsFor($people) {
        $rel = $this->getRelation('_personAlbums');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more personPhotos 
     * @param Sample_Person|array $personPhotos     
     * @return array of Sample_Person objects  
     */
    function getOfPersonPhotos($personPhotos) {
        $rel = $this->getRelation('_personPhotos');
        $res = $rel->getSrc($personPhotos); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos of Sample_Person objects      
     */
    function loadForPersonPhotos($personPhotos) {
        $rel = $this->getRelation('_personPhotos');
        return $rel->loadSrc($personPhotos); 
    }
    
    /**
     * Loads one or more personPhotos of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadPersonPhotosFor($people) {
        $rel = $this->getRelation('_personPhotos');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more personPosts 
     * @param Sample_Person|array $personPosts     
     * @return array of Sample_Person objects  
     */
    function getOfPersonPosts($personPosts) {
        $rel = $this->getRelation('_personPosts');
        $res = $rel->getSrc($personPosts); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more personPosts 
     * @param Sample_Person_Post|array $personPosts of Sample_Person objects      
     */
    function loadForPersonPosts($personPosts) {
        $rel = $this->getRelation('_personPosts');
        return $rel->loadSrc($personPosts); 
    }
    
    /**
     * Loads one or more personPosts of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadPersonPostsFor($people) {
        $rel = $this->getRelation('_personPosts');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more publish 
     * @param Sample_Person|array $authorPublish     
     * @return array of Sample_Person objects  
     */
    function getOfAuthorPublish($authorPublish) {
        $rel = $this->getRelation('_authorPublish');
        $res = $rel->getSrc($authorPublish); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more publish 
     * @param Sample_Publish|array $authorPublish of Sample_Person objects      
     */
    function loadForAuthorPublish($authorPublish) {
        $rel = $this->getRelation('_authorPublish');
        return $rel->loadSrc($authorPublish); 
    }
    
    /**
     * Loads one or more publish of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadAuthorPublishFor($people) {
        $rel = $this->getRelation('_authorPublish');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more publish 
     * @param Sample_Person|array $editorPublish     
     * @return array of Sample_Person objects  
     */
    function getOfEditorPublish($editorPublish) {
        $rel = $this->getRelation('_editorPublish');
        $res = $rel->getSrc($editorPublish); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more publish 
     * @param Sample_Publish|array $editorPublish of Sample_Person objects      
     */
    function loadForEditorPublish($editorPublish) {
        $rel = $this->getRelation('_editorPublish');
        return $rel->loadSrc($editorPublish); 
    }
    
    /**
     * Loads one or more publish of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadEditorPublishFor($people) {
        $rel = $this->getRelation('_editorPublish');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more relations 
     * @param Sample_Person|array $incomingRelations     
     * @return array of Sample_Person objects  
     */
    function getOfIncomingRelations($incomingRelations) {
        $rel = $this->getRelation('_incomingRelations');
        $res = $rel->getSrc($incomingRelations); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more relations 
     * @param Sample_Relation|array $incomingRelations of Sample_Person objects      
     */
    function loadForIncomingRelations($incomingRelations) {
        $rel = $this->getRelation('_incomingRelations');
        return $rel->loadSrc($incomingRelations); 
    }
    
    /**
     * Loads one or more relations of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadIncomingRelationsFor($people) {
        $rel = $this->getRelation('_incomingRelations');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more relations 
     * @param Sample_Person|array $outgoingRelations     
     * @return array of Sample_Person objects  
     */
    function getOfOutgoingRelations($outgoingRelations) {
        $rel = $this->getRelation('_outgoingRelations');
        $res = $rel->getSrc($outgoingRelations); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more relations 
     * @param Sample_Relation|array $outgoingRelations of Sample_Person objects      
     */
    function loadForOutgoingRelations($outgoingRelations) {
        $rel = $this->getRelation('_outgoingRelations');
        return $rel->loadSrc($outgoingRelations); 
    }
    
    /**
     * Loads one or more relations of given one or more people 
     * @param Sample_Person|array $people     
     */
    function loadOutgoingRelationsFor($people) {
        $rel = $this->getRelation('_outgoingRelations');
        return $rel->loadDest($people); 
    }

    /**
     * Returns (but not loads!) one or more people of given one or more shopProducts 
     * @param Sample_Person|array $extraCodeShopProducts     
     * @return array of Sample_Person objects  
     */
    function getOfExtraCodeShopProducts($extraCodeShopProducts) {
        $rel = $this->getRelation('_extraCodeShopProducts');
        $res = $rel->getSrc($extraCodeShopProducts); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more shopProducts 
     * @param Sample_Shop_Product|array $extraCodeShopProducts of Sample_Person objects      
     */
    function loadForExtraCodeShopProducts($extraCodeShopProducts) {
        $rel = $this->getRelation('_extraCodeShopProducts');
        return $rel->loadSrc($extraCodeShopProducts); 
    }
    

    /**
     * Returns (but not loads!) one or more people of given one or more shopProducts 
     * @param Sample_Person|array $noteShopProducts     
     * @return array of Sample_Person objects  
     */
    function getOfNoteShopProducts($noteShopProducts) {
        $rel = $this->getRelation('_noteShopProducts');
        $res = $rel->getSrc($noteShopProducts); 
        return $res;
    }
    
    /**
     * Loads one or more people of given one or more shopProducts 
     * @param Sample_Shop_Product|array $noteShopProducts of Sample_Person objects      
     */
    function loadForNoteShopProducts($noteShopProducts) {
        $rel = $this->getRelation('_noteShopProducts');
        return $rel->loadSrc($noteShopProducts); 
    }
    

    
}

<?php

class Sample_Person_Storage extends Sample_Person_Base_Storage {
  

}
<?php

class Sample_Person_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__people'; 

    var $recordClass = 'Sample_Person'; 

    var $primaryKey = 'personId'; 

    var $defaults = [
            'personId' => NULL,
            'name' => NULL,
            'gender' => 'F',
            'isSingle' => 1,
            'birthDate' => NULL,
            'lastUpdatedDatetime' => NULL,
            'createdTs' => 'CURRENT_TIMESTAMP',
            'religionId' => NULL,
            'portraitId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'lastUpdatedDatetime', 1 => 'religionId', 2 => 'portraitId', ]; 

    var $autoincFieldName = 'personId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'personId',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'tagIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfPerson',
                        'midDestKey' => 'idOfTag',
                        'tableKey' => 'tagId',
                        'midTableAlias' => 'mid__tags',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Perk extends Sample_Perk_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Perk_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_tags = false;

    var $_tagsCount = false;

    var $_tagsLoaded = false;

    var $_tagIds = false;

    var $perkId = NULL;

    var $name = '';
    
    var $_mapperClass = 'Sample_Perk_Mapper';
    
    /**
     * @var Sample_Perk_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Perk_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'tags', 1 => 'tagIds', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'tags' => 'tags', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'tags' => 'Sample_Tag', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'tags' => [
                'className' => 'Sample_Tag',
                'mapperClass' => 'Sample_Tag_Mapper',

                'caption' => new Ac_Lang_String('sample_perk_tags'),
                'relationId' => '_tags',
                'countVarName' => '_tagsCount',
                'nnIdsVarName' => '_tagIds',
                'referenceVarName' => '_tags',
            ],
            'tagIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Tag_Mapper',
                ],
                'showInTable' => false,
            ],
            'perkId' => [
                'dataType' => 'int',
                'maxLength' => '11',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_perk_perk_id'),
            ],
            'name' => [
                'maxLength' => '45',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_perk_name'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countTags() {
        if (is_array($this->_tags)) return count($this->_tags);
        if ($this->_tagsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_tags');
        }
        return $this->_tagsCount;
        
    }

    function listTags() {
        if (!$this->_tagsLoaded) {
            $this->mapper->loadTagsFor($this);
        }
        return array_keys($this->_tags);
    }
    
    /**
     * @return bool
     */
    function isTagsLoaded() {
        return $this->_tagsLoaded;
    }
    
    /**
     * @return Sample_Tag 
     */
    function getTag($id) {
        if (!$this->_tagsLoaded) {
            $this->mapper->loadTagsFor($this);
        }
        
        if (!isset($this->_tags[$id])) trigger_error ('No such Tag: \''.$id.'\'', E_USER_ERROR);
        return $this->_tags[$id];
    }
    
    /**
     * @return Sample_Tag 
     */
    function getTagsItem($id) {
        return $this->getTag($id);
    }
    
    /**
     * @return Sample_Tag[] 
     */
    function getAllTags() {
        $res = [];
        foreach ($this->listTags() as $id)
            $res[] = $this->getTag($id);
        return $res;
    }
    
    /**
     * @param Sample_Tag $tag 
     */
    function addTag($tag) {
        if (!is_a($tag, 'Sample_Tag')) trigger_error('$tag must be an instance of Sample_Tag', E_USER_ERROR);
        $this->listTags();
        $this->_tags[] = $tag;
        
        if (is_array($tag->_perks) && !Ac_Util::sameInArray($this, $tag->_perks)) {
                $tag->_perks[] = $this;
        }
        
    }

    /**
     * @return Sample_Tag  
     */
    function createTag($values = array()) {
        $m = $this->getMapper('Sample_Tag_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addTag($res);
        return $res;
    }
    

    function getTagIds() {
        if ($this->_tagIds === false) {
            $this->mapper->loadTagIdsFor($this);
        }
        return $this->_tagIds;
    }
    
    function setTagIds($tagIds) {
        if (!is_array($tagIds)) trigger_error('$tagIds must be an array', E_USER_ERROR);
        $this->_tagIds = $tagIds;
        $this->_tagsLoaded = false;
        $this->_tags = false; 
    }
    
    function clearTags() {
        $this->_tags = array();
        $this->_tagsLoaded = true;
        $this->_tagIds = false;
    }               
  
    
}

<?php

class Sample_Perk_Mapper extends Sample_Perk_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Perk_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Perk[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Perk_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'perkId';

    var $recordClass = 'Sample_Perk';

    var $tableName = '#__perks';

    var $id = 'Sample_Perk_Mapper';

    var $storage = 'Sample_Perk_Storage';

    var $columnNames = [ 0 => 'perkId', 1 => 'name', ];

    var $nullableColumns = [ 0 => 'name', ];

    var $defaults = [
            'perkId' => NULL,
            'name' => '',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'perkId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_tags' => false,
            '_tagsCount' => false,
            '_tagsLoaded' => false,
            '_tagIds' => false,
        ]);
    }
    
    /**
     * @return Sample_Perk 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Perk_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Perk 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Perk 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Perk 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Perk 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Perk 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Perk[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Perk[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Perk     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Perk     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Perk[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Perk[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'name';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_tags' => [
                'srcMapperClass' => 'Sample_Perk_Mapper',
                'destMapperClass' => 'Sample_Tag_Mapper',
                'srcVarName' => '_tags',
                'srcNNIdsVarName' => '_tagIds',
                'srcCountVarName' => '_tagsCount',
                'srcLoadedVarName' => '_tagsLoaded',
                'destVarName' => '_perks',
                'destCountVarName' => '_perksCount',
                'destLoadedVarName' => '_perksLoaded',
                'destNNIdsVarName' => '_perkIds',
                'fieldLinks' => [
                    'perkId' => 'idOfPerk',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadTagIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPerkIdsFor',
                ],
                'midTableName' => '#__tag_perks',
                'fieldLinks2' => [
                    'idOfTag' => 'tagId',
                ],
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'tags' => [
                'relationId' => '_tags',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'tag',
                'plural' => 'tags',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadTagsFor',
                'loadSrcObjectsMapperMethod' => 'loadForTags',
                'getSrcObjectsMapperMethod' => 'getOfTags',
                'createDestObjectMethod' => 'createTag',
                'getAllDestObjectsMethod' => 'getAllTags',
                'listDestObjectsMethod' => 'listTags',
                'countDestObjectsMethod' => 'countTags',
                'getDestObjectMethod' => 'getTag',
                'addDestObjectMethod' => 'addTag',
                'isDestLoadedMethod' => 'isTagsLoaded',
                'loadDestIdsMapperMethod' => 'loadTagIdsFor',
                'getDestIdsMethod' => 'getTagIds',
                'setDestIdsMethod' => 'setTagIds',
                'clearDestObjectsMethod' => 'clearTags',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_perks_single'),

                'pluralCaption' => new Ac_Lang_String('sample_perks_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'perkId',
            ],
        ];
    }

    /**
     * @return Sample_Perk 
     */
    function loadByPerkId ($perkId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('perkId').' = '.$this->getDb()->q($perkId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more perks of given one or more tags 
     * @param Sample_Perk|array $tags     
     * @return Sample_Perk|array of Sample_Perk objects  
     */
    function getOfTags($tags) {
        $rel = $this->getRelation('_tags');
        $res = $rel->getSrc($tags); 
        return $res;
    }
    
    /**
     * Loads one or more perks of given one or more tags 
     * @param Sample_Tag|array $tags of Sample_Perk objects      
     */
    function loadForTags($tags) {
        $rel = $this->getRelation('_tags');
        return $rel->loadSrc($tags); 
    }
    
    /**
     * Loads one or more tags of given one or more perks 
     * @param Sample_Perk|array $perks     
     */
    function loadTagsFor($perks) {
        $rel = $this->getRelation('_tags');
        return $rel->loadDest($perks); 
    }


    /**
     * @param Sample_Perk|array $perks 
     */
     function loadTagIdsFor($perks) {
        $rel = $this->getRelation('_tags');
        return $rel->loadDestNNIds($perks); 
    }
    
    
}

<?php

class Sample_Perk_Storage extends Sample_Perk_Base_Storage {
  

}
<?php

class Sample_Perk_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__perks'; 

    var $recordClass = 'Sample_Perk'; 

    var $primaryKey = 'perkId'; 

    var $defaults = [
            'perkId' => NULL,
            'name' => '',
        ]; 

    var $nullableColumns = [ 0 => 'name', ]; 

    var $autoincFieldName = 'perkId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'perkId',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'tagIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfPerk',
                        'midDestKey' => 'idOfTag',
                        'tableKey' => 'tagId',
                        'midTableAlias' => 'mid__tags',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Person_Album extends Sample_Person_Album_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Person_Album_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_person = false;

    var $_personPhotos = false;

    var $_personPhotosCount = false;

    var $_personPhotosLoaded = false;

    var $_personPhotoIds = false;

    var $albumId = NULL;

    var $personId = 0;

    var $albumName = '\'\'';
    
    var $_mapperClass = 'Sample_Person_Album_Mapper';
    
    /**
     * @var Sample_Person_Album_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Album_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'person', 1 => 'personPhotos', 2 => 'personPhotoIds', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'personPhotos' => 'personPhotos', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'person' => 'Sample_Person', 'personPhotos' => 'Sample_Person_Photo', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'person' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_person_album_person'),
                'relationId' => '_person',
                'referenceVarName' => '_person',
            ],
            'personPhotos' => [
                'className' => 'Sample_Person_Photo',
                'mapperClass' => 'Sample_Person_Photo_Mapper',

                'caption' => new Ac_Lang_String('sample_person_album_person_photos'),
                'relationId' => '_personPhotos',
                'countVarName' => '_personPhotosCount',
                'nnIdsVarName' => '_personPhotoIds',
                'referenceVarName' => '_personPhotos',
            ],
            'personPhotoIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Photo_Mapper',
                ],
                'showInTable' => false,
            ],
            'albumId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_person_album_album_id'),
            ],
            'personId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'person',

                'caption' => new Ac_Lang_String('sample_person_album_person_id'),
            ],
            'albumName' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_person_album_album_name'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Person 
     */
    function getPerson() {
        if ($this->_person === false) {
            $this->mapper->loadPeopleFor($this);
            
        }
        return $this->_person;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function setPerson($person) {
        if ($person === false) $this->_person = false;
        elseif ($person === null) $this->_person = null;
        else {
            if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_person) && !Ac_Util::sameObject($this->_person, $person)) { 
                $this->_person = $person;
            }
        }
    }
    
    function clearPerson() {
        $this->person = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPerson($res);
        return $res;
    }

    

    function countPersonPhotos() {
        if (is_array($this->_personPhotos)) return count($this->_personPhotos);
        if ($this->_personPhotosCount === false) {
            $this->mapper->loadAssocCountFor($this, '_personPhotos');
        }
        return $this->_personPhotosCount;
        
    }

    function listPersonPhotos() {
        if (!$this->_personPhotosLoaded) {
            $this->mapper->loadPersonPhotosFor($this);
        }
        return array_keys($this->_personPhotos);
    }
    
    /**
     * @return bool
     */
    function isPersonPhotosLoaded() {
        return $this->_personPhotosLoaded;
    }
    
    /**
     * @return Sample_Person_Photo 
     */
    function getPersonPhoto($id) {
        if (!$this->_personPhotosLoaded) {
            $this->mapper->loadPersonPhotosFor($this);
        }
        
        if (!isset($this->_personPhotos[$id])) trigger_error ('No such Person photo: \''.$id.'\'', E_USER_ERROR);
        return $this->_personPhotos[$id];
    }
    
    /**
     * @return Sample_Person_Photo 
     */
    function getPersonPhotosItem($id) {
        return $this->getPersonPhoto($id);
    }
    
    /**
     * @return Sample_Person_Photo[] 
     */
    function getAllPersonPhotos() {
        $res = [];
        foreach ($this->listPersonPhotos() as $id)
            $res[] = $this->getPersonPhoto($id);
        return $res;
    }
    
    /**
     * @param Sample_Person_Photo $personPhoto 
     */
    function addPersonPhoto($personPhoto) {
        if (!is_a($personPhoto, 'Sample_Person_Photo')) trigger_error('$personPhoto must be an instance of Sample_Person_Photo', E_USER_ERROR);
        $this->listPersonPhotos();
        $this->_personPhotos[] = $personPhoto;
        
        if (is_array($personPhoto->_personAlbums) && !Ac_Util::sameInArray($this, $personPhoto->_personAlbums)) {
                $personPhoto->_personAlbums[] = $this;
        }
        
    }

    /**
     * @return Sample_Person_Photo  
     */
    function createPersonPhoto($values = array()) {
        $m = $this->getMapper('Sample_Person_Photo_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPersonPhoto($res);
        return $res;
    }
    

    function getPersonPhotoIds() {
        if ($this->_personPhotoIds === false) {
            $this->mapper->loadPersonPhotoIdsFor($this);
        }
        return $this->_personPhotoIds;
    }
    
    function setPersonPhotoIds($personPhotoIds) {
        if (!is_array($personPhotoIds)) trigger_error('$personPhotoIds must be an array', E_USER_ERROR);
        $this->_personPhotoIds = $personPhotoIds;
        $this->_personPhotosLoaded = false;
        $this->_personPhotos = false; 
    }
    
    function clearPersonPhotos() {
        $this->_personPhotos = array();
        $this->_personPhotosLoaded = true;
        $this->_personPhotoIds = false;
    }               
  
    
}

<?php

class Sample_Person_Album_Mapper extends Sample_Person_Album_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Person_Album_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Person_Album[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Person_Album_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'albumId';

    var $recordClass = 'Sample_Person_Album';

    var $tableName = '#__person_albums';

    var $id = 'Sample_Person_Album_Mapper';

    var $storage = 'Sample_Person_Album_Storage';

    var $columnNames = [ 0 => 'albumId', 1 => 'personId', 2 => 'albumName', ];

    var $defaults = [
            'albumId' => NULL,
            'personId' => 0,
            'albumName' => '\'\'',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'albumId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_person' => false,
            '_personPhotos' => false,
            '_personPhotosCount' => false,
            '_personPhotosLoaded' => false,
            '_personPhotoIds' => false,
        ]);
    }
    
    /**
     * @return Sample_Person_Album 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Person_Album_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Album 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Person_Album 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Person_Album 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Person_Album 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Person_Album 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Person_Album[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Person_Album[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Person_Album     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Person_Album     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Person_Album[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Person_Album[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'albumName';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Sample_Person_Album_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_personAlbums',
                'destCountVarName' => '_personAlbumsCount',
                'destLoadedVarName' => '_personAlbumsLoaded',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_personPhotos' => [
                'srcMapperClass' => 'Sample_Person_Album_Mapper',
                'destMapperClass' => 'Sample_Person_Photo_Mapper',
                'srcVarName' => '_personPhotos',
                'srcNNIdsVarName' => '_personPhotoIds',
                'srcCountVarName' => '_personPhotosCount',
                'srcLoadedVarName' => '_personPhotosLoaded',
                'destVarName' => '_personAlbums',
                'destCountVarName' => '_personAlbumsCount',
                'destLoadedVarName' => '_personAlbumsLoaded',
                'destNNIdsVarName' => '_personAlbumIds',
                'fieldLinks' => [
                    'personId' => 'personId',
                    'albumId' => 'albumId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPersonPhotoIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPersonAlbumIdsFor',
                ],
                'midTableName' => '#__album_photos',
                'fieldLinks2' => [
                    'personId' => 'personId',
                    'photoId' => 'photoId',
                ],
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'person' => [
                'relationId' => '_person',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPeople',
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getDestObjectMethod' => 'getPerson',
                'setDestObjectMethod' => 'setPerson',
                'clearDestObjectMethod' => 'clearPerson',
            ],
            'personPhotos' => [
                'relationId' => '_personPhotos',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personPhoto',
                'plural' => 'personPhotos',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadPersonPhotosFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonPhotos',
                'getSrcObjectsMapperMethod' => 'getOfPersonPhotos',
                'createDestObjectMethod' => 'createPersonPhoto',
                'getAllDestObjectsMethod' => 'getAllPersonPhotos',
                'listDestObjectsMethod' => 'listPersonPhotos',
                'countDestObjectsMethod' => 'countPersonPhotos',
                'getDestObjectMethod' => 'getPersonPhoto',
                'addDestObjectMethod' => 'addPersonPhoto',
                'isDestLoadedMethod' => 'isPersonPhotosLoaded',
                'loadDestIdsMapperMethod' => 'loadPersonPhotoIdsFor',
                'getDestIdsMethod' => 'getPersonPhotoIds',
                'setDestIdsMethod' => 'setPersonPhotoIds',
                'clearDestObjectsMethod' => 'clearPersonPhotos',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_person_albums_single'),

                'pluralCaption' => new Ac_Lang_String('sample_person_albums_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'albumId',
            ],
        ];
    }

    /**
     * @return Sample_Person_Album 
     */
    function loadByAlbumId ($albumId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('albumId').' = '.$this->getDb()->q($albumId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) several personAlbums of given one or more people 
     * @param Sample_Person_Album|array $people     
     * @return Sample_Person_Album|array of Sample_Person_Album objects  
     */
    function getOfPeople($people) {
        $rel = $this->getRelation('_person');
        $res = $rel->getSrc($people); 
        return $res;
    }
    
    /**
     * Loads several personAlbums of given one or more people 
     * @param Sample_Person|array $people of Sample_Person_Album objects      
     */
    function loadForPeople($people) {
        $rel = $this->getRelation('_person');
        return $rel->loadSrc($people); 
    }
    
    /**
     * Loads several people of given one or more personAlbums 
     * @param Sample_Person_Album|array $personAlbums     
     */
    function loadPeopleFor($personAlbums) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($personAlbums); 
    }

    /**
     * Returns (but not loads!) one or more personAlbums of given one or more personPhotos 
     * @param Sample_Person_Album|array $personPhotos     
     * @return Sample_Person_Album|array of Sample_Person_Album objects  
     */
    function getOfPersonPhotos($personPhotos) {
        $rel = $this->getRelation('_personPhotos');
        $res = $rel->getSrc($personPhotos); 
        return $res;
    }
    
    /**
     * Loads one or more personAlbums of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos of Sample_Person_Album objects      
     */
    function loadForPersonPhotos($personPhotos) {
        $rel = $this->getRelation('_personPhotos');
        return $rel->loadSrc($personPhotos); 
    }
    
    /**
     * Loads one or more personPhotos of given one or more personAlbums 
     * @param Sample_Person_Album|array $personAlbums     
     */
    function loadPersonPhotosFor($personAlbums) {
        $rel = $this->getRelation('_personPhotos');
        return $rel->loadDest($personAlbums); 
    }


    /**
     * @param Sample_Person_Album|array $personAlbums 
     */
     function loadPersonPhotoIdsFor($personAlbums) {
        $rel = $this->getRelation('_personPhotos');
        return $rel->loadDestNNIds($personAlbums); 
    }
    
    
}

<?php

class Sample_Person_Album_Storage extends Sample_Person_Album_Base_Storage {
  

}
<?php

class Sample_Person_Album_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__person_albums'; 

    var $recordClass = 'Sample_Person_Album'; 

    var $primaryKey = 'albumId'; 

    var $defaults = [
            'albumId' => NULL,
            'personId' => 0,
            'albumName' => '\'\'',
        ]; 

    var $autoincFieldName = 'albumId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'albumId',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'personPhotoIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Omni',
                        'midSrcKeys' => [
                            0 => 'personId',
                            1 => 'albumId',
                        ],
                        'midDestKeys' => [
                            0 => 'personId',
                            1 => 'photoId',
                        ],
                        'tableKeys' => [
                            0 => 'personId',
                            1 => 'photoId',
                        ],
                        'midTableAlias' => 'mid__personPhotos',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Person_Photo extends Sample_Person_Photo_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Person_Photo_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_person = false;

    var $_personAlbums = false;

    var $_personAlbumsCount = false;

    var $_personAlbumsLoaded = false;

    var $_personAlbumIds = false;

    var $_portraitPerson = false;

    var $_personPosts = false;

    var $_personPostsCount = false;

    var $_personPostsLoaded = false;

    var $photoId = NULL;

    var $personId = 0;

    var $filename = '';
    
    var $_mapperClass = 'Sample_Person_Photo_Mapper';
    
    /**
     * @var Sample_Person_Photo_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Photo_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'person', 1 => 'personAlbums', 2 => 'personAlbumIds', 3 => 'portraitPerson', 4 => 'personPosts', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'personAlbums' => 'personAlbums', 'personPosts' => 'personPosts', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'person' => 'Sample_Person', 'personAlbums' => 'Sample_Person_Album', 'portraitPerson' => 'Sample_Person', 'personPosts' => 'Sample_Person_Post', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'person' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_person_photo_person'),
                'relationId' => '_person',
                'referenceVarName' => '_person',
            ],
            'personAlbums' => [
                'className' => 'Sample_Person_Album',
                'mapperClass' => 'Sample_Person_Album_Mapper',

                'caption' => new Ac_Lang_String('sample_person_photo_person_albums'),
                'relationId' => '_personAlbums',
                'countVarName' => '_personAlbumsCount',
                'nnIdsVarName' => '_personAlbumIds',
                'referenceVarName' => '_personAlbums',
            ],
            'personAlbumIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Album_Mapper',
                ],
                'showInTable' => false,
            ],
            'portraitPerson' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',
                'otherModelIdInMethodsPrefix' => 'portrait',

                'caption' => new Ac_Lang_String('sample_person_photo_portrait_person'),
                'relationId' => '_portraitPerson',
                'referenceVarName' => '_portraitPerson',
            ],
            'personPosts' => [
                'className' => 'Sample_Person_Post',
                'mapperClass' => 'Sample_Person_Post_Mapper',

                'caption' => new Ac_Lang_String('sample_person_photo_person_posts'),
                'relationId' => '_personPosts',
                'countVarName' => '_personPostsCount',
                'referenceVarName' => '_personPosts',
            ],
            'photoId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_person_photo_photo_id'),
            ],
            'personId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'person',

                'caption' => new Ac_Lang_String('sample_person_photo_person_id'),
            ],
            'filename' => [
                'maxLength' => '45',

                'caption' => new Ac_Lang_String('sample_person_photo_filename'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Person 
     */
    function getPerson() {
        if ($this->_person === false) {
            $this->mapper->loadPeopleFor($this);
            
        }
        return $this->_person;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function setPerson($person) {
        if ($person === false) $this->_person = false;
        elseif ($person === null) $this->_person = null;
        else {
            if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_person) && !Ac_Util::sameObject($this->_person, $person)) { 
                $this->_person = $person;
            }
        }
    }
    
    function clearPerson() {
        $this->person = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPerson($res);
        return $res;
    }

    

    function countPersonAlbums() {
        if (is_array($this->_personAlbums)) return count($this->_personAlbums);
        if ($this->_personAlbumsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_personAlbums');
        }
        return $this->_personAlbumsCount;
        
    }

    function listPersonAlbums() {
        if (!$this->_personAlbumsLoaded) {
            $this->mapper->loadPersonAlbumsFor($this);
        }
        return array_keys($this->_personAlbums);
    }
    
    /**
     * @return bool
     */
    function isPersonAlbumsLoaded() {
        return $this->_personAlbumsLoaded;
    }
    
    /**
     * @return Sample_Person_Album 
     */
    function getPersonAlbum($id) {
        if (!$this->_personAlbumsLoaded) {
            $this->mapper->loadPersonAlbumsFor($this);
        }
        
        if (!isset($this->_personAlbums[$id])) trigger_error ('No such Person album: \''.$id.'\'', E_USER_ERROR);
        return $this->_personAlbums[$id];
    }
    
    /**
     * @return Sample_Person_Album 
     */
    function getPersonAlbumsItem($id) {
        return $this->getPersonAlbum($id);
    }
    
    /**
     * @return Sample_Person_Album[] 
     */
    function getAllPersonAlbums() {
        $res = [];
        foreach ($this->listPersonAlbums() as $id)
            $res[] = $this->getPersonAlbum($id);
        return $res;
    }
    
    /**
     * @param Sample_Person_Album $personAlbum 
     */
    function addPersonAlbum($personAlbum) {
        if (!is_a($personAlbum, 'Sample_Person_Album')) trigger_error('$personAlbum must be an instance of Sample_Person_Album', E_USER_ERROR);
        $this->listPersonAlbums();
        $this->_personAlbums[] = $personAlbum;
        
        if (is_array($personAlbum->_personPhotos) && !Ac_Util::sameInArray($this, $personAlbum->_personPhotos)) {
                $personAlbum->_personPhotos[] = $this;
        }
        
    }

    /**
     * @return Sample_Person_Album  
     */
    function createPersonAlbum($values = array()) {
        $m = $this->getMapper('Sample_Person_Album_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPersonAlbum($res);
        return $res;
    }
    

    function getPersonAlbumIds() {
        if ($this->_personAlbumIds === false) {
            $this->mapper->loadPersonAlbumIdsFor($this);
        }
        return $this->_personAlbumIds;
    }
    
    function setPersonAlbumIds($personAlbumIds) {
        if (!is_array($personAlbumIds)) trigger_error('$personAlbumIds must be an array', E_USER_ERROR);
        $this->_personAlbumIds = $personAlbumIds;
        $this->_personAlbumsLoaded = false;
        $this->_personAlbums = false; 
    }
    
    function clearPersonAlbums() {
        $this->_personAlbums = array();
        $this->_personAlbumsLoaded = true;
        $this->_personAlbumIds = false;
    }               
        
    
    /**
     * @return Sample_Person 
     */
    function getPortraitPerson() {
        if ($this->_portraitPerson === false) {
            $this->mapper->loadPortraitPeopleFor($this);
            
        }
        return $this->_portraitPerson;
    }
    
    /**
     * @param Sample_Person $portraitPerson 
     */
    function setPortraitPerson($portraitPerson) {
        if ($portraitPerson === false) $this->_portraitPerson = false;
        elseif ($portraitPerson === null) $this->_portraitPerson = null;
        else {
            if (!is_a($portraitPerson, 'Sample_Person')) trigger_error('$portraitPerson must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_portraitPerson) && !Ac_Util::sameObject($this->_portraitPerson, $portraitPerson)) { 
                $this->_portraitPerson = $portraitPerson;
            }
        }
    }
    
    function clearPortraitPerson() {
        $this->portraitPerson = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPortraitPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPortraitPerson($res);
        return $res;
    }

    

    function countPersonPosts() {
        if (is_array($this->_personPosts)) return count($this->_personPosts);
        if ($this->_personPostsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_personPosts');
        }
        return $this->_personPostsCount;
        
    }

    function listPersonPosts() {
        if (!$this->_personPostsLoaded) {
            $this->mapper->loadPersonPostsFor($this);
        }
        return array_keys($this->_personPosts);
    }
    
    /**
     * @return bool
     */
    function isPersonPostsLoaded() {
        return $this->_personPostsLoaded;
    }
    
    /**
     * @return Sample_Person_Post 
     */
    function getPersonPost($id) {
        if (!$this->_personPostsLoaded) {
            $this->mapper->loadPersonPostsFor($this);
        }
        
        if (!isset($this->_personPosts[$id])) trigger_error ('No such Person post: \''.$id.'\'', E_USER_ERROR);
        return $this->_personPosts[$id];
    }
    
    /**
     * @return Sample_Person_Post 
     */
    function getPersonPostsItem($id) {
        return $this->getPersonPost($id);
    }
    
    /**
     * @return Sample_Person_Post[] 
     */
    function getAllPersonPosts() {
        $res = [];
        foreach ($this->listPersonPosts() as $id)
            $res[] = $this->getPersonPost($id);
        return $res;
    }
    
    /**
     * @param Sample_Person_Post $personPost 
     */
    function addPersonPost($personPost) {
        if (!is_a($personPost, 'Sample_Person_Post')) trigger_error('$personPost must be an instance of Sample_Person_Post', E_USER_ERROR);
        $this->listPersonPosts();
        $this->_personPosts[] = $personPost;
        
        $personPost->_personPhoto = $this;
        
    }

    /**
     * @return Sample_Person_Post  
     */
    function createPersonPost($values = array()) {
        $m = $this->getMapper('Sample_Person_Post_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPersonPost($res);
        return $res;
    }
    
  
    
}

<?php

class Sample_Person_Photo_Mapper extends Sample_Person_Photo_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Person_Photo_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Person_Photo[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Person_Photo_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'photoId';

    var $recordClass = 'Sample_Person_Photo';

    var $tableName = '#__person_photos';

    var $id = 'Sample_Person_Photo_Mapper';

    var $storage = 'Sample_Person_Photo_Storage';

    var $columnNames = [ 0 => 'photoId', 1 => 'personId', 2 => 'filename', ];

    var $defaults = [
            'photoId' => NULL,
            'personId' => NULL,
            'filename' => '',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'photoId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_person' => false,
            '_personAlbums' => false,
            '_personAlbumsCount' => false,
            '_personAlbumsLoaded' => false,
            '_personAlbumIds' => false,
            '_portraitPerson' => false,
            '_personPosts' => false,
            '_personPostsCount' => false,
            '_personPostsLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Person_Photo 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Person_Photo_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Photo 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Person_Photo 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Person_Photo 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Person_Photo 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Person_Photo 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Person_Photo[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Person_Photo[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Person_Photo     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Person_Photo     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Person_Photo[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Person_Photo[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'filename';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Sample_Person_Photo_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_personPhotos',
                'destCountVarName' => '_personPhotosCount',
                'destLoadedVarName' => '_personPhotosLoaded',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_personAlbums' => [
                'srcMapperClass' => 'Sample_Person_Photo_Mapper',
                'destMapperClass' => 'Sample_Person_Album_Mapper',
                'srcVarName' => '_personAlbums',
                'srcNNIdsVarName' => '_personAlbumIds',
                'srcCountVarName' => '_personAlbumsCount',
                'srcLoadedVarName' => '_personAlbumsLoaded',
                'destVarName' => '_personPhotos',
                'destCountVarName' => '_personPhotosCount',
                'destLoadedVarName' => '_personPhotosLoaded',
                'destNNIdsVarName' => '_personPhotoIds',
                'fieldLinks' => [
                    'personId' => 'personId',
                    'photoId' => 'photoId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPersonAlbumIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPersonPhotoIdsFor',
                ],
                'midTableName' => '#__album_photos',
                'fieldLinks2' => [
                    'personId' => 'personId',
                    'albumId' => 'albumId',
                ],
            ],
            '_portraitPerson' => [
                'srcMapperClass' => 'Sample_Person_Photo_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_portraitPerson',
                'destVarName' => '_portraitPersonPhoto',
                'fieldLinks' => [
                    'personId' => 'personId',
                    'photoId' => 'portraitId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
            ],
            '_personPosts' => [
                'srcMapperClass' => 'Sample_Person_Photo_Mapper',
                'destMapperClass' => 'Sample_Person_Post_Mapper',
                'srcVarName' => '_personPosts',
                'srcCountVarName' => '_personPostsCount',
                'srcLoadedVarName' => '_personPostsLoaded',
                'destVarName' => '_personPhoto',
                'fieldLinks' => [
                    'personId' => 'personId',
                    'photoId' => 'photoId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'person' => [
                'relationId' => '_person',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPeople',
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getDestObjectMethod' => 'getPerson',
                'setDestObjectMethod' => 'setPerson',
                'clearDestObjectMethod' => 'clearPerson',
            ],
            'personAlbums' => [
                'relationId' => '_personAlbums',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personAlbum',
                'plural' => 'personAlbums',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadPersonAlbumsFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonAlbums',
                'getSrcObjectsMapperMethod' => 'getOfPersonAlbums',
                'createDestObjectMethod' => 'createPersonAlbum',
                'getAllDestObjectsMethod' => 'getAllPersonAlbums',
                'listDestObjectsMethod' => 'listPersonAlbums',
                'countDestObjectsMethod' => 'countPersonAlbums',
                'getDestObjectMethod' => 'getPersonAlbum',
                'addDestObjectMethod' => 'addPersonAlbum',
                'isDestLoadedMethod' => 'isPersonAlbumsLoaded',
                'loadDestIdsMapperMethod' => 'loadPersonAlbumIdsFor',
                'getDestIdsMethod' => 'getPersonAlbumIds',
                'setDestIdsMethod' => 'setPersonAlbumIds',
                'clearDestObjectsMethod' => 'clearPersonAlbums',
            ],
            'portraitPerson' => [
                'relationId' => '_portraitPerson',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'portraitPerson',
                'plural' => 'portraitPeople',
                'isReferenced' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPortraitPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPortraitPeople',
                'getSrcObjectsMapperMethod' => 'getOfPortraitPeople',
                'createDestObjectMethod' => 'createPortraitPerson',
                'getDestObjectMethod' => 'getPortraitPerson',
                'setDestObjectMethod' => 'setPortraitPerson',
                'clearDestObjectMethod' => 'clearPortraitPerson',
            ],
            'personPosts' => [
                'relationId' => '_personPosts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personPost',
                'plural' => 'personPosts',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadPersonPostsFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonPosts',
                'getSrcObjectsMapperMethod' => 'getOfPersonPosts',
                'createDestObjectMethod' => 'createPersonPost',
                'getAllDestObjectsMethod' => 'getAllPersonPosts',
                'listDestObjectsMethod' => 'listPersonPosts',
                'countDestObjectsMethod' => 'countPersonPosts',
                'getDestObjectMethod' => 'getPersonPost',
                'addDestObjectMethod' => 'addPersonPost',
                'isDestLoadedMethod' => 'isPersonPostsLoaded',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_person_photos_single'),

                'pluralCaption' => new Ac_Lang_String('sample_person_photos_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'photoId',
            ],
        ];
    }

    /**
     * @return Sample_Person_Photo 
     */
    function loadByPhotoId ($photoId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('photoId').' = '.$this->getDb()->q($photoId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) several personPhotos of given one or more people 
     * @param Sample_Person_Photo|array $people     
     * @return Sample_Person_Photo|array of Sample_Person_Photo objects  
     */
    function getOfPeople($people) {
        $rel = $this->getRelation('_person');
        $res = $rel->getSrc($people); 
        return $res;
    }
    
    /**
     * Loads several personPhotos of given one or more people 
     * @param Sample_Person|array $people of Sample_Person_Photo objects      
     */
    function loadForPeople($people) {
        $rel = $this->getRelation('_person');
        return $rel->loadSrc($people); 
    }
    
    /**
     * Loads several people of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos     
     */
    function loadPeopleFor($personPhotos) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($personPhotos); 
    }

    /**
     * Returns (but not loads!) one or more personPhotos of given one or more personAlbums 
     * @param Sample_Person_Photo|array $personAlbums     
     * @return Sample_Person_Photo|array of Sample_Person_Photo objects  
     */
    function getOfPersonAlbums($personAlbums) {
        $rel = $this->getRelation('_personAlbums');
        $res = $rel->getSrc($personAlbums); 
        return $res;
    }
    
    /**
     * Loads one or more personPhotos of given one or more personAlbums 
     * @param Sample_Person_Album|array $personAlbums of Sample_Person_Photo objects      
     */
    function loadForPersonAlbums($personAlbums) {
        $rel = $this->getRelation('_personAlbums');
        return $rel->loadSrc($personAlbums); 
    }
    
    /**
     * Loads one or more personAlbums of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos     
     */
    function loadPersonAlbumsFor($personPhotos) {
        $rel = $this->getRelation('_personAlbums');
        return $rel->loadDest($personPhotos); 
    }


    /**
     * @param Sample_Person_Photo|array $personPhotos 
     */
     function loadPersonAlbumIdsFor($personPhotos) {
        $rel = $this->getRelation('_personAlbums');
        return $rel->loadDestNNIds($personPhotos); 
    }
    
    /**
     * Returns (but not loads!) one or more personPhotos of given one or more people 
     * @param Sample_Person_Photo|array $portraitPeople     
     * @return Sample_Person_Photo|array of Sample_Person_Photo objects  
     */
    function getOfPortraitPeople($portraitPeople) {
        $rel = $this->getRelation('_portraitPerson');
        $res = $rel->getSrc($portraitPeople); 
        return $res;
    }
    
    /**
     * Loads one or more personPhotos of given one or more people 
     * @param Sample_Person|array $portraitPeople of Sample_Person_Photo objects      
     */
    function loadForPortraitPeople($portraitPeople) {
        $rel = $this->getRelation('_portraitPerson');
        return $rel->loadSrc($portraitPeople); 
    }
    
    /**
     * Loads one or more people of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos     
     */
    function loadPortraitPeopleFor($personPhotos) {
        $rel = $this->getRelation('_portraitPerson');
        return $rel->loadDest($personPhotos); 
    }

    /**
     * Returns (but not loads!) one or more personPhotos of given one or more personPosts 
     * @param Sample_Person_Photo|array $personPosts     
     * @return array of Sample_Person_Photo objects  
     */
    function getOfPersonPosts($personPosts) {
        $rel = $this->getRelation('_personPosts');
        $res = $rel->getSrc($personPosts); 
        return $res;
    }
    
    /**
     * Loads one or more personPhotos of given one or more personPosts 
     * @param Sample_Person_Post|array $personPosts of Sample_Person_Photo objects      
     */
    function loadForPersonPosts($personPosts) {
        $rel = $this->getRelation('_personPosts');
        return $rel->loadSrc($personPosts); 
    }
    
    /**
     * Loads one or more personPosts of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos     
     */
    function loadPersonPostsFor($personPhotos) {
        $rel = $this->getRelation('_personPosts');
        return $rel->loadDest($personPhotos); 
    }

    
}

<?php

class Sample_Person_Photo_Storage extends Sample_Person_Photo_Base_Storage {
  

}
<?php

class Sample_Person_Photo_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__person_photos'; 

    var $recordClass = 'Sample_Person_Photo'; 

    var $primaryKey = 'photoId'; 

    var $defaults = [
            'photoId' => NULL,
            'personId' => NULL,
            'filename' => '',
        ]; 

    var $autoincFieldName = 'photoId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'photoId',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'personAlbumIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Omni',
                        'midSrcKeys' => [
                            0 => 'personId',
                            1 => 'photoId',
                        ],
                        'midDestKeys' => [
                            0 => 'personId',
                            1 => 'albumId',
                        ],
                        'tableKeys' => [
                            0 => 'personId',
                            1 => 'albumId',
                        ],
                        'midTableAlias' => 'mid__personAlbums',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Person_Post extends Sample_Person_Post_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Person_Post_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_publish = false;

    var $_person = false;

    var $_personPhoto = false;

    var $id = NULL;

    var $personId = NULL;

    var $photoId = NULL;

    var $title = '';

    var $content = NULL;

    var $pubId = NULL;
    
    var $_mapperClass = 'Sample_Person_Post_Mapper';
    
    /**
     * @var Sample_Person_Post_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Post_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'publish', 1 => 'person', 2 => 'personPhoto', ]));
    }
    
    
 
    protected function listOwnAssociations() {
        return [ 'publish' => 'Sample_Publish', 'person' => 'Sample_Person', 'personPhoto' => 'Sample_Person_Photo', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'publish' => [
                'className' => 'Sample_Publish',
                'mapperClass' => 'Sample_Publish_ImplMapper',

                'caption' => new Ac_Lang_String('sample_person_post_publish'),
                'relationId' => '_publish',
                'referenceVarName' => '_publish',
            ],
            'person' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_person_post_person'),
                'relationId' => '_person',
                'referenceVarName' => '_person',
            ],
            'personPhoto' => [
                'className' => 'Sample_Person_Photo',
                'mapperClass' => 'Sample_Person_Photo_Mapper',

                'caption' => new Ac_Lang_String('sample_person_post_person_photo'),
                'relationId' => '_personPhoto',
                'referenceVarName' => '_personPhoto',
            ],
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_person_post_id'),
            ],
            'personId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_post_person_id'),
            ],
            'photoId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Photo_Mapper',
                ],
                'objectPropertyName' => 'personPhoto',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_post_photo_id'),
            ],
            'title' => [
                'maxLength' => '255',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_post_title'),
            ],
            'content' => [
                'controlType' => 'textArea',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_post_content'),
            ],
            'pubId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Publish_ImplMapper',
                ],
                'objectPropertyName' => 'publish',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_person_post_pub_id'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Publish 
     */
    function getPublish() {
        if ($this->_publish === false) {
            $this->mapper->loadPublishFor($this);
            
        }
        return $this->_publish;
    }
    
    /**
     * @param Sample_Publish $publish 
     */
    function setPublish($publish) {
        if ($publish === false) $this->_publish = false;
        elseif ($publish === null) $this->_publish = null;
        else {
            if (!is_a($publish, 'Sample_Publish')) trigger_error('$publish must be an instance of Sample_Publish', E_USER_ERROR);
            if (!is_object($this->_publish) && !Ac_Util::sameObject($this->_publish, $publish)) { 
                $this->_publish = $publish;
            }
        }
    }
    
    function clearPublish() {
        $this->publish = null;
    }

    /**
     * @return Sample_Publish  
     */
    function createPublish($values = array()) {
        $m = $this->getMapper('Sample_Publish_ImplMapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPublish($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Person 
     */
    function getPerson() {
        if ($this->_person === false) {
            $this->mapper->loadPeopleFor($this);
            
        }
        return $this->_person;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function setPerson($person) {
        if ($person === false) $this->_person = false;
        elseif ($person === null) $this->_person = null;
        else {
            if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_person) && !Ac_Util::sameObject($this->_person, $person)) { 
                $this->_person = $person;
            }
        }
    }
    
    function clearPerson() {
        $this->person = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPerson($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Person_Photo 
     */
    function getPersonPhoto() {
        if ($this->_personPhoto === false) {
            $this->mapper->loadPersonPhotosFor($this);
            
        }
        return $this->_personPhoto;
    }
    
    /**
     * @param Sample_Person_Photo $personPhoto 
     */
    function setPersonPhoto($personPhoto) {
        if ($personPhoto === false) $this->_personPhoto = false;
        elseif ($personPhoto === null) $this->_personPhoto = null;
        else {
            if (!is_a($personPhoto, 'Sample_Person_Photo')) trigger_error('$personPhoto must be an instance of Sample_Person_Photo', E_USER_ERROR);
            if (!is_object($this->_personPhoto) && !Ac_Util::sameObject($this->_personPhoto, $personPhoto)) { 
                $this->_personPhoto = $personPhoto;
            }
        }
    }
    
    function clearPersonPhoto() {
        $this->personPhoto = null;
    }

    /**
     * @return Sample_Person_Photo  
     */
    function createPersonPhoto($values = array()) {
        $m = $this->getMapper('Sample_Person_Photo_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPersonPhoto($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Person_Post_Mapper extends Sample_Person_Post_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Person_Post_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Person_Post[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Person_Post_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Person_Post';

    var $tableName = '#__person_posts';

    var $id = 'Sample_Person_Post_Mapper';

    var $storage = 'Sample_Person_Post_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'personId', 2 => 'photoId', 3 => 'title', 4 => 'content', 5 => 'pubId', ];

    var $nullableColumns = [ 0 => 'personId', 1 => 'photoId', 2 => 'title', 3 => 'content', 4 => 'pubId', ];

    var $defaults = [
            'id' => NULL,
            'personId' => NULL,
            'photoId' => NULL,
            'title' => '',
            'content' => '',
            'pubId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'publish' => [
                'class' => 'Sample_Publish_MapperMixable',
                'colMap' => [
                    'id' => 'pubId',
                ],
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_publish' => false,
            '_person' => false,
            '_personPhoto' => false,
        ]);
    }
    
    /**
     * @return Sample_Person_Post 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Person_Post_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Person_Post 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Person_Post 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Person_Post 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Person_Post 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Person_Post 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Person_Post[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Person_Post[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Person_Post     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Person_Post     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Person_Post[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Person_Post[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_publish' => [
                'srcMapperClass' => 'Sample_Person_Post_Mapper',
                'destMapperClass' => 'Sample_Publish_ImplMapper',
                'srcVarName' => '_publish',
                'fieldLinks' => [
                    'pubId' => 'id',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_person' => [
                'srcMapperClass' => 'Sample_Person_Post_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_personPosts',
                'destCountVarName' => '_personPostsCount',
                'destLoadedVarName' => '_personPostsLoaded',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_personPhoto' => [
                'srcMapperClass' => 'Sample_Person_Post_Mapper',
                'destMapperClass' => 'Sample_Person_Photo_Mapper',
                'srcVarName' => '_personPhoto',
                'destVarName' => '_personPosts',
                'destCountVarName' => '_personPostsCount',
                'destLoadedVarName' => '_personPostsLoaded',
                'fieldLinks' => [
                    'personId' => 'personId',
                    'photoId' => 'photoId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'publish' => [
                'relationId' => '_publish',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'publish',
                'plural' => 'publish',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPublishFor',
                'loadSrcObjectsMapperMethod' => 'loadForPublish',
                'getSrcObjectsMapperMethod' => 'getOfPublish',
                'createDestObjectMethod' => 'createPublish',
                'getDestObjectMethod' => 'getPublish',
                'setDestObjectMethod' => 'setPublish',
                'clearDestObjectMethod' => 'clearPublish',
            ],
            'person' => [
                'relationId' => '_person',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPeople',
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getDestObjectMethod' => 'getPerson',
                'setDestObjectMethod' => 'setPerson',
                'clearDestObjectMethod' => 'clearPerson',
            ],
            'personPhoto' => [
                'relationId' => '_personPhoto',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'personPhoto',
                'plural' => 'personPhotos',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPersonPhotosFor',
                'loadSrcObjectsMapperMethod' => 'loadForPersonPhotos',
                'getSrcObjectsMapperMethod' => 'getOfPersonPhotos',
                'createDestObjectMethod' => 'createPersonPhoto',
                'getDestObjectMethod' => 'getPersonPhoto',
                'setDestObjectMethod' => 'setPersonPhoto',
                'clearDestObjectMethod' => 'clearPersonPhoto',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_person_posts_single'),

                'pluralCaption' => new Ac_Lang_String('sample_person_posts_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
            'idxPubId' => [
                0 => 'pubId',
            ],
        ];
    }

    /**
     * @return Sample_Person_Post 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Person_Post 
     */
    function loadByPubId ($pubId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('pubId').' = '.$this->getDb()->q($pubId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more personPosts of given one or more publish 
     * @param Sample_Person_Post|array $publish     
     * @return Sample_Person_Post|array of Sample_Person_Post objects  
     */
    function getOfPublish($publish) {
        $rel = $this->getRelation('_publish');
        $res = $rel->getSrc($publish); 
        return $res;
    }
    
    /**
     * Loads one or more personPosts of given one or more publish 
     * @param Sample_Publish|array $publish of Sample_Person_Post objects      
     */
    function loadForPublish($publish) {
        $rel = $this->getRelation('_publish');
        return $rel->loadSrc($publish); 
    }
    
    /**
     * Loads one or more publish of given one or more personPosts 
     * @param Sample_Person_Post|array $personPosts     
     */
    function loadPublishFor($personPosts) {
        $rel = $this->getRelation('_publish');
        return $rel->loadDest($personPosts); 
    }

    /**
     * Returns (but not loads!) several personPosts of given one or more people 
     * @param Sample_Person_Post|array $people     
     * @return Sample_Person_Post|array of Sample_Person_Post objects  
     */
    function getOfPeople($people) {
        $rel = $this->getRelation('_person');
        $res = $rel->getSrc($people); 
        return $res;
    }
    
    /**
     * Loads several personPosts of given one or more people 
     * @param Sample_Person|array $people of Sample_Person_Post objects      
     */
    function loadForPeople($people) {
        $rel = $this->getRelation('_person');
        return $rel->loadSrc($people); 
    }
    
    /**
     * Loads several people of given one or more personPosts 
     * @param Sample_Person_Post|array $personPosts     
     */
    function loadPeopleFor($personPosts) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($personPosts); 
    }

    /**
     * Returns (but not loads!) several personPosts of given one or more personPhotos 
     * @param Sample_Person_Post|array $personPhotos     
     * @return Sample_Person_Post|array of Sample_Person_Post objects  
     */
    function getOfPersonPhotos($personPhotos) {
        $rel = $this->getRelation('_personPhoto');
        $res = $rel->getSrc($personPhotos); 
        return $res;
    }
    
    /**
     * Loads several personPosts of given one or more personPhotos 
     * @param Sample_Person_Photo|array $personPhotos of Sample_Person_Post objects      
     */
    function loadForPersonPhotos($personPhotos) {
        $rel = $this->getRelation('_personPhoto');
        return $rel->loadSrc($personPhotos); 
    }
    
    /**
     * Loads several personPhotos of given one or more personPosts 
     * @param Sample_Person_Post|array $personPosts     
     */
    function loadPersonPhotosFor($personPosts) {
        $rel = $this->getRelation('_personPhoto');
        return $rel->loadDest($personPosts); 
    }

    
}

<?php

class Sample_Person_Post_Storage extends Sample_Person_Post_Base_Storage {
  

}
<?php

class Sample_Person_Post_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__person_posts'; 

    var $recordClass = 'Sample_Person_Post'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'personId' => NULL,
            'photoId' => NULL,
            'title' => '',
            'content' => '',
            'pubId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'personId', 1 => 'photoId', 2 => 'title', 3 => 'content', 4 => 'pubId', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
    'idxPubId' => [
        0 => 'pubId',
    ],
]; 
 
    
}

<?php

class Sample_Publish extends Sample_Publish_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Publish_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    var $_hasDefaults = true;

    var $_authorPerson = false;

    var $_editorPerson = false;

    var $id = NULL;

    var $sharedObjectType = '';

    var $published = 1;

    var $deleted = 0;

    var $publishUp = '0000-00-00 00:00:00';

    var $publishDown = '0000-00-00 00:00:00';

    var $authorId = NULL;

    var $editorId = NULL;

    var $pubChannelId = NULL;

    var $dateCreated = '0000-00-00 00:00:00';

    var $dateModified = '0000-00-00 00:00:00';

    var $dateDeleted = '0000-00-00 00:00:00';

    protected $preserveMetaCache = true;
    
    /**
     * @var Sample_Publish_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Sample_Publish';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [ 0 => 'authorPerson', 1 => 'editorPerson', ]);
    }
    
 
    protected function listOwnAssociations() {
        return [ 'authorPerson' => 'Sample_Person', 'editorPerson' => 'Sample_Person', ];
    }

    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'authorPerson' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',
                'otherModelIdInMethodsPrefix' => 'author',

                'caption' => new Ac_Lang_String('sample_publish_author_person'),
                'relationId' => '_authorPerson',
                'referenceVarName' => '_authorPerson',
            ],
            'editorPerson' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',
                'otherModelIdInMethodsPrefix' => 'editor',

                'caption' => new Ac_Lang_String('sample_publish_editor_person'),
                'relationId' => '_editorPerson',
                'referenceVarName' => '_editorPerson',
            ],
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_publish_id'),
            ],
            'sharedObjectType' => [
                'maxLength' => '50',

                'caption' => new Ac_Lang_String('sample_publish_shared_object_type'),
            ],
            'published' => [
                'dataType' => 'bool',
                'controlType' => 'selectList',
                'maxLength' => '1',
                'valueList' => [
                    0 => 'No',
                    1 => 'Yes',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_published'),
            ],
            'deleted' => [
                'dataType' => 'bool',
                'controlType' => 'selectList',
                'maxLength' => '1',
                'valueList' => [
                    0 => 'No',
                    1 => 'Yes',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_deleted'),
            ],
            'publishUp' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_publish_up'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'publishDown' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_publish_down'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'authorId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'authorPerson',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_author_id'),
            ],
            'editorId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'editorPerson',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_editor_id'),
            ],
            'pubChannelId' => [
                'maxLength' => '255',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_publish_pub_channel_id'),
            ],
            'dateCreated' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',

                'caption' => new Ac_Lang_String('sample_publish_date_created'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'dateModified' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',

                'caption' => new Ac_Lang_String('sample_publish_date_modified'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'dateDeleted' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',

                'caption' => new Ac_Lang_String('sample_publish_date_deleted'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Sample_Person 
     */
    function getAuthorPerson() {
        if ($this->_authorPerson === false) {
            $this->mapper->loadAuthorPeopleFor($this->mixin);
            
        }
        return $this->_authorPerson;
    }
    
    /**
     * @param Sample_Person $authorPerson 
     */
    function setAuthorPerson($authorPerson) {
        if ($authorPerson === false) $this->_authorPerson = false;
        elseif ($authorPerson === null) $this->_authorPerson = null;
        else {
            if (!is_a($authorPerson, 'Sample_Person')) trigger_error('$authorPerson must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_authorPerson) && !Ac_Util::sameObject($this->_authorPerson, $authorPerson)) { 
                $this->_authorPerson = $authorPerson;
            }
        }
    }
    
    function clearAuthorPerson() {
        $this->authorPerson = null;
    }

    /**
     * @return Sample_Person  
     */
    function createAuthorPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setAuthorPerson($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Person 
     */
    function getEditorPerson() {
        if ($this->_editorPerson === false) {
            $this->mapper->loadEditorPeopleFor($this->mixin);
            
        }
        return $this->_editorPerson;
    }
    
    /**
     * @param Sample_Person $editorPerson 
     */
    function setEditorPerson($editorPerson) {
        if ($editorPerson === false) $this->_editorPerson = false;
        elseif ($editorPerson === null) $this->_editorPerson = null;
        else {
            if (!is_a($editorPerson, 'Sample_Person')) trigger_error('$editorPerson must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_editorPerson) && !Ac_Util::sameObject($this->_editorPerson, $editorPerson)) { 
                $this->_editorPerson = $editorPerson;
            }
        }
    }
    
    function clearEditorPerson() {
        $this->editorPerson = null;
    }

    /**
     * @return Sample_Person  
     */
    function createEditorPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setEditorPerson($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Publish_ImplMapper extends Sample_Publish_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Publish_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Publish[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Publish_Base_ImplMapper extends Ac_Model_Mapper {

    protected $identifierField = NULL;

    var $pk = 'id';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__publish';

    var $id = 'Sample_Publish_ImplMapper';

    var $storage = 'Sample_Publish_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'sharedObjectType', 2 => 'published', 3 => 'deleted', 4 => 'publishUp', 5 => 'publishDown', 6 => 'authorId', 7 => 'editorId', 8 => 'pubChannelId', 9 => 'dateCreated', 10 => 'dateModified', 11 => 'dateDeleted', ];

    var $nullableColumns = [ 0 => 'published', 1 => 'deleted', 2 => 'publishUp', 3 => 'publishDown', 4 => 'authorId', 5 => 'editorId', 6 => 'pubChannelId', ];

    var $defaults = [
            'id' => NULL,
            'sharedObjectType' => NULL,
            'published' => 1,
            'deleted' => 0,
            'publishUp' => '0000-00-00 00:00:00',
            'publishDown' => '0000-00-00 00:00:00',
            'authorId' => NULL,
            'editorId' => NULL,
            'pubChannelId' => NULL,
            'dateCreated' => '0000-00-00 00:00:00',
            'dateModified' => '0000-00-00 00:00:00',
            'dateDeleted' => '0000-00-00 00:00:00',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'class' => 'Ac_Model_Typer_ExtraTable',
                'tableName' => '#__publish',
                'objectTypeField' => 'sharedObjectType',
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_authorPerson' => false,
            '_editorPerson' => false,
        ]);
    }
    
    /**
     * @return Sample_Publish 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Publish_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Publish 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Publish 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Publish 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Publish 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Publish 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Publish[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Publish[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Publish     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Publish     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Publish[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Publish[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'pubChannelId';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_authorPerson' => [
                'srcMapperClass' => 'Sample_Publish_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_authorPerson',
                'destVarName' => '_authorPublish',
                'destCountVarName' => '_authorPublishCount',
                'destLoadedVarName' => '_authorPublishLoaded',
                'fieldLinks' => [
                    'authorId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_editorPerson' => [
                'srcMapperClass' => 'Sample_Publish_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_editorPerson',
                'destVarName' => '_editorPublish',
                'destCountVarName' => '_editorPublishCount',
                'destLoadedVarName' => '_editorPublishLoaded',
                'fieldLinks' => [
                    'editorId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_publish_single'),

                'pluralCaption' => new Ac_Lang_String('sample_publish_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
            'idxPubChannelId' => [
                0 => 'pubChannelId',
            ],
        ];
    }

    /**
     * @return Sample_Publish 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Publish 
     */
    function loadByPubChannelId ($pubChannelId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('pubChannelId').' = '.$this->getDb()->q($pubChannelId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Publish_Storage extends Sample_Publish_Base_Storage {
  

}
<?php

class Sample_Publish_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__publish'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'sharedObjectType' => NULL,
            'published' => 1,
            'deleted' => 0,
            'publishUp' => '0000-00-00 00:00:00',
            'publishDown' => '0000-00-00 00:00:00',
            'authorId' => NULL,
            'editorId' => NULL,
            'pubChannelId' => NULL,
            'dateCreated' => '0000-00-00 00:00:00',
            'dateModified' => '0000-00-00 00:00:00',
            'dateDeleted' => '0000-00-00 00:00:00',
        ]; 

    var $nullableColumns = [ 0 => 'published', 1 => 'deleted', 2 => 'publishUp', 3 => 'publishDown', 4 => 'authorId', 5 => 'editorId', 6 => 'pubChannelId', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
    'idxPubChannelId' => [
        0 => 'pubChannelId',
    ],
]; 
 
    
}

<?php 

class Sample_Publish_MapperMixable extends Sample_Publish_Base_ExtraTable {
    
}

<?php 

class Sample_Publish_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = true;
    
    protected $modelMixable = 'Sample_Publish';
    
    protected $implMapper = 'Sample_Publish_ImplMapper';
    
    protected $objectTypeField = 'sharedObjectType';
    
    protected $modelMixableId = 'Sample_Publish';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_authorPerson' => [
                'srcMapperClass' => 'Sample_Publish_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_authorPerson',
                'destVarName' => '_authorPublish',
                'destCountVarName' => '_authorPublishCount',
                'destLoadedVarName' => '_authorPublishLoaded',
                'fieldLinks' => [
                    'authorId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_editorPerson' => [
                'srcMapperClass' => 'Sample_Publish_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_editorPerson',
                'destVarName' => '_editorPublish',
                'destCountVarName' => '_editorPublishCount',
                'destLoadedVarName' => '_editorPublishLoaded',
                'fieldLinks' => [
                    'editorId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'authorPerson' => [
                'relationId' => '_authorPerson',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'authorPerson',
                'plural' => 'authorPeople',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadAuthorPeopleFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfAuthorPeople',
                'createDestObjectMethod' => 'createAuthorPerson',
                'getDestObjectMethod' => 'getAuthorPerson',
                'setDestObjectMethod' => 'setAuthorPerson',
                'clearDestObjectMethod' => 'clearAuthorPerson',
            ],
            'editorPerson' => [
                'relationId' => '_editorPerson',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'editorPerson',
                'plural' => 'editorPeople',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadEditorPeopleFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfEditorPeople',
                'createDestObjectMethod' => 'createEditorPerson',
                'getDestObjectMethod' => 'getEditorPerson',
                'setDestObjectMethod' => 'setEditorPerson',
                'clearDestObjectMethod' => 'clearEditorPerson',
            ],
        ];
    }
    
    
    /**
     * Loads several people of given one or more publish 
     * @param Sample_Publish|array $publish     
     */
    function loadAuthorPeopleFor($publish) {
        $rel = $this->getRelation('_authorPerson');
        return $rel->loadDest($publish); 
    }

    
    
    /**
     * Loads several people of given one or more publish 
     * @param Sample_Publish|array $publish     
     */
    function loadEditorPeopleFor($publish) {
        $rel = $this->getRelation('_editorPerson');
        return $rel->loadDest($publish); 
    }

}

<?php

class Sample_Relation_Type extends Sample_Relation_Type_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Relation_Type_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_relations = false;

    var $_relationsCount = false;

    var $_relationsLoaded = false;

    var $relationTypeId = NULL;

    var $title = '';

    var $isSymmetrical = 0;
    
    var $_mapperClass = 'Sample_Relation_Type_Mapper';
    
    /**
     * @var Sample_Relation_Type_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Relation_Type_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'relations', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'relations' => 'relations', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'relations' => 'Sample_Relation', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'relations' => [
                'className' => 'Sample_Relation',
                'mapperClass' => 'Sample_Relation_Mapper',

                'caption' => new Ac_Lang_String('sample_relation_type_relations'),
                'relationId' => '_relations',
                'countVarName' => '_relationsCount',
                'referenceVarName' => '_relations',
            ],
            'relationTypeId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_relation_type_relation_type_id'),
            ],
            'title' => [
                'maxLength' => '45',

                'caption' => new Ac_Lang_String('sample_relation_type_title'),
            ],
            'isSymmetrical' => [
                'dataType' => 'bool',
                'controlType' => 'selectList',
                'maxLength' => '1',
                'valueList' => [
                    0 => 'No',
                    1 => 'Yes',
                ],

                'caption' => new Ac_Lang_String('sample_relation_type_is_symmetrical'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countRelations() {
        if (is_array($this->_relations)) return count($this->_relations);
        if ($this->_relationsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_relations');
        }
        return $this->_relationsCount;
        
    }

    function listRelations() {
        if (!$this->_relationsLoaded) {
            $this->mapper->loadRelationsFor($this);
        }
        return array_keys($this->_relations);
    }
    
    /**
     * @return bool
     */
    function isRelationsLoaded() {
        return $this->_relationsLoaded;
    }
    
    /**
     * @return Sample_Relation 
     */
    function getRelation($id) {
        if (!$this->_relationsLoaded) {
            $this->mapper->loadRelationsFor($this);
        }
        
        if (!isset($this->_relations[$id])) trigger_error ('No such Relation: \''.$id.'\'', E_USER_ERROR);
        return $this->_relations[$id];
    }
    
    /**
     * @return Sample_Relation 
     */
    function getRelationsItem($id) {
        return $this->getRelation($id);
    }
    
    /**
     * @return Sample_Relation[] 
     */
    function getAllRelations() {
        $res = [];
        foreach ($this->listRelations() as $id)
            $res[] = $this->getRelation($id);
        return $res;
    }
    
    /**
     * @param Sample_Relation $relation 
     */
    function addRelation($relation) {
        if (!is_a($relation, 'Sample_Relation')) trigger_error('$relation must be an instance of Sample_Relation', E_USER_ERROR);
        $this->listRelations();
        $this->_relations[] = $relation;
        
        $relation->_relationType = $this;
        
    }

    /**
     * @return Sample_Relation  
     */
    function createRelation($values = array()) {
        $m = $this->getMapper('Sample_Relation_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addRelation($res);
        return $res;
    }
    
  
    
}

<?php

class Sample_Relation_Type_Mapper extends Sample_Relation_Type_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Relation_Type_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Relation_Type[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Relation_Type_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'relationTypeId';

    var $recordClass = 'Sample_Relation_Type';

    var $tableName = '#__relation_types';

    var $id = 'Sample_Relation_Type_Mapper';

    var $storage = 'Sample_Relation_Type_Storage';

    var $columnNames = [ 0 => 'relationTypeId', 1 => 'title', 2 => 'isSymmetrical', ];

    var $defaults = [
            'relationTypeId' => NULL,
            'title' => NULL,
            'isSymmetrical' => 0,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'relationTypeId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_relations' => false,
            '_relationsCount' => false,
            '_relationsLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Relation_Type 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Relation_Type_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Relation_Type 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Relation_Type 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Relation_Type 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Relation_Type 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Relation_Type 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Relation_Type[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Relation_Type[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Relation_Type     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Relation_Type     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Relation_Type[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Relation_Type[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_relations' => [
                'srcMapperClass' => 'Sample_Relation_Type_Mapper',
                'destMapperClass' => 'Sample_Relation_Mapper',
                'srcVarName' => '_relations',
                'srcCountVarName' => '_relationsCount',
                'srcLoadedVarName' => '_relationsLoaded',
                'destVarName' => '_relationType',
                'fieldLinks' => [
                    'relationTypeId' => 'relationTypeId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'relations' => [
                'relationId' => '_relations',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'relation',
                'plural' => 'relations',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadRelationsFor',
                'loadSrcObjectsMapperMethod' => 'loadForRelations',
                'getSrcObjectsMapperMethod' => 'getOfRelations',
                'createDestObjectMethod' => 'createRelation',
                'getAllDestObjectsMethod' => 'getAllRelations',
                'listDestObjectsMethod' => 'listRelations',
                'countDestObjectsMethod' => 'countRelations',
                'getDestObjectMethod' => 'getRelation',
                'addDestObjectMethod' => 'addRelation',
                'isDestLoadedMethod' => 'isRelationsLoaded',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_relation_types_single'),

                'pluralCaption' => new Ac_Lang_String('sample_relation_types_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'relationTypeId',
            ],
        ];
    }

    /**
     * @return Sample_Relation_Type 
     */
    function loadByRelationTypeId ($relationTypeId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('relationTypeId').' = '.$this->getDb()->q($relationTypeId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more relationTypes of given one or more relations 
     * @param Sample_Relation_Type|array $relations     
     * @return array of Sample_Relation_Type objects  
     */
    function getOfRelations($relations) {
        $rel = $this->getRelation('_relations');
        $res = $rel->getSrc($relations); 
        return $res;
    }
    
    /**
     * Loads one or more relationTypes of given one or more relations 
     * @param Sample_Relation|array $relations of Sample_Relation_Type objects      
     */
    function loadForRelations($relations) {
        $rel = $this->getRelation('_relations');
        return $rel->loadSrc($relations); 
    }
    
    /**
     * Loads one or more relations of given one or more relationTypes 
     * @param Sample_Relation_Type|array $relationTypes     
     */
    function loadRelationsFor($relationTypes) {
        $rel = $this->getRelation('_relations');
        return $rel->loadDest($relationTypes); 
    }

    
}

<?php

class Sample_Relation_Type_Storage extends Sample_Relation_Type_Base_Storage {
  

}
<?php

class Sample_Relation_Type_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__relation_types'; 

    var $recordClass = 'Sample_Relation_Type'; 

    var $primaryKey = 'relationTypeId'; 

    var $defaults = [
            'relationTypeId' => NULL,
            'title' => NULL,
            'isSymmetrical' => 0,
        ]; 

    var $autoincFieldName = 'relationTypeId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'relationTypeId',
    ],
]; 
 
    
}

<?php

class Sample_Relation extends Sample_Relation_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Relation_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_relationType = false;

    var $_otherPerson = false;

    var $_person = false;

    var $relationId = NULL;

    var $personId = 0;

    var $otherPersonId = 0;

    var $relationTypeId = 0;

    var $relationBegin = NULL;

    var $relationEnd = NULL;

    var $notes = '';
    
    var $_mapperClass = 'Sample_Relation_Mapper';
    
    /**
     * @var Sample_Relation_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Relation_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'relationType', 1 => 'otherPerson', 2 => 'person', ]));
    }
    
    
 
    protected function listOwnAssociations() {
        return [ 'relationType' => 'Sample_Relation_Type', 'otherPerson' => 'Sample_Person', 'person' => 'Sample_Person', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'relationType' => [
                'className' => 'Sample_Relation_Type',
                'mapperClass' => 'Sample_Relation_Type_Mapper',

                'caption' => new Ac_Lang_String('sample_relation_relation_type'),
                'relationId' => '_relationType',
                'referenceVarName' => '_relationType',
            ],
            'otherPerson' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',
                'otherModelIdInMethodsSingle' => 'otherPerson',
                'otherModelIdInMethodsPlural' => 'otherPeople',

                'caption' => new Ac_Lang_String('sample_relation_other_person'),
                'relationId' => '_otherPerson',
                'referenceVarName' => '_otherPerson',
            ],
            'person' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',
                'otherModelIdInMethodsSingle' => 'person',
                'otherModelIdInMethodsPlural' => 'people',

                'caption' => new Ac_Lang_String('sample_relation_person'),
                'relationId' => '_person',
                'referenceVarName' => '_person',
            ],
            'relationId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_relation_relation_id'),
            ],
            'personId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'person',

                'caption' => new Ac_Lang_String('sample_relation_person_id'),
            ],
            'otherPersonId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'otherPerson',

                'caption' => new Ac_Lang_String('sample_relation_other_person_id'),
            ],
            'relationTypeId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Relation_Type_Mapper',
                ],
                'objectPropertyName' => 'relationType',

                'caption' => new Ac_Lang_String('sample_relation_relation_type_id'),
            ],
            'relationBegin' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_relation_relation_begin'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'relationEnd' => [
                'dataType' => 'dateTime',
                'controlType' => 'dateInput',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_relation_relation_end'),
                'internalDateFormat' => 'Y-m-d H:i:s',
                'outputDateFormat' => 'Y-m-d H:i:s',
            ],
            'notes' => [
                'controlType' => 'textArea',

                'caption' => new Ac_Lang_String('sample_relation_notes'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Relation_Type 
     */
    function getRelationType() {
        if ($this->_relationType === false) {
            $this->mapper->loadRelationTypesFor($this);
            
        }
        return $this->_relationType;
    }
    
    /**
     * @param Sample_Relation_Type $relationType 
     */
    function setRelationType($relationType) {
        if ($relationType === false) $this->_relationType = false;
        elseif ($relationType === null) $this->_relationType = null;
        else {
            if (!is_a($relationType, 'Sample_Relation_Type')) trigger_error('$relationType must be an instance of Sample_Relation_Type', E_USER_ERROR);
            if (!is_object($this->_relationType) && !Ac_Util::sameObject($this->_relationType, $relationType)) { 
                $this->_relationType = $relationType;
            }
        }
    }
    
    function clearRelationType() {
        $this->relationType = null;
    }

    /**
     * @return Sample_Relation_Type  
     */
    function createRelationType($values = array()) {
        $m = $this->getMapper('Sample_Relation_Type_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setRelationType($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Person 
     */
    function getOtherPerson() {
        if ($this->_otherPerson === false) {
            $this->mapper->loadOtherPeopleFor($this);
            
        }
        return $this->_otherPerson;
    }
    
    /**
     * @param Sample_Person $otherPerson 
     */
    function setOtherPerson($otherPerson) {
        if ($otherPerson === false) $this->_otherPerson = false;
        elseif ($otherPerson === null) $this->_otherPerson = null;
        else {
            if (!is_a($otherPerson, 'Sample_Person')) trigger_error('$otherPerson must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_otherPerson) && !Ac_Util::sameObject($this->_otherPerson, $otherPerson)) { 
                $this->_otherPerson = $otherPerson;
            }
        }
    }
    
    function clearOtherPerson() {
        $this->otherPerson = null;
    }

    /**
     * @return Sample_Person  
     */
    function createOtherPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setOtherPerson($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Person 
     */
    function getPerson() {
        if ($this->_person === false) {
            $this->mapper->loadPeopleFor($this);
            
        }
        return $this->_person;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function setPerson($person) {
        if ($person === false) $this->_person = false;
        elseif ($person === null) $this->_person = null;
        else {
            if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_person) && !Ac_Util::sameObject($this->_person, $person)) { 
                $this->_person = $person;
            }
        }
    }
    
    function clearPerson() {
        $this->person = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPerson($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Relation_Mapper extends Sample_Relation_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Relation_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Relation[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Relation_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'relationId';

    var $recordClass = 'Sample_Relation';

    var $tableName = '#__relations';

    var $id = 'Sample_Relation_Mapper';

    var $storage = 'Sample_Relation_Storage';

    var $columnNames = [ 0 => 'relationId', 1 => 'personId', 2 => 'otherPersonId', 3 => 'relationTypeId', 4 => 'relationBegin', 5 => 'relationEnd', 6 => 'notes', ];

    var $nullableColumns = [ 0 => 'relationBegin', 1 => 'relationEnd', ];

    var $defaults = [
            'relationId' => NULL,
            'personId' => NULL,
            'otherPersonId' => NULL,
            'relationTypeId' => NULL,
            'relationBegin' => NULL,
            'relationEnd' => NULL,
            'notes' => '',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'relationId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_relationType' => false,
            '_otherPerson' => false,
            '_person' => false,
        ]);
    }
    
    /**
     * @return Sample_Relation 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Relation_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Relation 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Relation 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Relation 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Relation 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Relation 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Relation[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Relation[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Relation     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Relation     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Relation[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Relation[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_relationType' => [
                'srcMapperClass' => 'Sample_Relation_Mapper',
                'destMapperClass' => 'Sample_Relation_Type_Mapper',
                'srcVarName' => '_relationType',
                'destVarName' => '_relations',
                'destCountVarName' => '_relationsCount',
                'destLoadedVarName' => '_relationsLoaded',
                'fieldLinks' => [
                    'relationTypeId' => 'relationTypeId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_otherPerson' => [
                'srcMapperClass' => 'Sample_Relation_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_otherPerson',
                'destVarName' => '_incomingRelations',
                'destCountVarName' => '_incomingRelationsCount',
                'destLoadedVarName' => '_incomingRelationsLoaded',
                'fieldLinks' => [
                    'otherPersonId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_person' => [
                'srcMapperClass' => 'Sample_Relation_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_outgoingRelations',
                'destCountVarName' => '_outgoingRelationsCount',
                'destLoadedVarName' => '_outgoingRelationsLoaded',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'relationType' => [
                'relationId' => '_relationType',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'relationType',
                'plural' => 'relationTypes',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadRelationTypesFor',
                'loadSrcObjectsMapperMethod' => 'loadForRelationTypes',
                'getSrcObjectsMapperMethod' => 'getOfRelationTypes',
                'createDestObjectMethod' => 'createRelationType',
                'getDestObjectMethod' => 'getRelationType',
                'setDestObjectMethod' => 'setRelationType',
                'clearDestObjectMethod' => 'clearRelationType',
            ],
            'otherPerson' => [
                'relationId' => '_otherPerson',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'otherPerson',
                'plural' => 'otherPeople',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadOtherPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForOtherPeople',
                'getSrcObjectsMapperMethod' => 'getOfOtherPeople',
                'createDestObjectMethod' => 'createOtherPerson',
                'getDestObjectMethod' => 'getOtherPerson',
                'setDestObjectMethod' => 'setOtherPerson',
                'clearDestObjectMethod' => 'clearOtherPerson',
            ],
            'person' => [
                'relationId' => '_person',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPeople',
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getDestObjectMethod' => 'getPerson',
                'setDestObjectMethod' => 'setPerson',
                'clearDestObjectMethod' => 'clearPerson',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_relations_single'),

                'pluralCaption' => new Ac_Lang_String('sample_relations_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'relationId',
            ],
        ];
    }

    /**
     * @return Sample_Relation 
     */
    function loadByRelationId ($relationId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('relationId').' = '.$this->getDb()->q($relationId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) several relations of given one or more relationTypes 
     * @param Sample_Relation|array $relationTypes     
     * @return Sample_Relation|array of Sample_Relation objects  
     */
    function getOfRelationTypes($relationTypes) {
        $rel = $this->getRelation('_relationType');
        $res = $rel->getSrc($relationTypes); 
        return $res;
    }
    
    /**
     * Loads several relations of given one or more relationTypes 
     * @param Sample_Relation_Type|array $relationTypes of Sample_Relation objects      
     */
    function loadForRelationTypes($relationTypes) {
        $rel = $this->getRelation('_relationType');
        return $rel->loadSrc($relationTypes); 
    }
    
    /**
     * Loads several relationTypes of given one or more relations 
     * @param Sample_Relation|array $relations     
     */
    function loadRelationTypesFor($relations) {
        $rel = $this->getRelation('_relationType');
        return $rel->loadDest($relations); 
    }

    /**
     * Returns (but not loads!) several relations of given one or more people 
     * @param Sample_Relation|array $otherPeople     
     * @return Sample_Relation|array of Sample_Relation objects  
     */
    function getOfOtherPeople($otherPeople) {
        $rel = $this->getRelation('_otherPerson');
        $res = $rel->getSrc($otherPeople); 
        return $res;
    }
    
    /**
     * Loads several relations of given one or more people 
     * @param Sample_Person|array $otherPeople of Sample_Relation objects      
     */
    function loadForOtherPeople($otherPeople) {
        $rel = $this->getRelation('_otherPerson');
        return $rel->loadSrc($otherPeople); 
    }
    
    /**
     * Loads several people of given one or more relations 
     * @param Sample_Relation|array $relations     
     */
    function loadOtherPeopleFor($relations) {
        $rel = $this->getRelation('_otherPerson');
        return $rel->loadDest($relations); 
    }

    /**
     * Returns (but not loads!) several relations of given one or more people 
     * @param Sample_Relation|array $people     
     * @return Sample_Relation|array of Sample_Relation objects  
     */
    function getOfPeople($people) {
        $rel = $this->getRelation('_person');
        $res = $rel->getSrc($people); 
        return $res;
    }
    
    /**
     * Loads several relations of given one or more people 
     * @param Sample_Person|array $people of Sample_Relation objects      
     */
    function loadForPeople($people) {
        $rel = $this->getRelation('_person');
        return $rel->loadSrc($people); 
    }
    
    /**
     * Loads several people of given one or more relations 
     * @param Sample_Relation|array $relations     
     */
    function loadPeopleFor($relations) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($relations); 
    }

    
}

<?php

class Sample_Relation_Storage extends Sample_Relation_Base_Storage {
  

}
<?php

class Sample_Relation_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__relations'; 

    var $recordClass = 'Sample_Relation'; 

    var $primaryKey = 'relationId'; 

    var $defaults = [
            'relationId' => NULL,
            'personId' => NULL,
            'otherPersonId' => NULL,
            'relationTypeId' => NULL,
            'relationBegin' => NULL,
            'relationEnd' => NULL,
            'notes' => '',
        ]; 

    var $nullableColumns = [ 0 => 'relationBegin', 1 => 'relationEnd', ]; 

    var $autoincFieldName = 'relationId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'relationId',
    ],
]; 
 
    
}

<?php

class Sample_Religion extends Sample_Religion_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Religion_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_people = false;

    var $_peopleCount = false;

    var $_peopleLoaded = false;

    var $religionId = NULL;

    var $title = '';
    
    var $_mapperClass = 'Sample_Religion_Mapper';
    
    /**
     * @var Sample_Religion_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Religion_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'people', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'people' => 'people', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'people' => 'Sample_Person', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'people' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_religion_people'),
                'relationId' => '_people',
                'countVarName' => '_peopleCount',
                'referenceVarName' => '_people',
            ],
            'religionId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_religion_religion_id'),
            ],
            'title' => [
                'maxLength' => '45',

                'caption' => new Ac_Lang_String('sample_religion_title'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countPeople() {
        if (is_array($this->_people)) return count($this->_people);
        if ($this->_peopleCount === false) {
            $this->mapper->loadAssocCountFor($this, '_people');
        }
        return $this->_peopleCount;
        
    }

    function listPeople() {
        if (!$this->_peopleLoaded) {
            $this->mapper->loadPeopleFor($this);
        }
        return array_keys($this->_people);
    }
    
    /**
     * @return bool
     */
    function isPeopleLoaded() {
        return $this->_peopleLoaded;
    }
    
    /**
     * @return Sample_Person 
     */
    function getPerson($id) {
        if (!$this->_peopleLoaded) {
            $this->mapper->loadPeopleFor($this);
        }
        
        if (!isset($this->_people[$id])) trigger_error ('No such People: \''.$id.'\'', E_USER_ERROR);
        return $this->_people[$id];
    }
    
    /**
     * @return Sample_Person 
     */
    function getPeopleItem($id) {
        return $this->getPerson($id);
    }
    
    /**
     * @return Sample_Person[] 
     */
    function getAllPeople() {
        $res = [];
        foreach ($this->listPeople() as $id)
            $res[] = $this->getPerson($id);
        return $res;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function addPerson($person) {
        if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
        $this->listPeople();
        $this->_people[] = $person;
        
        $person->_religion = $this;
        
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPerson($res);
        return $res;
    }
    
  
    
}

<?php

class Sample_Religion_Mapper extends Sample_Religion_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Religion_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Religion[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Religion_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'religionId';

    var $recordClass = 'Sample_Religion';

    var $tableName = '#__religion';

    var $id = 'Sample_Religion_Mapper';

    var $storage = 'Sample_Religion_Storage';

    var $columnNames = [ 0 => 'religionId', 1 => 'title', ];

    var $defaults = [
            'religionId' => NULL,
            'title' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'religionId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_people' => false,
            '_peopleCount' => false,
            '_peopleLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Religion 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Religion_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Religion 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Religion 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Religion 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Religion 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Religion 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Religion[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Religion[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Religion     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Religion     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Religion[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Religion[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_people' => [
                'srcMapperClass' => 'Sample_Religion_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_people',
                'srcCountVarName' => '_peopleCount',
                'srcLoadedVarName' => '_peopleLoaded',
                'destVarName' => '_religion',
                'fieldLinks' => [
                    'religionId' => 'religionId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'people' => [
                'relationId' => '_people',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPeople',
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getAllDestObjectsMethod' => 'getAllPeople',
                'listDestObjectsMethod' => 'listPeople',
                'countDestObjectsMethod' => 'countPeople',
                'getDestObjectMethod' => 'getPerson',
                'addDestObjectMethod' => 'addPerson',
                'isDestLoadedMethod' => 'isPeopleLoaded',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_religion_single'),

                'pluralCaption' => new Ac_Lang_String('sample_religion_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'religionId',
            ],
            'Index_2' => [
                0 => 'title',
            ],
        ];
    }

    /**
     * @return Sample_Religion 
     */
    function loadByReligionId ($religionId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('religionId').' = '.$this->getDb()->q($religionId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Religion 
     */
    function loadByTitle ($title) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('title').' = '.$this->getDb()->q($title).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more religion of given one or more people 
     * @param Sample_Religion|array $people     
     * @return array of Sample_Religion objects  
     */
    function getOfPeople($people) {
        $rel = $this->getRelation('_people');
        $res = $rel->getSrc($people); 
        return $res;
    }
    
    /**
     * Loads one or more religion of given one or more people 
     * @param Sample_Person|array $people of Sample_Religion objects      
     */
    function loadForPeople($people) {
        $rel = $this->getRelation('_people');
        return $rel->loadSrc($people); 
    }
    
    /**
     * Loads one or more people of given one or more religion 
     * @param Sample_Religion|array $religion     
     */
    function loadPeopleFor($religion) {
        $rel = $this->getRelation('_people');
        return $rel->loadDest($religion); 
    }

    
}

<?php

class Sample_Religion_Storage extends Sample_Religion_Base_Storage {
  

}
<?php

class Sample_Religion_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__religion'; 

    var $recordClass = 'Sample_Religion'; 

    var $primaryKey = 'religionId'; 

    var $defaults = [
            'religionId' => NULL,
            'title' => NULL,
        ]; 

    var $autoincFieldName = 'religionId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'religionId',
    ],
    'Index_2' => [
        0 => 'title',
    ],
]; 
 
    
}

<?php

class Sample_Shop_Category extends Sample_Shop_Category_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Category_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_shopProducts = false;

    var $_shopProductsCount = false;

    var $_shopProductsLoaded = false;

    var $_shopProductIds = false;

    var $id = NULL;

    var $title = NULL;

    var $leftCol = 0;

    var $rightCol = 0;

    var $ignore = 0;

    var $parentId = NULL;

    var $ordering = 0;

    var $depth = 0;

    var $metaId = NULL;

    var $pubId = NULL;
    
    var $_mapperClass = 'Sample_Shop_Category_Mapper';
    
    /**
     * @var Sample_Shop_Category_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Category_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'shopProducts', 1 => 'shopProductIds', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'shopProducts' => 'shopProducts', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'shopProducts' => 'Sample_Shop_Product', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopProducts' => [
                'className' => 'Sample_Shop_Product',
                'mapperClass' => 'Sample_Shop_Product_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_category_shop_products'),
                'relationId' => '_shopProducts',
                'countVarName' => '_shopProductsCount',
                'nnIdsVarName' => '_shopProductIds',
                'referenceVarName' => '_shopProducts',
            ],
            'shopProductIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Product_Mapper',
                ],
                'showInTable' => false,
            ],
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_category_id'),
            ],
            'title' => [
                'maxLength' => '255',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_category_title'),
            ],
            'leftCol' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_category_left_col'),
            ],
            'rightCol' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_category_right_col'),
            ],
            'ignore' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_category_ignore'),
            ],
            'parentId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_category_parent_id'),
            ],
            'ordering' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_category_ordering'),
            ],
            'depth' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_category_depth'),
            ],
            'metaId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_category_meta_id'),
            ],
            'pubId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Publish_ImplMapper',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_category_pub_id'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countShopProducts() {
        if (is_array($this->_shopProducts)) return count($this->_shopProducts);
        if ($this->_shopProductsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_shopProducts');
        }
        return $this->_shopProductsCount;
        
    }

    function listShopProducts() {
        if (!$this->_shopProductsLoaded) {
            $this->mapper->loadShopProductsFor($this);
        }
        return array_keys($this->_shopProducts);
    }
    
    /**
     * @return bool
     */
    function isShopProductsLoaded() {
        return $this->_shopProductsLoaded;
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getShopProduct($id) {
        if (!$this->_shopProductsLoaded) {
            $this->mapper->loadShopProductsFor($this);
        }
        
        if (!isset($this->_shopProducts[$id])) trigger_error ('No such Shop product: \''.$id.'\'', E_USER_ERROR);
        return $this->_shopProducts[$id];
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getShopProductsItem($id) {
        return $this->getShopProduct($id);
    }
    
    /**
     * @return Sample_Shop_Product[] 
     */
    function getAllShopProducts() {
        $res = [];
        foreach ($this->listShopProducts() as $id)
            $res[] = $this->getShopProduct($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Product $shopProduct 
     */
    function addShopProduct($shopProduct) {
        if (!is_a($shopProduct, 'Sample_Shop_Product')) trigger_error('$shopProduct must be an instance of Sample_Shop_Product', E_USER_ERROR);
        $this->listShopProducts();
        $this->_shopProducts[] = $shopProduct;
        
        if (is_array($shopProduct->_shopCategories) && !Ac_Util::sameInArray($this, $shopProduct->_shopCategories)) {
                $shopProduct->_shopCategories[] = $this;
        }
        
    }

    /**
     * @return Sample_Shop_Product  
     */
    function createShopProduct($values = array()) {
        $m = $this->getMapper('Sample_Shop_Product_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addShopProduct($res);
        return $res;
    }
    

    function getShopProductIds() {
        if ($this->_shopProductIds === false) {
            $this->mapper->loadShopProductIdsFor($this);
        }
        return $this->_shopProductIds;
    }
    
    function setShopProductIds($shopProductIds) {
        if (!is_array($shopProductIds)) trigger_error('$shopProductIds must be an array', E_USER_ERROR);
        $this->_shopProductIds = $shopProductIds;
        $this->_shopProductsLoaded = false;
        $this->_shopProducts = false; 
    }
    
    function clearShopProducts() {
        $this->_shopProducts = array();
        $this->_shopProductsLoaded = true;
        $this->_shopProductIds = false;
    }               
  
    
}

<?php

class Sample_Shop_Category_Mapper extends Sample_Shop_Category_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Category_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Category[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Category_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Shop_Category';

    var $tableName = '#__shop_categories';

    var $id = 'Sample_Shop_Category_Mapper';

    var $storage = 'Sample_Shop_Category_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'title', 2 => 'leftCol', 3 => 'rightCol', 4 => 'ignore', 5 => 'parentId', 6 => 'ordering', 7 => 'depth', 8 => 'metaId', 9 => 'pubId', ];

    var $nullableColumns = [ 0 => 'title', 1 => 'parentId', 2 => 'metaId', 3 => 'pubId', ];

    var $defaults = [
            'id' => NULL,
            'title' => NULL,
            'leftCol' => NULL,
            'rightCol' => NULL,
            'ignore' => NULL,
            'parentId' => NULL,
            'ordering' => NULL,
            'depth' => NULL,
            'metaId' => NULL,
            'pubId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'publish' => [
                'class' => 'Sample_Publish_MapperMixable',
                'colMap' => [
                    'id' => 'pubId',
                ],
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopProducts' => false,
            '_shopProductsCount' => false,
            '_shopProductsLoaded' => false,
            '_shopProductIds' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Category 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Category_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Category 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Category 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Category 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Category 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Category 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Category[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Category[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Category     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Category     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Category[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Category[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    function getDefaultSort() {
        return 'ordering';
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopProducts' => [
                'srcMapperClass' => 'Sample_Shop_Category_Mapper',
                'destMapperClass' => 'Sample_Shop_Product_Mapper',
                'srcVarName' => '_shopProducts',
                'srcNNIdsVarName' => '_shopProductIds',
                'srcCountVarName' => '_shopProductsCount',
                'srcLoadedVarName' => '_shopProductsLoaded',
                'destVarName' => '_shopCategories',
                'destCountVarName' => '_shopCategoriesCount',
                'destLoadedVarName' => '_shopCategoriesLoaded',
                'destNNIdsVarName' => '_shopCategoryIds',
                'fieldLinks' => [
                    'id' => 'categoryId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadShopProductIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadShopCategoryIdsFor',
                ],
                'midTableName' => '#__shop_product_categories',
                'fieldLinks2' => [
                    'productId' => 'id',
                ],
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'shopProducts' => [
                'relationId' => '_shopProducts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopProduct',
                'plural' => 'shopProducts',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadShopProductsFor',
                'loadSrcObjectsMapperMethod' => 'loadForShopProducts',
                'getSrcObjectsMapperMethod' => 'getOfShopProducts',
                'createDestObjectMethod' => 'createShopProduct',
                'getAllDestObjectsMethod' => 'getAllShopProducts',
                'listDestObjectsMethod' => 'listShopProducts',
                'countDestObjectsMethod' => 'countShopProducts',
                'getDestObjectMethod' => 'getShopProduct',
                'addDestObjectMethod' => 'addShopProduct',
                'isDestLoadedMethod' => 'isShopProductsLoaded',
                'loadDestIdsMapperMethod' => 'loadShopProductIdsFor',
                'getDestIdsMethod' => 'getShopProductIds',
                'setDestIdsMethod' => 'setShopProductIds',
                'clearDestObjectsMethod' => 'clearShopProducts',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_categories_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_categories_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
            'idxPubId' => [
                0 => 'pubId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Category 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Shop_Category 
     */
    function loadByPubId ($pubId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('pubId').' = '.$this->getDb()->q($pubId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more shopCategories of given one or more shopProducts 
     * @param Sample_Shop_Category|array $shopProducts     
     * @return Sample_Shop_Category|array of Sample_Shop_Category objects  
     */
    function getOfShopProducts($shopProducts) {
        $rel = $this->getRelation('_shopProducts');
        $res = $rel->getSrc($shopProducts); 
        return $res;
    }
    
    /**
     * Loads one or more shopCategories of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts of Sample_Shop_Category objects      
     */
    function loadForShopProducts($shopProducts) {
        $rel = $this->getRelation('_shopProducts');
        return $rel->loadSrc($shopProducts); 
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopCategories 
     * @param Sample_Shop_Category|array $shopCategories     
     */
    function loadShopProductsFor($shopCategories) {
        $rel = $this->getRelation('_shopProducts');
        return $rel->loadDest($shopCategories); 
    }


    /**
     * @param Sample_Shop_Category|array $shopCategories 
     */
     function loadShopProductIdsFor($shopCategories) {
        $rel = $this->getRelation('_shopProducts');
        return $rel->loadDestNNIds($shopCategories); 
    }
    
    
}

<?php

class Sample_Shop_Category_Storage extends Sample_Shop_Category_Base_Storage {
  

}
<?php

class Sample_Shop_Category_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_categories'; 

    var $recordClass = 'Sample_Shop_Category'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'title' => NULL,
            'leftCol' => NULL,
            'rightCol' => NULL,
            'ignore' => NULL,
            'parentId' => NULL,
            'ordering' => NULL,
            'depth' => NULL,
            'metaId' => NULL,
            'pubId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'title', 1 => 'parentId', 2 => 'metaId', 3 => 'pubId', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
    'idxPubId' => [
        0 => 'pubId',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'shopProductIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'categoryId',
                        'midDestKey' => 'productId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__shopProducts',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Shop_Classifier extends Sample_Shop_Classifier_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Classifier_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_shopClassifierType = false;

    var $_monitorShopSpecs = false;

    var $_monitorShopSpecsCount = false;

    var $_monitorShopSpecsLoaded = false;

    var $id = NULL;

    var $title = '';

    var $type = '';
    
    var $_mapperClass = 'Sample_Shop_Classifier_Mapper';
    
    /**
     * @var Sample_Shop_Classifier_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Classifier_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'shopClassifierType', 1 => 'monitorShopSpecs', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'monitorShopSpecs' => 'monitorShopSpecs', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'shopClassifierType' => 'Sample_Shop_Classifier_Type', 'monitorShopSpecs' => 'Sample_Shop_Spec', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopClassifierType' => [
                'className' => 'Sample_Shop_Classifier_Type',
                'mapperClass' => 'Sample_Shop_Classifier_Type_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_classifier_shop_classifier_type'),
                'relationId' => '_shopClassifierType',
                'referenceVarName' => '_shopClassifierType',
            ],
            'monitorShopSpecs' => [
                'className' => 'Sample_Shop_Spec',
                'mapperClass' => 'Sample_Shop_Spec_Mapper',
                'otherModelIdInMethodsPrefix' => 'monitor',

                'caption' => new Ac_Lang_String('sample_shop_classifier_monitor_shop_specs'),
                'relationId' => '_monitorShopSpecs',
                'countVarName' => '_monitorShopSpecsCount',
                'referenceVarName' => '_monitorShopSpecs',
            ],
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_classifier_id'),
            ],
            'title' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_classifier_title'),
            ],
            'type' => [
                'controlType' => 'selectList',
                'maxLength' => '16',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Classifier_Type_Mapper',
                ],
                'objectPropertyName' => 'shopClassifierType',

                'caption' => new Ac_Lang_String('sample_shop_classifier_type'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Shop_Classifier_Type 
     */
    function getShopClassifierType() {
        if ($this->_shopClassifierType === false) {
            $this->mapper->loadShopClassifierTypeFor($this);
            
        }
        return $this->_shopClassifierType;
    }
    
    /**
     * @param Sample_Shop_Classifier_Type $shopClassifierType 
     */
    function setShopClassifierType($shopClassifierType) {
        if ($shopClassifierType === false) $this->_shopClassifierType = false;
        elseif ($shopClassifierType === null) $this->_shopClassifierType = null;
        else {
            if (!is_a($shopClassifierType, 'Sample_Shop_Classifier_Type')) trigger_error('$shopClassifierType must be an instance of Sample_Shop_Classifier_Type', E_USER_ERROR);
            if (!is_object($this->_shopClassifierType) && !Ac_Util::sameObject($this->_shopClassifierType, $shopClassifierType)) { 
                $this->_shopClassifierType = $shopClassifierType;
            }
        }
    }
    
    function clearShopClassifierType() {
        $this->shopClassifierType = null;
    }

    /**
     * @return Sample_Shop_Classifier_Type  
     */
    function createShopClassifierType($values = array()) {
        $m = $this->getMapper('Sample_Shop_Classifier_Type_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopClassifierType($res);
        return $res;
    }

    

    function countMonitorShopSpecs() {
        if (is_array($this->_monitorShopSpecs)) return count($this->_monitorShopSpecs);
        return 0;
        
    }

    function listMonitorShopSpecs() {
        if (!is_array($this->_monitorShopSpecs)) $this->_monitorShopSpecs = array();
        return array_keys($this->_monitorShopSpecs);
    }
    
    /**
     * @return bool
     */
    function isMonitorShopSpecsLoaded() {
        return $this->_monitorShopSpecsLoaded;
    }
    
    /**
     * @return Sample_Shop_Spec 
     */
    function getMonitorShopSpec($id) {
        
        if (!isset($this->_monitorShopSpecs[$id])) trigger_error ('No such Shop spec: \''.$id.'\'', E_USER_ERROR);
        return $this->_monitorShopSpecs[$id];
    }
    
    /**
     * @return Sample_Shop_Spec 
     */
    function getMonitorShopSpecsItem($id) {
        return $this->getMonitorShopSpec($id);
    }
    
    /**
     * @return Sample_Shop_Spec[] 
     */
    function getAllMonitorShopSpecs() {
        $res = [];
        foreach ($this->listMonitorShopSpecs() as $id)
            $res[] = $this->getMonitorShopSpec($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Spec $monitorShopSpec 
     */
    function addMonitorShopSpec($monitorShopSpec) {
        if (!is_a($monitorShopSpec, 'Sample_Shop_Spec')) trigger_error('$monitorShopSpec must be an instance of Sample_Shop_Spec', E_USER_ERROR);
        $this->listMonitorShopSpecs();
        $this->_monitorShopSpecs[] = $monitorShopSpec;
        
        
    }

    /**
     * @return Sample_Shop_Spec  
     */
    function createMonitorShopSpec($values = array()) {
        $m = $this->getMapper('Sample_Shop_Spec_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addMonitorShopSpec($res);
        return $res;
    }
    
  
    
}

<?php

class Sample_Shop_Classifier_Mapper extends Sample_Shop_Classifier_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Classifier_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Classifier[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Classifier_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Shop_Classifier';

    var $tableName = '#__shop_classifier';

    var $id = 'Sample_Shop_Classifier_Mapper';

    var $storage = 'Sample_Shop_Classifier_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'title', 2 => 'type', ];

    var $defaults = [
            'id' => NULL,
            'title' => '',
            'type' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopClassifierType' => false,
            '_monitorShopSpecs' => false,
            '_monitorShopSpecsCount' => false,
            '_monitorShopSpecsLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Classifier_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Classifier 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Classifier 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Classifier[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Classifier[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Classifier     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Classifier     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Classifier[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Classifier[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifierType' => [
                'srcMapperClass' => 'Sample_Shop_Classifier_Mapper',
                'destMapperClass' => 'Sample_Shop_Classifier_Type_Mapper',
                'srcVarName' => '_shopClassifierType',
                'destVarName' => '_shopClassifier',
                'destCountVarName' => '_shopClassifierCount',
                'destLoadedVarName' => '_shopClassifierLoaded',
                'fieldLinks' => [
                    'type' => 'type',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_monitorShopSpecs' => [
                'srcMapperClass' => 'Sample_Shop_Classifier_Mapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_monitorShopSpecs',
                'srcCountVarName' => '_monitorShopSpecsCount',
                'srcLoadedVarName' => '_monitorShopSpecsLoaded',
                'fieldLinks' => [
                    'id' => 'matrixTypeId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'shopClassifierType' => [
                'relationId' => '_shopClassifierType',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopClassifierType',
                'plural' => 'shopClassifierType',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopClassifierTypeFor',
                'loadSrcObjectsMapperMethod' => 'loadForShopClassifierType',
                'getSrcObjectsMapperMethod' => 'getOfShopClassifierType',
                'createDestObjectMethod' => 'createShopClassifierType',
                'getDestObjectMethod' => 'getShopClassifierType',
                'setDestObjectMethod' => 'setShopClassifierType',
                'clearDestObjectMethod' => 'clearShopClassifierType',
            ],
            'monitorShopSpecs' => [
                'relationId' => '_monitorShopSpecs',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'monitorShopSpec',
                'plural' => 'monitorShopSpecs',
                'canLoadDestObjects' => false,
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => NULL,
                'loadSrcObjectsMapperMethod' => 'loadForMonitorShopSpecs',
                'getSrcObjectsMapperMethod' => 'getOfMonitorShopSpecs',
                'createDestObjectMethod' => 'createMonitorShopSpec',
                'getAllDestObjectsMethod' => 'getAllMonitorShopSpecs',
                'listDestObjectsMethod' => 'listMonitorShopSpecs',
                'countDestObjectsMethod' => 'countMonitorShopSpecs',
                'getDestObjectMethod' => 'getMonitorShopSpec',
                'addDestObjectMethod' => 'addMonitorShopSpec',
                'isDestLoadedMethod' => 'isMonitorShopSpecsLoaded',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_classifier_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_classifier_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
            'type_title' => [
                0 => 'type',
                1 => 'title',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Classifier 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Shop_Classifier 
     */
    function loadByTypeTitle ($type, $title) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('type').' = '.$this->getDb()->q($type).' AND '.$this->getDb()->n('title').' = '.$this->getDb()->q($title).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) several shopClassifier of given one or more shopClassifierType 
     * @param Sample_Shop_Classifier|array $shopClassifierType     
     * @return Sample_Shop_Classifier|array of Sample_Shop_Classifier objects  
     */
    function getOfShopClassifierType($shopClassifierType) {
        $rel = $this->getRelation('_shopClassifierType');
        $res = $rel->getSrc($shopClassifierType); 
        return $res;
    }
    
    /**
     * Loads several shopClassifier of given one or more shopClassifierType 
     * @param Sample_Shop_Classifier_Type|array $shopClassifierType of Sample_Shop_Classifier objects      
     */
    function loadForShopClassifierType($shopClassifierType) {
        $rel = $this->getRelation('_shopClassifierType');
        return $rel->loadSrc($shopClassifierType); 
    }
    
    /**
     * Loads several shopClassifierType of given one or more shopClassifier 
     * @param Sample_Shop_Classifier|array $shopClassifier     
     */
    function loadShopClassifierTypeFor($shopClassifier) {
        $rel = $this->getRelation('_shopClassifierType');
        return $rel->loadDest($shopClassifier); 
    }

    /**
     * Returns (but not loads!) one or more shopClassifier of given one or more shopSpecs 
     * @param Sample_Shop_Classifier|array $monitorShopSpecs     
     * @return array of Sample_Shop_Classifier objects  
     */
    function getOfMonitorShopSpecs($monitorShopSpecs) {
        $rel = $this->getRelation('_monitorShopSpecs');
        $res = $rel->getSrc($monitorShopSpecs); 
        return $res;
    }
    
    /**
     * Loads one or more shopClassifier of given one or more shopSpecs 
     * @param Sample_Shop_Spec|array $monitorShopSpecs of Sample_Shop_Classifier objects      
     */
    function loadForMonitorShopSpecs($monitorShopSpecs) {
        $rel = $this->getRelation('_monitorShopSpecs');
        return $rel->loadSrc($monitorShopSpecs); 
    }
    

    
}

<?php

class Sample_Shop_Classifier_Storage extends Sample_Shop_Classifier_Base_Storage {
  

}
<?php

class Sample_Shop_Classifier_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_classifier'; 

    var $recordClass = 'Sample_Shop_Classifier'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'title' => '',
            'type' => NULL,
        ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
    'type_title' => [
        0 => 'type',
        1 => 'title',
    ],
]; 
 
    
}

<?php

class Sample_Shop_Classifier_Type extends Sample_Shop_Classifier_Type_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Classifier_Type_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_shopClassifier = false;

    var $_shopClassifierCount = false;

    var $_shopClassifierLoaded = false;

    var $type = NULL;
    
    var $_mapperClass = 'Sample_Shop_Classifier_Type_Mapper';
    
    /**
     * @var Sample_Shop_Classifier_Type_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Classifier_Type_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'shopClassifier', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'shopClassifier' => 'shopClassifier', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'shopClassifier' => 'Sample_Shop_Classifier', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopClassifier' => [
                'className' => 'Sample_Shop_Classifier',
                'mapperClass' => 'Sample_Shop_Classifier_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_classifier_type_shop_classifier'),
                'relationId' => '_shopClassifier',
                'countVarName' => '_shopClassifierCount',
                'referenceVarName' => '_shopClassifier',
            ],
            'type' => [
                'maxLength' => '16',

                'caption' => new Ac_Lang_String('sample_shop_classifier_type_type'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countShopClassifier() {
        if (is_array($this->_shopClassifier)) return count($this->_shopClassifier);
        if ($this->_shopClassifierCount === false) {
            $this->mapper->loadAssocCountFor($this, '_shopClassifier');
        }
        return $this->_shopClassifierCount;
        
    }

    function listShopClassifier() {
        if (!$this->_shopClassifierLoaded) {
            $this->mapper->loadShopClassifierFor($this);
        }
        return array_keys($this->_shopClassifier);
    }
    
    /**
     * @return bool
     */
    function isShopClassifierLoaded() {
        return $this->_shopClassifierLoaded;
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */
    function getShopClassifier($id) {
        if (!$this->_shopClassifierLoaded) {
            $this->mapper->loadShopClassifierFor($this);
        }
        
        if (!isset($this->_shopClassifier[$id])) trigger_error ('No such Shop classifier: \''.$id.'\'', E_USER_ERROR);
        return $this->_shopClassifier[$id];
    }
    
    /**
     * @return Sample_Shop_Classifier 
     */
    function getShopClassifierItem($id) {
        return $this->getShopClassifier($id);
    }
    
    /**
     * @return Sample_Shop_Classifier[] 
     */
    function getAllShopClassifier() {
        $res = [];
        foreach ($this->listShopClassifier() as $id)
            $res[] = $this->getShopClassifier($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Classifier $shopClassifier 
     */
    function addShopClassifier($shopClassifier) {
        if (!is_a($shopClassifier, 'Sample_Shop_Classifier')) trigger_error('$shopClassifier must be an instance of Sample_Shop_Classifier', E_USER_ERROR);
        $this->listShopClassifier();
        $this->_shopClassifier[] = $shopClassifier;
        
        $shopClassifier->_shopClassifierType = $this;
        
    }

    /**
     * @return Sample_Shop_Classifier  
     */
    function createShopClassifier($values = array()) {
        $m = $this->getMapper('Sample_Shop_Classifier_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addShopClassifier($res);
        return $res;
    }
    
  
    
}

<?php

class Sample_Shop_Classifier_Type_Mapper extends Sample_Shop_Classifier_Type_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Classifier_Type_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Classifier_Type[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Classifier_Type_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'type';

    var $recordClass = 'Sample_Shop_Classifier_Type';

    var $tableName = '#__shop_classifier_type';

    var $id = 'Sample_Shop_Classifier_Type_Mapper';

    var $storage = 'Sample_Shop_Classifier_Type_Storage';

    var $columnNames = [ 0 => 'type', ];

    var $defaults = [
            'type' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopClassifier' => false,
            '_shopClassifierCount' => false,
            '_shopClassifierLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Classifier_Type 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Classifier_Type_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Classifier_Type 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Classifier_Type 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Classifier_Type 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Classifier_Type 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Classifier_Type 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Classifier_Type[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Classifier_Type[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Classifier_Type     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Classifier_Type     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Classifier_Type[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Classifier_Type[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'type';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifier' => [
                'srcMapperClass' => 'Sample_Shop_Classifier_Type_Mapper',
                'destMapperClass' => 'Sample_Shop_Classifier_Mapper',
                'srcVarName' => '_shopClassifier',
                'srcCountVarName' => '_shopClassifierCount',
                'srcLoadedVarName' => '_shopClassifierLoaded',
                'destVarName' => '_shopClassifierType',
                'fieldLinks' => [
                    'type' => 'type',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => false,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'shopClassifier' => [
                'relationId' => '_shopClassifier',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopClassifier',
                'plural' => 'shopClassifier',
                'class' => 'Ac_Model_Association_Many',
                'loadDestObjectsMapperMethod' => 'loadShopClassifierFor',
                'loadSrcObjectsMapperMethod' => 'loadForShopClassifier',
                'getSrcObjectsMapperMethod' => 'getOfShopClassifier',
                'createDestObjectMethod' => 'createShopClassifier',
                'getAllDestObjectsMethod' => 'getAllShopClassifier',
                'listDestObjectsMethod' => 'listShopClassifier',
                'countDestObjectsMethod' => 'countShopClassifier',
                'getDestObjectMethod' => 'getShopClassifier',
                'addDestObjectMethod' => 'addShopClassifier',
                'isDestLoadedMethod' => 'isShopClassifierLoaded',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_classifier_type_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_classifier_type_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'type',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Classifier_Type 
     */
    function loadByType ($type) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('type').' = '.$this->getDb()->q($type).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more shopClassifierType of given one or more shopClassifier 
     * @param Sample_Shop_Classifier_Type|array $shopClassifier     
     * @return array of Sample_Shop_Classifier_Type objects  
     */
    function getOfShopClassifier($shopClassifier) {
        $rel = $this->getRelation('_shopClassifier');
        $res = $rel->getSrc($shopClassifier); 
        return $res;
    }
    
    /**
     * Loads one or more shopClassifierType of given one or more shopClassifier 
     * @param Sample_Shop_Classifier|array $shopClassifier of Sample_Shop_Classifier_Type objects      
     */
    function loadForShopClassifier($shopClassifier) {
        $rel = $this->getRelation('_shopClassifier');
        return $rel->loadSrc($shopClassifier); 
    }
    
    /**
     * Loads one or more shopClassifier of given one or more shopClassifierType 
     * @param Sample_Shop_Classifier_Type|array $shopClassifierType     
     */
    function loadShopClassifierFor($shopClassifierType) {
        $rel = $this->getRelation('_shopClassifier');
        return $rel->loadDest($shopClassifierType); 
    }

    
}

<?php

class Sample_Shop_Classifier_Type_Storage extends Sample_Shop_Classifier_Type_Base_Storage {
  

}
<?php

class Sample_Shop_Classifier_Type_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_classifier_type'; 

    var $recordClass = 'Sample_Shop_Classifier_Type'; 

    var $primaryKey = 'type'; 

    var $defaults = [
            'type' => NULL,
        ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'type',
    ],
]; 
 
    
}

<?php

class Sample_Shop_Product_Extra_Code extends Sample_Shop_Product_Extra_Code_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Product_Extra_Code_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    var $_hasDefaults = true;

    var $_person = false;

    var $productId = NULL;

    var $ean = '';

    var $asin = '';

    var $gtin = '';

    var $responsiblePersonId = NULL;

    protected $preserveMetaCache = true;
    
    /**
     * @var Sample_Shop_Product_Extra_Code_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Sample_Shop_Product_Extra_Code';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [ 0 => 'person', ]);
    }
    
 
    protected function listOwnAssociations() {
        return [ 'person' => 'Sample_Person', ];
    }

    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'person' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_product_extra_code_person'),
                'relationId' => '_person',
                'referenceVarName' => '_person',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Product_Mapper',
                ],

                'caption' => new Ac_Lang_String('sample_shop_product_extra_code_product_id'),
            ],
            'ean' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_product_extra_code_ean'),
            ],
            'asin' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_product_extra_code_asin'),
            ],
            'gtin' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_product_extra_code_gtin'),
            ],
            'responsiblePersonId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'person',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_product_extra_code_responsible_person_id'),
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Sample_Person 
     */
    function getPerson() {
        if ($this->_person === false) {
            $this->mapper->loadPeopleFor($this->mixin);
            
        }
        return $this->_person;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function setPerson($person) {
        if ($person === false) $this->_person = false;
        elseif ($person === null) $this->_person = null;
        else {
            if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_person) && !Ac_Util::sameObject($this->_person, $person)) { 
                $this->_person = $person;
            }
        }
    }
    
    function clearPerson() {
        $this->person = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPerson($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Product_Extra_Code_ImplMapper extends Sample_Shop_Product_Extra_Code_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Product_Extra_Code_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Product_Extra_Code[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Product_Extra_Code_Base_ImplMapper extends Ac_Model_Mapper {

    protected $identifierField = NULL;

    var $pk = 'productId';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__shop_product_extraCodes';

    var $id = 'Sample_Shop_Product_Extra_Code_ImplMapper';

    var $storage = 'Sample_Shop_Product_Extra_Code_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'ean', 2 => 'asin', 3 => 'gtin', 4 => 'responsiblePersonId', ];

    var $nullableColumns = [ 0 => 'responsiblePersonId', ];

    var $defaults = [
            'productId' => NULL,
            'ean' => '',
            'asin' => '',
            'gtin' => '',
            'responsiblePersonId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'class' => 'Ac_Model_Typer_ExtraTable',
                'tableName' => '#__shop_product_extraCodes',
                'uniformTypeId' => 'Sample_Shop_Product_Mapper',
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_person' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Product_Extra_Code 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Product_Extra_Code_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Product_Extra_Code 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Product_Extra_Code 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Product_Extra_Code 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Product_Extra_Code 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Product_Extra_Code 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Product_Extra_Code[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Product_Extra_Code[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Product_Extra_Code     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Product_Extra_Code     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Product_Extra_Code[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Product_Extra_Code[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'ean';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Sample_Shop_Product_Extra_Code_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_extraCodeShopProducts',
                'destCountVarName' => '_extraCodeShopProductsCount',
                'destLoadedVarName' => '_extraCodeShopProductsLoaded',
                'fieldLinks' => [
                    'responsiblePersonId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_product_extra_codes_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_product_extra_codes_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Product_Extra_Code 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Shop_Product_Extra_Code_Storage extends Sample_Shop_Product_Extra_Code_Base_Storage {
  

}
<?php

class Sample_Shop_Product_Extra_Code_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_product_extraCodes'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'ean' => '',
            'asin' => '',
            'gtin' => '',
            'responsiblePersonId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'responsiblePersonId', ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php 

class Sample_Shop_Product_Extra_Code_MapperMixable extends Sample_Shop_Product_Extra_Code_Base_ExtraTable {
    
}

<?php 

class Sample_Shop_Product_Extra_Code_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = false;
    
    protected $modelMixable = 'Sample_Shop_Product_Extra_Code';
    
    protected $implMapper = 'Sample_Shop_Product_Extra_Code_ImplMapper';
    
    protected $modelMixableId = 'Sample_Shop_Product_Extra_Code';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_person' => [
                'srcMapperClass' => 'Sample_Shop_Product_Extra_Code_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_extraCodeShopProducts',
                'destCountVarName' => '_extraCodeShopProductsCount',
                'destLoadedVarName' => '_extraCodeShopProductsLoaded',
                'fieldLinks' => [
                    'responsiblePersonId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'person' => [
                'relationId' => '_person',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getDestObjectMethod' => 'getPerson',
                'setDestObjectMethod' => 'setPerson',
                'clearDestObjectMethod' => 'clearPerson',
            ],
        ];
    }
    
    
    /**
     * Loads several people of given one or more shopProductExtraCodes 
     * @param Sample_Shop_Product_Extra_Code|array $shopProductExtraCodes     
     */
    function loadPeopleFor($shopProductExtraCodes) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($shopProductExtraCodes); 
    }

}

<?php

class Sample_Shop_Product_Note_ImplMapper extends Sample_Shop_Product_Note_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Product_Note_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Product_Note[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Product_Note_Base_ImplMapper extends Ac_Model_Mapper {

    protected $identifierField = NULL;

    var $pk = 'productId';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__shop_product_notes';

    var $id = 'Sample_Shop_Product_Note_ImplMapper';

    var $storage = 'Sample_Shop_Product_Note_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'note', 2 => 'noteAuthorId', ];

    var $nullableColumns = [ 0 => 'noteAuthorId', ];

    var $defaults = [
            'productId' => NULL,
            'note' => '',
            'noteAuthorId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'class' => 'Ac_Model_Typer_ExtraTable',
                'tableName' => '#__shop_product_notes',
                'uniformTypeId' => 'Sample_Shop_Product_Mapper',
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_person' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Product_Note 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Product_Note_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Product_Note 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Product_Note 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Product_Note 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Product_Note 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Product_Note 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Product_Note[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Product_Note[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Product_Note     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Product_Note     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Product_Note[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Product_Note[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Sample_Shop_Product_Note_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_noteShopProducts',
                'destCountVarName' => '_noteShopProductsCount',
                'destLoadedVarName' => '_noteShopProductsLoaded',
                'fieldLinks' => [
                    'noteAuthorId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_product_notes_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_product_notes_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Product_Note 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Shop_Product_Note_Storage extends Sample_Shop_Product_Note_Base_Storage {
  

}
<?php

class Sample_Shop_Product_Note_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_product_notes'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'note' => '',
            'noteAuthorId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'noteAuthorId', ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php 

class Sample_Shop_Product_Note_MapperMixable extends Sample_Shop_Product_Note_Base_ExtraTable {
    
}

<?php 

class Sample_Shop_Product_Note_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = false;
    
    protected $implMapper = 'Sample_Shop_Product_Note_ImplMapper';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_person' => [
                'srcMapperClass' => 'Sample_Shop_Product_Note_ImplMapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_person',
                'destVarName' => '_noteShopProducts',
                'destCountVarName' => '_noteShopProductsCount',
                'destLoadedVarName' => '_noteShopProductsLoaded',
                'fieldLinks' => [
                    'noteAuthorId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'person' => [
                'relationId' => '_person',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getDestObjectMethod' => 'getPerson',
                'setDestObjectMethod' => 'setPerson',
                'clearDestObjectMethod' => 'clearPerson',
            ],
        ];
    }
    
    
    /**
     * Loads several people of given one or more shopProductNotes 
     * @param Sample_Shop_Product_Note|array $shopProductNotes     
     */
    function loadPeopleFor($shopProductNotes) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($shopProductNotes); 
    }

}

<?php

class Sample_Shop_Product extends Sample_Shop_Product_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Product_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_shopCategories = false;

    var $_shopCategoriesCount = false;

    var $_shopCategoriesLoaded = false;

    var $_shopCategoryIds = false;

    var $_referencedShopProducts = false;

    var $_referencedShopProductsCount = false;

    var $_referencedShopProductsLoaded = false;

    var $_referencedShopProductIds = false;

    var $_referencingShopProducts = false;

    var $_referencingShopProductsCount = false;

    var $_referencingShopProductsLoaded = false;

    var $_referencingShopProductIds = false;

    var $_shopSpec = false;

    var $id = NULL;

    var $sku = '';

    var $title = '';

    var $metaId = NULL;

    var $pubId = NULL;

    var $_person = false;

    var $_noteShopProductsCount = false;

    var $_noteShopProductsLoaded = false;

    var $productId = NULL;

    var $note = '';

    var $noteAuthorId = NULL;
    
    var $_mapperClass = 'Sample_Shop_Product_Mapper';
    
    /**
     * @var Sample_Shop_Product_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Product_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'shopCategories', 1 => 'shopCategoryIds', 2 => 'referencedShopProducts', 3 => 'referencedShopProductIds', 4 => 'referencingShopProducts', 5 => 'referencingShopProductIds', 6 => 'shopSpec', 12 => 'person', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'shopCategories' => 'shopCategories', 'referencedShopProducts' => 'referencedShopProducts', 'referencingShopProducts' => 'referencingShopProducts', 'person' => 'noteShopProducts', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'shopCategories' => 'Sample_Shop_Category', 'referencedShopProducts' => 'Sample_Shop_Product', 'referencingShopProducts' => 'Sample_Shop_Product', 'shopSpec' => 'Sample_Shop_Spec', 'person' => 'Sample_Person', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopCategories' => [
                'className' => 'Sample_Shop_Category',
                'mapperClass' => 'Sample_Shop_Category_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_product_shop_categories'),
                'relationId' => '_shopCategories',
                'countVarName' => '_shopCategoriesCount',
                'nnIdsVarName' => '_shopCategoryIds',
                'referenceVarName' => '_shopCategories',
            ],
            'shopCategoryIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Category_Mapper',
                ],
                'showInTable' => false,
            ],
            'referencedShopProducts' => [
                'className' => 'Sample_Shop_Product',
                'mapperClass' => 'Sample_Shop_Product_Mapper',
                'otherModelIdInMethodsPrefix' => 'referenced',

                'caption' => new Ac_Lang_String('sample_shop_product_referenced_shop_products'),
                'relationId' => '_referencedShopProducts',
                'countVarName' => '_referencedShopProductsCount',
                'nnIdsVarName' => '_referencedShopProductIds',
                'referenceVarName' => '_referencedShopProducts',
            ],
            'referencedShopProductIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Product_Mapper',
                ],
                'showInTable' => false,
            ],
            'referencingShopProducts' => [
                'className' => 'Sample_Shop_Product',
                'mapperClass' => 'Sample_Shop_Product_Mapper',
                'otherModelIdInMethodsPrefix' => 'referencing',

                'caption' => new Ac_Lang_String('sample_shop_product_referencing_shop_products'),
                'relationId' => '_referencingShopProducts',
                'countVarName' => '_referencingShopProductsCount',
                'nnIdsVarName' => '_referencingShopProductIds',
                'referenceVarName' => '_referencingShopProducts',
            ],
            'referencingShopProductIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Product_Mapper',
                ],
                'showInTable' => false,
            ],
            'shopSpec' => [
                'className' => 'Sample_Shop_Spec',
                'mapperClass' => 'Sample_Shop_Spec_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_product_shop_spec'),
                'relationId' => '_shopSpec',
                'referenceVarName' => '_shopSpec',
            ],
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_product_id'),
            ],
            'sku' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_product_sku'),
            ],
            'title' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_product_title'),
            ],
            'metaId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_product_meta_id'),
            ],
            'pubId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Publish_ImplMapper',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_product_pub_id'),
            ],
            'person' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_product_person'),
                'relationId' => '_person',
                'countVarName' => '_noteShopProductsCount',
                'referenceVarName' => '_person',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '11',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Product_Mapper',
                ],
                'objectPropertyName' => 'referencedShopProducts',

                'caption' => new Ac_Lang_String('sample_shop_product_product_id'),
            ],
            'note' => [
                'controlType' => 'textArea',

                'caption' => new Ac_Lang_String('sample_shop_product_note'),
            ],
            'noteAuthorId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'objectPropertyName' => 'person',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_product_note_author_id'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countShopCategories() {
        if (is_array($this->_shopCategories)) return count($this->_shopCategories);
        if ($this->_shopCategoriesCount === false) {
            $this->mapper->loadAssocCountFor($this, '_shopCategories');
        }
        return $this->_shopCategoriesCount;
        
    }

    function listShopCategories() {
        if (!$this->_shopCategoriesLoaded) {
            $this->mapper->loadShopCategoriesFor($this);
        }
        return array_keys($this->_shopCategories);
    }
    
    /**
     * @return bool
     */
    function isShopCategoriesLoaded() {
        return $this->_shopCategoriesLoaded;
    }
    
    /**
     * @return Sample_Shop_Category 
     */
    function getShopCategory($id) {
        if (!$this->_shopCategoriesLoaded) {
            $this->mapper->loadShopCategoriesFor($this);
        }
        
        if (!isset($this->_shopCategories[$id])) trigger_error ('No such Shop category: \''.$id.'\'', E_USER_ERROR);
        return $this->_shopCategories[$id];
    }
    
    /**
     * @return Sample_Shop_Category 
     */
    function getShopCategoriesItem($id) {
        return $this->getShopCategory($id);
    }
    
    /**
     * @return Sample_Shop_Category[] 
     */
    function getAllShopCategories() {
        $res = [];
        foreach ($this->listShopCategories() as $id)
            $res[] = $this->getShopCategory($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Category $shopCategory 
     */
    function addShopCategory($shopCategory) {
        if (!is_a($shopCategory, 'Sample_Shop_Category')) trigger_error('$shopCategory must be an instance of Sample_Shop_Category', E_USER_ERROR);
        $this->listShopCategories();
        $this->_shopCategories[] = $shopCategory;
        
        if (is_array($shopCategory->_shopProducts) && !Ac_Util::sameInArray($this, $shopCategory->_shopProducts)) {
                $shopCategory->_shopProducts[] = $this;
        }
        
    }

    /**
     * @return Sample_Shop_Category  
     */
    function createShopCategory($values = array()) {
        $m = $this->getMapper('Sample_Shop_Category_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addShopCategory($res);
        return $res;
    }
    

    function getShopCategoryIds() {
        if ($this->_shopCategoryIds === false) {
            $this->mapper->loadShopCategoryIdsFor($this);
        }
        return $this->_shopCategoryIds;
    }
    
    function setShopCategoryIds($shopCategoryIds) {
        if (!is_array($shopCategoryIds)) trigger_error('$shopCategoryIds must be an array', E_USER_ERROR);
        $this->_shopCategoryIds = $shopCategoryIds;
        $this->_shopCategoriesLoaded = false;
        $this->_shopCategories = false; 
    }
    
    function clearShopCategories() {
        $this->_shopCategories = array();
        $this->_shopCategoriesLoaded = true;
        $this->_shopCategoryIds = false;
    }               

    function countReferencedShopProducts() {
        if (is_array($this->_referencedShopProducts)) return count($this->_referencedShopProducts);
        if ($this->_referencedShopProductsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_referencedShopProducts');
        }
        return $this->_referencedShopProductsCount;
        
    }

    function listReferencedShopProducts() {
        if (!$this->_referencedShopProductsLoaded) {
            $this->mapper->loadReferencedShopProductsFor($this);
        }
        return array_keys($this->_referencedShopProducts);
    }
    
    /**
     * @return bool
     */
    function isReferencedShopProductsLoaded() {
        return $this->_referencedShopProductsLoaded;
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getReferencedShopProduct($id) {
        if (!$this->_referencedShopProductsLoaded) {
            $this->mapper->loadReferencedShopProductsFor($this);
        }
        
        if (!isset($this->_referencedShopProducts[$id])) trigger_error ('No such Shop product: \''.$id.'\'', E_USER_ERROR);
        return $this->_referencedShopProducts[$id];
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getReferencedShopProductsItem($id) {
        return $this->getReferencedShopProduct($id);
    }
    
    /**
     * @return Sample_Shop_Product[] 
     */
    function getAllReferencedShopProducts() {
        $res = [];
        foreach ($this->listReferencedShopProducts() as $id)
            $res[] = $this->getReferencedShopProduct($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Product $referencedShopProduct 
     */
    function addReferencedShopProduct($referencedShopProduct) {
        if (!is_a($referencedShopProduct, 'Sample_Shop_Product')) trigger_error('$referencedShopProduct must be an instance of Sample_Shop_Product', E_USER_ERROR);
        $this->listReferencedShopProducts();
        $this->_referencedShopProducts[] = $referencedShopProduct;
        
        if (is_array($referencedShopProduct->_referencingShopProducts) && !Ac_Util::sameInArray($this, $referencedShopProduct->_referencingShopProducts)) {
                $referencedShopProduct->_referencingShopProducts[] = $this;
        }
        
    }

    /**
     * @return Sample_Shop_Product  
     */
    function createReferencedShopProduct($values = array()) {
        $m = $this->getMapper('Sample_Shop_Product_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addReferencedShopProduct($res);
        return $res;
    }
    

    function getReferencedShopProductIds() {
        if ($this->_referencedShopProductIds === false) {
            $this->mapper->loadReferencedShopProductIdsFor($this);
        }
        return $this->_referencedShopProductIds;
    }
    
    function setReferencedShopProductIds($referencedShopProductIds) {
        if (!is_array($referencedShopProductIds)) trigger_error('$referencedShopProductIds must be an array', E_USER_ERROR);
        $this->_referencedShopProductIds = $referencedShopProductIds;
        $this->_referencedShopProductsLoaded = false;
        $this->_referencedShopProducts = false; 
    }
    
    function clearReferencedShopProducts() {
        $this->_referencedShopProducts = array();
        $this->_referencedShopProductsLoaded = true;
        $this->_referencedShopProductIds = false;
    }               

    function countReferencingShopProducts() {
        if (is_array($this->_referencingShopProducts)) return count($this->_referencingShopProducts);
        if ($this->_referencingShopProductsCount === false) {
            $this->mapper->loadAssocCountFor($this, '_referencingShopProducts');
        }
        return $this->_referencingShopProductsCount;
        
    }

    function listReferencingShopProducts() {
        if (!$this->_referencingShopProductsLoaded) {
            $this->mapper->loadReferencingShopProductsFor($this);
        }
        return array_keys($this->_referencingShopProducts);
    }
    
    /**
     * @return bool
     */
    function isReferencingShopProductsLoaded() {
        return $this->_referencingShopProductsLoaded;
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getReferencingShopProduct($id) {
        if (!$this->_referencingShopProductsLoaded) {
            $this->mapper->loadReferencingShopProductsFor($this);
        }
        
        if (!isset($this->_referencingShopProducts[$id])) trigger_error ('No such Shop product: \''.$id.'\'', E_USER_ERROR);
        return $this->_referencingShopProducts[$id];
    }
    
    /**
     * @return Sample_Shop_Product 
     */
    function getReferencingShopProductsItem($id) {
        return $this->getReferencingShopProduct($id);
    }
    
    /**
     * @return Sample_Shop_Product[] 
     */
    function getAllReferencingShopProducts() {
        $res = [];
        foreach ($this->listReferencingShopProducts() as $id)
            $res[] = $this->getReferencingShopProduct($id);
        return $res;
    }
    
    /**
     * @param Sample_Shop_Product $referencingShopProduct 
     */
    function addReferencingShopProduct($referencingShopProduct) {
        if (!is_a($referencingShopProduct, 'Sample_Shop_Product')) trigger_error('$referencingShopProduct must be an instance of Sample_Shop_Product', E_USER_ERROR);
        $this->listReferencingShopProducts();
        $this->_referencingShopProducts[] = $referencingShopProduct;
        
        if (is_array($referencingShopProduct->_referencedShopProducts) && !Ac_Util::sameInArray($this, $referencingShopProduct->_referencedShopProducts)) {
                $referencingShopProduct->_referencedShopProducts[] = $this;
        }
        
    }

    /**
     * @return Sample_Shop_Product  
     */
    function createReferencingShopProduct($values = array()) {
        $m = $this->getMapper('Sample_Shop_Product_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addReferencingShopProduct($res);
        return $res;
    }
    

    function getReferencingShopProductIds() {
        if ($this->_referencingShopProductIds === false) {
            $this->mapper->loadReferencingShopProductIdsFor($this);
        }
        return $this->_referencingShopProductIds;
    }
    
    function setReferencingShopProductIds($referencingShopProductIds) {
        if (!is_array($referencingShopProductIds)) trigger_error('$referencingShopProductIds must be an array', E_USER_ERROR);
        $this->_referencingShopProductIds = $referencingShopProductIds;
        $this->_referencingShopProductsLoaded = false;
        $this->_referencingShopProducts = false; 
    }
    
    function clearReferencingShopProducts() {
        $this->_referencingShopProducts = array();
        $this->_referencingShopProductsLoaded = true;
        $this->_referencingShopProductIds = false;
    }               
        
    
    /**
     * @return Sample_Shop_Spec 
     */
    function getShopSpec() {
        if ($this->_shopSpec === false) {
            $this->mapper->loadShopSpecsFor($this);
            
        }
        return $this->_shopSpec;
    }
    
    /**
     * @param Sample_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec === false) $this->_shopSpec = false;
        elseif ($shopSpec === null) $this->_shopSpec = null;
        else {
            if (!is_a($shopSpec, 'Sample_Shop_Spec')) trigger_error('$shopSpec must be an instance of Sample_Shop_Spec', E_USER_ERROR);
            if (!is_object($this->_shopSpec) && !Ac_Util::sameObject($this->_shopSpec, $shopSpec)) { 
                $this->_shopSpec = $shopSpec;
            }
        }
    }
    
    function clearShopSpec() {
        $this->shopSpec = null;
    }

    /**
     * @return Sample_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        $m = $this->getMapper('Sample_Shop_Spec_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopSpec($res);
        return $res;
    }

    
        
    
    /**
     * @return Sample_Person 
     */
    function getPerson() {
        if ($this->_person === false) {
            $this->mapper->loadPeopleFor($this);
            
        }
        return $this->_person;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function setPerson($person) {
        if ($person === false) $this->_person = false;
        elseif ($person === null) $this->_person = null;
        else {
            if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
            if (!is_object($this->_person) && !Ac_Util::sameObject($this->_person, $person)) { 
                $this->_person = $person;
            }
        }
    }
    
    function clearPerson() {
        $this->person = null;
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setPerson($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Product_Mapper extends Sample_Shop_Product_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Product_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Product[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Product_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Shop_Product';

    var $tableName = '#__shop_products';

    var $id = 'Sample_Shop_Product_Mapper';

    var $storage = 'Sample_Shop_Product_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'sku', 2 => 'title', 3 => 'metaId', 4 => 'pubId', ];

    var $nullableColumns = [ 0 => 'metaId', 1 => 'pubId', ];

    var $defaults = [
            'id' => NULL,
            'sku' => '',
            'title' => '',
            'metaId' => NULL,
            'pubId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'publish' => [
                'class' => 'Sample_Publish_MapperMixable',
                'colMap' => [
                    'id' => 'pubId',
                ],
                'fieldNames' => [
                    'sharedObjectType' => false,
                ],
            ],
            'extraCode' => [
                'class' => 'Sample_Shop_Product_Extra_Code_MapperMixable',
                'colMap' => [
                    'productId' => 'id',
                ],
            ],
            'note' => [
                'class' => 'Sample_Shop_Product_Note_MapperMixable',
                'colMap' => [
                    'productId' => 'id',
                ],
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopCategories' => false,
            '_shopCategoriesCount' => false,
            '_shopCategoriesLoaded' => false,
            '_shopCategoryIds' => false,
            '_referencedShopProducts' => false,
            '_referencedShopProductsCount' => false,
            '_referencedShopProductsLoaded' => false,
            '_referencedShopProductIds' => false,
            '_referencingShopProducts' => false,
            '_referencingShopProductsCount' => false,
            '_referencingShopProductsLoaded' => false,
            '_referencingShopProductIds' => false,
            '_shopSpec' => false,
            '_person' => false,
            '_noteShopProductsCount' => false,
            '_noteShopProductsLoaded' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Product 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Product_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Product 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Product 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Product 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Product 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Product 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Product[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Product[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Product     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Product     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Product[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Product[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopCategories' => [
                'srcMapperClass' => 'Sample_Shop_Product_Mapper',
                'destMapperClass' => 'Sample_Shop_Category_Mapper',
                'srcVarName' => '_shopCategories',
                'srcNNIdsVarName' => '_shopCategoryIds',
                'srcCountVarName' => '_shopCategoriesCount',
                'srcLoadedVarName' => '_shopCategoriesLoaded',
                'destVarName' => '_shopProducts',
                'destCountVarName' => '_shopProductsCount',
                'destLoadedVarName' => '_shopProductsLoaded',
                'destNNIdsVarName' => '_shopProductIds',
                'fieldLinks' => [
                    'id' => 'productId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadShopCategoryIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadShopProductIdsFor',
                ],
                'midTableName' => '#__shop_product_categories',
                'fieldLinks2' => [
                    'categoryId' => 'id',
                ],
            ],
            '_referencedShopProducts' => [
                'srcMapperClass' => 'Sample_Shop_Product_Mapper',
                'destMapperClass' => 'Sample_Shop_Product_Mapper',
                'srcVarName' => '_referencedShopProducts',
                'srcNNIdsVarName' => '_referencedShopProductIds',
                'srcCountVarName' => '_referencedShopProductsCount',
                'srcLoadedVarName' => '_referencedShopProductsLoaded',
                'destVarName' => '_referencingShopProducts',
                'destCountVarName' => '_referencingShopProductsCount',
                'destLoadedVarName' => '_referencingShopProductsLoaded',
                'destNNIdsVarName' => '_referencingShopProductIds',
                'fieldLinks' => [
                    'id' => 'productId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadReferencedShopProductIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadReferencingShopProductIdsFor',
                ],
                'midTableName' => '#__shop_product_related',
                'fieldLinks2' => [
                    'relatedProductId' => 'id',
                ],
            ],
            '_referencingShopProducts' => [
                'srcMapperClass' => 'Sample_Shop_Product_Mapper',
                'destMapperClass' => 'Sample_Shop_Product_Mapper',
                'srcVarName' => '_referencingShopProducts',
                'srcNNIdsVarName' => '_referencingShopProductIds',
                'srcCountVarName' => '_referencingShopProductsCount',
                'srcLoadedVarName' => '_referencingShopProductsLoaded',
                'destVarName' => '_referencedShopProducts',
                'destCountVarName' => '_referencedShopProductsCount',
                'destLoadedVarName' => '_referencedShopProductsLoaded',
                'destNNIdsVarName' => '_referencedShopProductIds',
                'fieldLinks' => [
                    'id' => 'relatedProductId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadReferencingShopProductIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadReferencedShopProductIdsFor',
                ],
                'midTableName' => '#__shop_product_related',
                'fieldLinks2' => [
                    'productId' => 'id',
                ],
            ],
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Product_Mapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'destVarName' => '_shopProduct',
                'fieldLinks' => [
                    'id' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'shopCategories' => [
                'relationId' => '_shopCategories',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopCategory',
                'plural' => 'shopCategories',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadShopCategoriesFor',
                'loadSrcObjectsMapperMethod' => 'loadForShopCategories',
                'getSrcObjectsMapperMethod' => 'getOfShopCategories',
                'createDestObjectMethod' => 'createShopCategory',
                'getAllDestObjectsMethod' => 'getAllShopCategories',
                'listDestObjectsMethod' => 'listShopCategories',
                'countDestObjectsMethod' => 'countShopCategories',
                'getDestObjectMethod' => 'getShopCategory',
                'addDestObjectMethod' => 'addShopCategory',
                'isDestLoadedMethod' => 'isShopCategoriesLoaded',
                'loadDestIdsMapperMethod' => 'loadShopCategoryIdsFor',
                'getDestIdsMethod' => 'getShopCategoryIds',
                'setDestIdsMethod' => 'setShopCategoryIds',
                'clearDestObjectsMethod' => 'clearShopCategories',
            ],
            'referencedShopProducts' => [
                'relationId' => '_referencedShopProducts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'referencedShopProduct',
                'plural' => 'referencedShopProducts',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadReferencedShopProductsFor',
                'loadSrcObjectsMapperMethod' => 'loadForReferencedShopProducts',
                'getSrcObjectsMapperMethod' => 'getOfReferencedShopProducts',
                'createDestObjectMethod' => 'createReferencedShopProduct',
                'getAllDestObjectsMethod' => 'getAllReferencedShopProducts',
                'listDestObjectsMethod' => 'listReferencedShopProducts',
                'countDestObjectsMethod' => 'countReferencedShopProducts',
                'getDestObjectMethod' => 'getReferencedShopProduct',
                'addDestObjectMethod' => 'addReferencedShopProduct',
                'isDestLoadedMethod' => 'isReferencedShopProductsLoaded',
                'loadDestIdsMapperMethod' => 'loadReferencedShopProductIdsFor',
                'getDestIdsMethod' => 'getReferencedShopProductIds',
                'setDestIdsMethod' => 'setReferencedShopProductIds',
                'clearDestObjectsMethod' => 'clearReferencedShopProducts',
            ],
            'referencingShopProducts' => [
                'relationId' => '_referencingShopProducts',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'referencingShopProduct',
                'plural' => 'referencingShopProducts',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadReferencingShopProductsFor',
                'loadSrcObjectsMapperMethod' => 'loadForReferencingShopProducts',
                'getSrcObjectsMapperMethod' => 'getOfReferencingShopProducts',
                'createDestObjectMethod' => 'createReferencingShopProduct',
                'getAllDestObjectsMethod' => 'getAllReferencingShopProducts',
                'listDestObjectsMethod' => 'listReferencingShopProducts',
                'countDestObjectsMethod' => 'countReferencingShopProducts',
                'getDestObjectMethod' => 'getReferencingShopProduct',
                'addDestObjectMethod' => 'addReferencingShopProduct',
                'isDestLoadedMethod' => 'isReferencingShopProductsLoaded',
                'loadDestIdsMapperMethod' => 'loadReferencingShopProductIdsFor',
                'getDestIdsMethod' => 'getReferencingShopProductIds',
                'setDestIdsMethod' => 'setReferencingShopProductIds',
                'clearDestObjectsMethod' => 'clearReferencingShopProducts',
            ],
            'shopSpec' => [
                'relationId' => '_shopSpec',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopSpec',
                'plural' => 'shopSpecs',
                'isReferenced' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopSpecsFor',
                'loadSrcObjectsMapperMethod' => 'loadForShopSpecs',
                'getSrcObjectsMapperMethod' => 'getOfShopSpecs',
                'createDestObjectMethod' => 'createShopSpec',
                'getDestObjectMethod' => 'getShopSpec',
                'setDestObjectMethod' => 'setShopSpec',
                'clearDestObjectMethod' => 'clearShopSpec',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_products_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_products_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
            'idxPubId' => [
                0 => 'pubId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Product 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Shop_Product 
     */
    function loadByPubId ($pubId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('pubId').' = '.$this->getDb()->q($pubId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more shopProducts of given one or more shopCategories 
     * @param Sample_Shop_Product|array $shopCategories     
     * @return Sample_Shop_Product|array of Sample_Shop_Product objects  
     */
    function getOfShopCategories($shopCategories) {
        $rel = $this->getRelation('_shopCategories');
        $res = $rel->getSrc($shopCategories); 
        return $res;
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopCategories 
     * @param Sample_Shop_Category|array $shopCategories of Sample_Shop_Product objects      
     */
    function loadForShopCategories($shopCategories) {
        $rel = $this->getRelation('_shopCategories');
        return $rel->loadSrc($shopCategories); 
    }
    
    /**
     * Loads one or more shopCategories of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts     
     */
    function loadShopCategoriesFor($shopProducts) {
        $rel = $this->getRelation('_shopCategories');
        return $rel->loadDest($shopProducts); 
    }


    /**
     * @param Sample_Shop_Product|array $shopProducts 
     */
     function loadShopCategoryIdsFor($shopProducts) {
        $rel = $this->getRelation('_shopCategories');
        return $rel->loadDestNNIds($shopProducts); 
    }
    
    /**
     * Returns (but not loads!) one or more shopProducts of given one or more shopProducts 
     * @param Sample_Shop_Product|array $referencedShopProducts     
     * @return Sample_Shop_Product|array of Sample_Shop_Product objects  
     */
    function getOfReferencedShopProducts($referencedShopProducts) {
        $rel = $this->getRelation('_referencedShopProducts');
        $res = $rel->getSrc($referencedShopProducts); 
        return $res;
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopProducts 
     * @param Sample_Shop_Product|array $referencedShopProducts of Sample_Shop_Product objects      
     */
    function loadForReferencedShopProducts($referencedShopProducts) {
        $rel = $this->getRelation('_referencedShopProducts');
        return $rel->loadSrc($referencedShopProducts); 
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts     
     */
    function loadReferencedShopProductsFor($shopProducts) {
        $rel = $this->getRelation('_referencedShopProducts');
        return $rel->loadDest($shopProducts); 
    }


    /**
     * @param Sample_Shop_Product|array $shopProducts 
     */
     function loadReferencedShopProductIdsFor($shopProducts) {
        $rel = $this->getRelation('_referencedShopProducts');
        return $rel->loadDestNNIds($shopProducts); 
    }
    
    /**
     * Returns (but not loads!) one or more shopProducts of given one or more shopProducts 
     * @param Sample_Shop_Product|array $referencingShopProducts     
     * @return Sample_Shop_Product|array of Sample_Shop_Product objects  
     */
    function getOfReferencingShopProducts($referencingShopProducts) {
        $rel = $this->getRelation('_referencingShopProducts');
        $res = $rel->getSrc($referencingShopProducts); 
        return $res;
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopProducts 
     * @param Sample_Shop_Product|array $referencingShopProducts of Sample_Shop_Product objects      
     */
    function loadForReferencingShopProducts($referencingShopProducts) {
        $rel = $this->getRelation('_referencingShopProducts');
        return $rel->loadSrc($referencingShopProducts); 
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts     
     */
    function loadReferencingShopProductsFor($shopProducts) {
        $rel = $this->getRelation('_referencingShopProducts');
        return $rel->loadDest($shopProducts); 
    }


    /**
     * @param Sample_Shop_Product|array $shopProducts 
     */
     function loadReferencingShopProductIdsFor($shopProducts) {
        $rel = $this->getRelation('_referencingShopProducts');
        return $rel->loadDestNNIds($shopProducts); 
    }
    
    /**
     * Returns (but not loads!) one or more shopProducts of given one or more shopSpecs 
     * @param Sample_Shop_Product|array $shopSpecs     
     * @return Sample_Shop_Product|array of Sample_Shop_Product objects  
     */
    function getOfShopSpecs($shopSpecs) {
        $rel = $this->getRelation('_shopSpec');
        $res = $rel->getSrc($shopSpecs); 
        return $res;
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopSpecs 
     * @param Sample_Shop_Spec|array $shopSpecs of Sample_Shop_Product objects      
     */
    function loadForShopSpecs($shopSpecs) {
        $rel = $this->getRelation('_shopSpec');
        return $rel->loadSrc($shopSpecs); 
    }
    
    /**
     * Loads one or more shopSpecs of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts     
     */
    function loadShopSpecsFor($shopProducts) {
        $rel = $this->getRelation('_shopSpec');
        return $rel->loadDest($shopProducts); 
    }

    
    
    /**
     * Loads several people of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts     
     */
    function loadPeopleFor($shopProducts) {
        $rel = $this->getRelation('_person');
        return $rel->loadDest($shopProducts); 
    }

    
}

<?php

class Sample_Shop_Product_Storage extends Sample_Shop_Product_Base_Storage {
  

}
<?php

class Sample_Shop_Product_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_products'; 

    var $recordClass = 'Sample_Shop_Product'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'sku' => '',
            'title' => '',
            'metaId' => NULL,
            'pubId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'metaId', 1 => 'pubId', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
    'idxPubId' => [
        0 => 'pubId',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'shopCategoryIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'productId',
                        'midDestKey' => 'categoryId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__shopCategories',
                    ],
                    'referencedShopProductIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'productId',
                        'midDestKey' => 'relatedProductId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__referencedShopProducts',
                    ],
                    'referencingShopProductIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'relatedProductId',
                        'midDestKey' => 'productId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__referencingShopProducts',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Shop_Spec_Computer extends Sample_Shop_Spec_Computer_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Spec_Computer_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    var $_hasDefaults = true;

    var $_shopSpec = false;

    var $productId = NULL;

    var $hdd = 0;

    var $ram = 0;

    var $os = '';

    protected $preserveMetaCache = true;
    
    /**
     * @var Sample_Shop_Spec_Computer_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Sample_Shop_Spec_Computer';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [ 0 => 'shopSpec', ]);
    }
    
 
    protected function listOwnAssociations() {
        return [ 'shopSpec' => 'Sample_Shop_Spec', ];
    }

    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopSpec' => [
                'className' => 'Sample_Shop_Spec',
                'mapperClass' => 'Sample_Shop_Spec_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_spec_computer_shop_spec'),
                'relationId' => '_shopSpec',
                'referenceVarName' => '_shopSpec',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Spec_Mapper',
                ],
                'objectPropertyName' => 'shopSpec',

                'caption' => new Ac_Lang_String('sample_shop_spec_computer_product_id'),
            ],
            'hdd' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_computer_hdd'),
            ],
            'ram' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_computer_ram'),
            ],
            'os' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_spec_computer_os'),
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Sample_Shop_Spec 
     */
    function getShopSpec() {
        if ($this->_shopSpec === false) {
            $this->mapper->loadShopSpecsFor($this->mixin);
            
        }
        return $this->_shopSpec;
    }
    
    /**
     * @param Sample_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec === false) $this->_shopSpec = false;
        elseif ($shopSpec === null) $this->_shopSpec = null;
        else {
            if (!is_a($shopSpec, 'Sample_Shop_Spec')) trigger_error('$shopSpec must be an instance of Sample_Shop_Spec', E_USER_ERROR);
            if (!is_object($this->_shopSpec) && !Ac_Util::sameObject($this->_shopSpec, $shopSpec)) { 
                $this->_shopSpec = $shopSpec;
            }
        }
    }
    
    function clearShopSpec() {
        $this->shopSpec = null;
    }

    /**
     * @return Sample_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        $m = $this->getMapper('Sample_Shop_Spec_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopSpec($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Spec_Computer_ImplMapper extends Sample_Shop_Spec_Computer_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Spec_Computer_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Spec_Computer[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Spec_Computer_Base_ImplMapper extends Ac_Model_Mapper {

    var $pk = 'productId';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__shop_spec_computer';

    var $id = 'Sample_Shop_Spec_Computer_ImplMapper';

    var $storage = 'Sample_Shop_Spec_Computer_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'hdd', 2 => 'ram', 3 => 'os', ];

    var $defaults = [
            'productId' => NULL,
            'hdd' => NULL,
            'ram' => NULL,
            'os' => '',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopSpec' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Spec_Computer 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Spec_Computer_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Spec_Computer 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Spec_Computer 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Spec_Computer 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Spec_Computer 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Spec_Computer 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Spec_Computer[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Spec_Computer[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Spec_Computer     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Spec_Computer     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Spec_Computer[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Spec_Computer[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'os';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Computer_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_spec_computer_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_spec_computer_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Spec_Computer 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Shop_Spec_Computer_Storage extends Sample_Shop_Spec_Computer_Base_Storage {
  

}
<?php

class Sample_Shop_Spec_Computer_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_spec_computer'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'hdd' => NULL,
            'ram' => NULL,
            'os' => '',
        ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php 

class Sample_Shop_Spec_Computer_MapperMixable extends Sample_Shop_Spec_Computer_Base_ExtraTable {
    
}

<?php 

class Sample_Shop_Spec_Computer_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = true;
    
    protected $modelMixable = 'Sample_Shop_Spec_Computer';
    
    protected $implMapper = 'Sample_Shop_Spec_Computer_ImplMapper';
    
    protected $modelMixableId = 'Sample_Shop_Spec_Computer';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Computer_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'shopSpec' => [
                'relationId' => '_shopSpec',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopSpec',
                'plural' => 'shopSpecs',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopSpecsFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfShopSpecs',
                'createDestObjectMethod' => 'createShopSpec',
                'getDestObjectMethod' => 'getShopSpec',
                'setDestObjectMethod' => 'setShopSpec',
                'clearDestObjectMethod' => 'clearShopSpec',
            ],
        ];
    }
    
    
    /**
     * Loads one or more shopSpecs of given one or more shopSpecComputer 
     * @param Sample_Shop_Spec_Computer|array $shopSpecComputer     
     */
    function loadShopSpecsFor($shopSpecComputer) {
        $rel = $this->getRelation('_shopSpec');
        return $rel->loadDest($shopSpecComputer); 
    }

}

<?php

class Sample_Shop_Spec_Food extends Sample_Shop_Spec_Food_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Spec_Food_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    var $_hasDefaults = true;

    var $_shopSpec = false;

    var $productId = NULL;

    var $storageType = 'shelfStable';

    var $storageTerm = 0;

    var $storageTermUnit = 'days';

    protected $preserveMetaCache = true;
    
    /**
     * @var Sample_Shop_Spec_Food_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Sample_Shop_Spec_Food';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [ 0 => 'shopSpec', ]);
    }
    
 
    protected function listOwnAssociations() {
        return [ 'shopSpec' => 'Sample_Shop_Spec', ];
    }

    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopSpec' => [
                'className' => 'Sample_Shop_Spec',
                'mapperClass' => 'Sample_Shop_Spec_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_spec_food_shop_spec'),
                'relationId' => '_shopSpec',
                'referenceVarName' => '_shopSpec',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Spec_Mapper',
                ],
                'objectPropertyName' => 'shopSpec',

                'caption' => new Ac_Lang_String('sample_shop_spec_food_product_id'),
            ],
            'storageType' => [
                'controlType' => 'selectList',
                'valueList' => [
                    'shelfStable' => 'shelfStable',
                    'frozen' => 'frozen',
                    'refrigerated' => 'refrigerated',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_spec_food_storage_type'),
            ],
            'storageTerm' => [
                'dataType' => 'int',
                'maxLength' => '3',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_food_storage_term'),
            ],
            'storageTermUnit' => [
                'controlType' => 'selectList',
                'valueList' => [
                    'days' => 'days',
                    'months' => 'months',
                    'years' => 'years',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_food_storage_term_unit'),
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Sample_Shop_Spec 
     */
    function getShopSpec() {
        if ($this->_shopSpec === false) {
            $this->mapper->loadShopSpecsFor($this->mixin);
            
        }
        return $this->_shopSpec;
    }
    
    /**
     * @param Sample_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec === false) $this->_shopSpec = false;
        elseif ($shopSpec === null) $this->_shopSpec = null;
        else {
            if (!is_a($shopSpec, 'Sample_Shop_Spec')) trigger_error('$shopSpec must be an instance of Sample_Shop_Spec', E_USER_ERROR);
            if (!is_object($this->_shopSpec) && !Ac_Util::sameObject($this->_shopSpec, $shopSpec)) { 
                $this->_shopSpec = $shopSpec;
            }
        }
    }
    
    function clearShopSpec() {
        $this->shopSpec = null;
    }

    /**
     * @return Sample_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        $m = $this->getMapper('Sample_Shop_Spec_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopSpec($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Spec_Food_ImplMapper extends Sample_Shop_Spec_Food_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Spec_Food_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Spec_Food[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Spec_Food_Base_ImplMapper extends Ac_Model_Mapper {

    var $pk = 'productId';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__shop_spec_food';

    var $id = 'Sample_Shop_Spec_Food_ImplMapper';

    var $storage = 'Sample_Shop_Spec_Food_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'storageType', 2 => 'storageTerm', 3 => 'storageTermUnit', ];

    var $nullableColumns = [ 0 => 'storageType', ];

    var $defaults = [
            'productId' => NULL,
            'storageType' => 'shelfStable',
            'storageTerm' => 0,
            'storageTermUnit' => 'days',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopSpec' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Spec_Food 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Spec_Food_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Spec_Food 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Spec_Food 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Spec_Food 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Spec_Food 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Spec_Food 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Spec_Food[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Spec_Food[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Spec_Food     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Spec_Food     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Spec_Food[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Spec_Food[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Food_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_spec_food_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_spec_food_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Spec_Food 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Shop_Spec_Food_Storage extends Sample_Shop_Spec_Food_Base_Storage {
  

}
<?php

class Sample_Shop_Spec_Food_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_spec_food'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'storageType' => 'shelfStable',
            'storageTerm' => 0,
            'storageTermUnit' => 'days',
        ]; 

    var $nullableColumns = [ 0 => 'storageType', ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php 

class Sample_Shop_Spec_Food_MapperMixable extends Sample_Shop_Spec_Food_Base_ExtraTable {
    
}

<?php 

class Sample_Shop_Spec_Food_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = true;
    
    protected $modelMixable = 'Sample_Shop_Spec_Food';
    
    protected $implMapper = 'Sample_Shop_Spec_Food_ImplMapper';
    
    protected $modelMixableId = 'Sample_Shop_Spec_Food';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Food_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'shopSpec' => [
                'relationId' => '_shopSpec',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopSpec',
                'plural' => 'shopSpecs',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopSpecsFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfShopSpecs',
                'createDestObjectMethod' => 'createShopSpec',
                'getDestObjectMethod' => 'getShopSpec',
                'setDestObjectMethod' => 'setShopSpec',
                'clearDestObjectMethod' => 'clearShopSpec',
            ],
        ];
    }
    
    
    /**
     * Loads one or more shopSpecs of given one or more shopSpecFood 
     * @param Sample_Shop_Spec_Food|array $shopSpecFood     
     */
    function loadShopSpecsFor($shopSpecFood) {
        $rel = $this->getRelation('_shopSpec');
        return $rel->loadDest($shopSpecFood); 
    }

}

<?php

class Sample_Shop_Spec_Laptop extends Sample_Shop_Spec_Laptop_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Spec_Laptop_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    var $_hasDefaults = true;

    var $_shopSpec = false;

    var $productId = NULL;

    var $weight = 0;

    var $battery = '';

    protected $preserveMetaCache = true;
    
    /**
     * @var Sample_Shop_Spec_Laptop_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Sample_Shop_Spec_Laptop';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [ 0 => 'shopSpec', ]);
    }
    
 
    protected function listOwnAssociations() {
        return [ 'shopSpec' => 'Sample_Shop_Spec', ];
    }

    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopSpec' => [
                'className' => 'Sample_Shop_Spec',
                'mapperClass' => 'Sample_Shop_Spec_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_spec_laptop_shop_spec'),
                'relationId' => '_shopSpec',
                'referenceVarName' => '_shopSpec',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Spec_Mapper',
                ],
                'objectPropertyName' => 'shopSpec',

                'caption' => new Ac_Lang_String('sample_shop_spec_laptop_product_id'),
            ],
            'weight' => [
                'dataType' => 'float',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_laptop_weight'),
            ],
            'battery' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_spec_laptop_battery'),
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Sample_Shop_Spec 
     */
    function getShopSpec() {
        if ($this->_shopSpec === false) {
            $this->mapper->loadShopSpecsFor($this->mixin);
            
        }
        return $this->_shopSpec;
    }
    
    /**
     * @param Sample_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec === false) $this->_shopSpec = false;
        elseif ($shopSpec === null) $this->_shopSpec = null;
        else {
            if (!is_a($shopSpec, 'Sample_Shop_Spec')) trigger_error('$shopSpec must be an instance of Sample_Shop_Spec', E_USER_ERROR);
            if (!is_object($this->_shopSpec) && !Ac_Util::sameObject($this->_shopSpec, $shopSpec)) { 
                $this->_shopSpec = $shopSpec;
            }
        }
    }
    
    function clearShopSpec() {
        $this->shopSpec = null;
    }

    /**
     * @return Sample_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        $m = $this->getMapper('Sample_Shop_Spec_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopSpec($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Spec_Laptop_ImplMapper extends Sample_Shop_Spec_Laptop_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Spec_Laptop_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Spec_Laptop[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Spec_Laptop_Base_ImplMapper extends Ac_Model_Mapper {

    var $pk = 'productId';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__shop_spec_laptop';

    var $id = 'Sample_Shop_Spec_Laptop_ImplMapper';

    var $storage = 'Sample_Shop_Spec_Laptop_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'weight', 2 => 'battery', ];

    var $defaults = [
            'productId' => NULL,
            'weight' => NULL,
            'battery' => '',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopSpec' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Spec_Laptop 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Spec_Laptop_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Spec_Laptop 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Spec_Laptop 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Spec_Laptop 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Spec_Laptop 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Spec_Laptop 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Spec_Laptop[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Spec_Laptop[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Spec_Laptop     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Spec_Laptop     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Spec_Laptop[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Spec_Laptop[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'battery';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Laptop_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_spec_laptop_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_spec_laptop_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Spec_Laptop 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Shop_Spec_Laptop_Storage extends Sample_Shop_Spec_Laptop_Base_Storage {
  

}
<?php

class Sample_Shop_Spec_Laptop_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_spec_laptop'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'weight' => NULL,
            'battery' => '',
        ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php 

class Sample_Shop_Spec_Laptop_MapperMixable extends Sample_Shop_Spec_Laptop_Base_ExtraTable {
    
}

<?php 

class Sample_Shop_Spec_Laptop_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = true;
    
    protected $modelMixable = 'Sample_Shop_Spec_Laptop';
    
    protected $implMapper = 'Sample_Shop_Spec_Laptop_ImplMapper';
    
    protected $modelMixableId = 'Sample_Shop_Spec_Laptop';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_shopSpec' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Laptop_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Spec_Mapper',
                'srcVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'productId',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'shopSpec' => [
                'relationId' => '_shopSpec',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopSpec',
                'plural' => 'shopSpecs',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopSpecsFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfShopSpecs',
                'createDestObjectMethod' => 'createShopSpec',
                'getDestObjectMethod' => 'getShopSpec',
                'setDestObjectMethod' => 'setShopSpec',
                'clearDestObjectMethod' => 'clearShopSpec',
            ],
        ];
    }
    
    
    /**
     * Loads one or more shopSpecs of given one or more shopSpecLaptop 
     * @param Sample_Shop_Spec_Laptop|array $shopSpecLaptop     
     */
    function loadShopSpecsFor($shopSpecLaptop) {
        $rel = $this->getRelation('_shopSpec');
        return $rel->loadDest($shopSpecLaptop); 
    }

}

<?php

class Sample_Shop_Spec_Monitor extends Sample_Shop_Spec_Monitor_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Spec_Monitor_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    var $_hasDefaults = true;

    var $_shopClassifier = false;

    var $productId = NULL;

    var $diagonal = 0;

    var $hRes = 0;

    var $vRes = 0;

    var $matrixTypeId = NULL;

    protected $preserveMetaCache = true;
    
    /**
     * @var Sample_Shop_Spec_Monitor_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Sample_Shop_Spec_Monitor';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [ 0 => 'shopClassifier', ]);
    }
    
 
    protected function listOwnAssociations() {
        return [ 'shopClassifier' => 'Sample_Shop_Classifier', ];
    }

    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopClassifier' => [
                'className' => 'Sample_Shop_Classifier',
                'mapperClass' => 'Sample_Shop_Classifier_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_spec_monitor_shop_classifier'),
                'relationId' => '_shopClassifier',
                'referenceVarName' => '_shopClassifier',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Spec_Mapper',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_monitor_product_id'),
            ],
            'diagonal' => [
                'dataType' => 'float',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_monitor_diagonal'),
            ],
            'hRes' => [
                'dataType' => 'int',
                'maxLength' => '5',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_monitor_h_res'),
            ],
            'vRes' => [
                'dataType' => 'int',
                'maxLength' => '5',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_shop_spec_monitor_v_res'),
            ],
            'matrixTypeId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',

                'dummyCaption' => '',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Classifier_Mapper',
                ],
                'objectPropertyName' => 'shopClassifier',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_shop_spec_monitor_matrix_type_id'),
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Sample_Shop_Classifier 
     */
    function getShopClassifier() {
        if ($this->_shopClassifier === false) {
            $this->mapper->loadShopClassifierFor($this->mixin);
            
        }
        return $this->_shopClassifier;
    }
    
    /**
     * @param Sample_Shop_Classifier $shopClassifier 
     */
    function setShopClassifier($shopClassifier) {
        if ($shopClassifier === false) $this->_shopClassifier = false;
        elseif ($shopClassifier === null) $this->_shopClassifier = null;
        else {
            if (!is_a($shopClassifier, 'Sample_Shop_Classifier')) trigger_error('$shopClassifier must be an instance of Sample_Shop_Classifier', E_USER_ERROR);
            if (!is_object($this->_shopClassifier) && !Ac_Util::sameObject($this->_shopClassifier, $shopClassifier)) { 
                $this->_shopClassifier = $shopClassifier;
            }
        }
    }
    
    function clearShopClassifier() {
        $this->shopClassifier = null;
    }

    /**
     * @return Sample_Shop_Classifier  
     */
    function createShopClassifier($values = array()) {
        $m = $this->getMapper('Sample_Shop_Classifier_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopClassifier($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Spec_Monitor_ImplMapper extends Sample_Shop_Spec_Monitor_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Spec_Monitor_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Spec_Monitor[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Spec_Monitor_Base_ImplMapper extends Ac_Model_Mapper {

    protected $identifierField = NULL;

    var $pk = 'productId';

    var $recordClass = 'Ac_Model_Record';

    var $tableName = '#__shop_spec_monitor';

    var $id = 'Sample_Shop_Spec_Monitor_ImplMapper';

    var $storage = 'Sample_Shop_Spec_Monitor_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'diagonal', 2 => 'hRes', 3 => 'vRes', 4 => 'matrixTypeId', ];

    var $nullableColumns = [ 0 => 'matrixTypeId', ];

    var $defaults = [
            'productId' => NULL,
            'diagonal' => NULL,
            'hRes' => NULL,
            'vRes' => NULL,
            'matrixTypeId' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'class' => 'Ac_Model_Typer_ExtraTable',
                'tableName' => '#__shop_spec_monitor',
                'uniformTypeId' => 'Sample_Shop_Spec_Mapper',
            ],
        ]);
    }
    
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopClassifier' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Spec_Monitor 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Spec_Monitor_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Spec_Monitor 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Spec_Monitor 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Spec_Monitor 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Spec_Monitor 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Spec_Monitor 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Spec_Monitor[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Spec_Monitor[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Spec_Monitor     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Spec_Monitor     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Spec_Monitor[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Spec_Monitor[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifier' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Monitor_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Classifier_Mapper',
                'srcVarName' => '_shopClassifier',
                'destVarName' => '_monitorShopSpecs',
                'destCountVarName' => '_monitorShopSpecsCount',
                'destLoadedVarName' => '_monitorShopSpecsLoaded',
                'fieldLinks' => [
                    'matrixTypeId' => 'id',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_spec_monitor_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_spec_monitor_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Spec_Monitor 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Shop_Spec_Monitor_Storage extends Sample_Shop_Spec_Monitor_Base_Storage {
  

}
<?php

class Sample_Shop_Spec_Monitor_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_spec_monitor'; 

    var $recordClass = 'Ac_Model_Record'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'diagonal' => NULL,
            'hRes' => NULL,
            'vRes' => NULL,
            'matrixTypeId' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'matrixTypeId', ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php 

class Sample_Shop_Spec_Monitor_MapperMixable extends Sample_Shop_Spec_Monitor_Base_ExtraTable {
    
}

<?php 

class Sample_Shop_Spec_Monitor_Base_ExtraTable extends Ac_Model_Mapper_Mixable_ExtraTable {

    protected $extraIsReferenced = false;
    
    protected $modelMixable = 'Sample_Shop_Spec_Monitor';
    
    protected $implMapper = 'Sample_Shop_Spec_Monitor_ImplMapper';
    
    protected $modelMixableId = 'Sample_Shop_Spec_Monitor';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return [
            '_shopClassifier' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Monitor_ImplMapper',
                'destMapperClass' => 'Sample_Shop_Classifier_Mapper',
                'srcVarName' => '_shopClassifier',
                'destVarName' => '_monitorShopSpecs',
                'destCountVarName' => '_monitorShopSpecsCount',
                'destLoadedVarName' => '_monitorShopSpecsLoaded',
                'fieldLinks' => [
                    'matrixTypeId' => 'id',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ];
        
    }
    
    protected function doGetAssociationPrototypes() {
        return [
            'shopClassifier' => [
                'relationId' => '_shopClassifier',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopClassifier',
                'plural' => 'shopClassifier',
                'canLoadSrcObjects' => false,
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopClassifierFor',
                'loadSrcObjectsMapperMethod' => NULL,
                'getSrcObjectsMapperMethod' => 'getOfShopClassifier',
                'createDestObjectMethod' => 'createShopClassifier',
                'getDestObjectMethod' => 'getShopClassifier',
                'setDestObjectMethod' => 'setShopClassifier',
                'clearDestObjectMethod' => 'clearShopClassifier',
            ],
        ];
    }
    
    
    /**
     * Loads several shopClassifier of given one or more shopSpecMonitor 
     * @param Sample_Shop_Spec_Monitor|array $shopSpecMonitor     
     */
    function loadShopClassifierFor($shopSpecMonitor) {
        $rel = $this->getRelation('_shopClassifier');
        return $rel->loadDest($shopSpecMonitor); 
    }

}

<?php

class Sample_Shop_Spec extends Sample_Shop_Spec_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Shop_Spec_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_shopProduct = false;

    var $productId = NULL;

    var $detailsUrl = '';

    var $specsType = '';
    
    var $_mapperClass = 'Sample_Shop_Spec_Mapper';
    
    /**
     * @var Sample_Shop_Spec_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Spec_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'shopProduct', ]));
    }
    
    
 
    protected function listOwnAssociations() {
        return [ 'shopProduct' => 'Sample_Shop_Product', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopProduct' => [
                'className' => 'Sample_Shop_Product',
                'mapperClass' => 'Sample_Shop_Product_Mapper',

                'caption' => new Ac_Lang_String('sample_shop_spec_shop_product'),
                'relationId' => '_shopProduct',
                'referenceVarName' => '_shopProduct',
            ],
            'productId' => [
                'dataType' => 'int',
                'controlType' => 'selectList',
                'maxLength' => '10',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Shop_Product_Mapper',
                ],
                'objectPropertyName' => 'shopProduct',

                'caption' => new Ac_Lang_String('sample_shop_spec_product_id'),
            ],
            'detailsUrl' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_shop_spec_details_url'),
            ],
            'specsType' => [
                'maxLength' => '40',

                'caption' => new Ac_Lang_String('sample_shop_spec_specs_type'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
        
    
    /**
     * @return Sample_Shop_Product 
     */
    function getShopProduct() {
        if ($this->_shopProduct === false) {
            $this->mapper->loadShopProductsFor($this);
            
        }
        return $this->_shopProduct;
    }
    
    /**
     * @param Sample_Shop_Product $shopProduct 
     */
    function setShopProduct($shopProduct) {
        if ($shopProduct === false) $this->_shopProduct = false;
        elseif ($shopProduct === null) $this->_shopProduct = null;
        else {
            if (!is_a($shopProduct, 'Sample_Shop_Product')) trigger_error('$shopProduct must be an instance of Sample_Shop_Product', E_USER_ERROR);
            if (!is_object($this->_shopProduct) && !Ac_Util::sameObject($this->_shopProduct, $shopProduct)) { 
                $this->_shopProduct = $shopProduct;
            }
        }
    }
    
    function clearShopProduct() {
        $this->shopProduct = null;
    }

    /**
     * @return Sample_Shop_Product  
     */
    function createShopProduct($values = array()) {
        $m = $this->getMapper('Sample_Shop_Product_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->setShopProduct($res);
        return $res;
    }

    
  
    
}

<?php

class Sample_Shop_Spec_Mapper extends Sample_Shop_Spec_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Shop_Spec_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Shop_Spec[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Shop_Spec_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'productId';

    var $recordClass = 'Sample_Shop_Spec';

    var $tableName = '#__shop_specs';

    var $id = 'Sample_Shop_Spec_Mapper';

    var $storage = 'Sample_Shop_Spec_Storage';

    var $columnNames = [ 0 => 'productId', 1 => 'detailsUrl', 2 => 'specsType', ];

    var $defaults = [
            'productId' => NULL,
            'detailsUrl' => '',
            'specsType' => '',
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_shopProduct' => false,
        ]);
    }
    
    /**
     * @return Sample_Shop_Spec 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Shop_Spec_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Shop_Spec 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Shop_Spec 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Shop_Spec 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Shop_Spec 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Shop_Spec 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Shop_Spec[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Shop_Spec[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Shop_Spec     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Shop_Spec     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Shop_Spec[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Shop_Spec[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'detailsUrl';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopProduct' => [
                'srcMapperClass' => 'Sample_Shop_Spec_Mapper',
                'destMapperClass' => 'Sample_Shop_Product_Mapper',
                'srcVarName' => '_shopProduct',
                'destVarName' => '_shopSpec',
                'fieldLinks' => [
                    'productId' => 'id',
                ],
                'srcIsUnique' => true,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'shopProduct' => [
                'relationId' => '_shopProduct',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'shopProduct',
                'plural' => 'shopProducts',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadShopProductsFor',
                'loadSrcObjectsMapperMethod' => 'loadForShopProducts',
                'getSrcObjectsMapperMethod' => 'getOfShopProducts',
                'createDestObjectMethod' => 'createShopProduct',
                'getDestObjectMethod' => 'getShopProduct',
                'setDestObjectMethod' => 'setShopProduct',
                'clearDestObjectMethod' => 'clearShopProduct',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_shop_specs_single'),

                'pluralCaption' => new Ac_Lang_String('sample_shop_specs_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'productId',
            ],
        ];
    }

    /**
     * @return Sample_Shop_Spec 
     */
    function loadByProductId ($productId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('productId').' = '.$this->getDb()->q($productId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more shopSpecs of given one or more shopProducts 
     * @param Sample_Shop_Spec|array $shopProducts     
     * @return Sample_Shop_Spec|array of Sample_Shop_Spec objects  
     */
    function getOfShopProducts($shopProducts) {
        $rel = $this->getRelation('_shopProduct');
        $res = $rel->getSrc($shopProducts); 
        return $res;
    }
    
    /**
     * Loads one or more shopSpecs of given one or more shopProducts 
     * @param Sample_Shop_Product|array $shopProducts of Sample_Shop_Spec objects      
     */
    function loadForShopProducts($shopProducts) {
        $rel = $this->getRelation('_shopProduct');
        return $rel->loadSrc($shopProducts); 
    }
    
    /**
     * Loads one or more shopProducts of given one or more shopSpecs 
     * @param Sample_Shop_Spec|array $shopSpecs     
     */
    function loadShopProductsFor($shopSpecs) {
        $rel = $this->getRelation('_shopProduct');
        return $rel->loadDest($shopSpecs); 
    }

    
}

<?php

class Sample_Shop_Spec_Storage extends Sample_Shop_Spec_Base_Storage {
  

}
<?php

class Sample_Shop_Spec_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__shop_specs'; 

    var $recordClass = 'Sample_Shop_Spec'; 

    var $primaryKey = 'productId'; 

    var $defaults = [
            'productId' => NULL,
            'detailsUrl' => '',
            'specsType' => '',
        ]; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'productId',
    ],
]; 
 
    
}

<?php

class Sample_Tag extends Sample_Tag_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Tag_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $_people = false;

    var $_peopleCount = false;

    var $_peopleLoaded = false;

    var $_personIds = false;

    var $_perks = false;

    var $_perksCount = false;

    var $_perksLoaded = false;

    var $_perkIds = false;

    var $tagId = NULL;

    var $title = '';

    var $titleM = NULL;

    var $titleF = NULL;
    
    var $_mapperClass = 'Sample_Tag_Mapper';
    
    /**
     * @var Sample_Tag_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tag_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 0 => 'people', 1 => 'personIds', 2 => 'perks', 3 => 'perkIds', ]));
    }
    
 
    protected function listOwnLists() {
        
        return [ 'people' => 'people', 'perks' => 'perks', ];
    }

    
 
    protected function listOwnAssociations() {
        return [ 'people' => 'Sample_Person', 'perks' => 'Sample_Perk', ];
    }

    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'people' => [
                'className' => 'Sample_Person',
                'mapperClass' => 'Sample_Person_Mapper',

                'caption' => new Ac_Lang_String('sample_tag_people'),
                'relationId' => '_people',
                'countVarName' => '_peopleCount',
                'nnIdsVarName' => '_personIds',
                'referenceVarName' => '_people',
            ],
            'personIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Person_Mapper',
                ],
                'showInTable' => false,
            ],
            'perks' => [
                'className' => 'Sample_Perk',
                'mapperClass' => 'Sample_Perk_Mapper',

                'caption' => new Ac_Lang_String('sample_tag_perks'),
                'relationId' => '_perks',
                'countVarName' => '_perksCount',
                'nnIdsVarName' => '_perkIds',
                'referenceVarName' => '_perks',
            ],
            'perkIds' => [
                'dataType' => 'int',
                'arrayValue' => true,
                'controlType' => 'selectList',
                'values' => [
                    'class' => 'Ac_Model_Values_Mapper',
                    'mapperClass' => 'Sample_Perk_Mapper',
                ],
                'showInTable' => false,
            ],
            'tagId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tag_tag_id'),
            ],
            'title' => [
                'maxLength' => '45',

                'caption' => new Ac_Lang_String('sample_tag_title'),
            ],
            'titleM' => [
                'maxLength' => '45',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tag_title_m'),
            ],
            'titleF' => [
                'maxLength' => '45',
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tag_title_f'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }

    function countPeople() {
        if (is_array($this->_people)) return count($this->_people);
        if ($this->_peopleCount === false) {
            $this->mapper->loadAssocCountFor($this, '_people');
        }
        return $this->_peopleCount;
        
    }

    function listPeople() {
        if (!$this->_peopleLoaded) {
            $this->mapper->loadPeopleFor($this);
        }
        return array_keys($this->_people);
    }
    
    /**
     * @return bool
     */
    function isPeopleLoaded() {
        return $this->_peopleLoaded;
    }
    
    /**
     * @return Sample_Person 
     */
    function getPerson($id) {
        if (!$this->_peopleLoaded) {
            $this->mapper->loadPeopleFor($this);
        }
        
        if (!isset($this->_people[$id])) trigger_error ('No such People: \''.$id.'\'', E_USER_ERROR);
        return $this->_people[$id];
    }
    
    /**
     * @return Sample_Person 
     */
    function getPeopleItem($id) {
        return $this->getPerson($id);
    }
    
    /**
     * @return Sample_Person[] 
     */
    function getAllPeople() {
        $res = [];
        foreach ($this->listPeople() as $id)
            $res[] = $this->getPerson($id);
        return $res;
    }
    
    /**
     * @param Sample_Person $person 
     */
    function addPerson($person) {
        if (!is_a($person, 'Sample_Person')) trigger_error('$person must be an instance of Sample_Person', E_USER_ERROR);
        $this->listPeople();
        $this->_people[] = $person;
        
        if (is_array($person->_tags) && !Ac_Util::sameInArray($this, $person->_tags)) {
                $person->_tags[] = $this;
        }
        
    }

    /**
     * @return Sample_Person  
     */
    function createPerson($values = array()) {
        $m = $this->getMapper('Sample_Person_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPerson($res);
        return $res;
    }
    

    function getPersonIds() {
        if ($this->_personIds === false) {
            $this->mapper->loadPersonIdsFor($this);
        }
        return $this->_personIds;
    }
    
    function setPersonIds($personIds) {
        if (!is_array($personIds)) trigger_error('$personIds must be an array', E_USER_ERROR);
        $this->_personIds = $personIds;
        $this->_peopleLoaded = false;
        $this->_people = false; 
    }
    
    function clearPeople() {
        $this->_people = array();
        $this->_peopleLoaded = true;
        $this->_personIds = false;
    }               

    function countPerks() {
        if (is_array($this->_perks)) return count($this->_perks);
        if ($this->_perksCount === false) {
            $this->mapper->loadAssocCountFor($this, '_perks');
        }
        return $this->_perksCount;
        
    }

    function listPerks() {
        if (!$this->_perksLoaded) {
            $this->mapper->loadPerksFor($this);
        }
        return array_keys($this->_perks);
    }
    
    /**
     * @return bool
     */
    function isPerksLoaded() {
        return $this->_perksLoaded;
    }
    
    /**
     * @return Sample_Perk 
     */
    function getPerk($id) {
        if (!$this->_perksLoaded) {
            $this->mapper->loadPerksFor($this);
        }
        
        if (!isset($this->_perks[$id])) trigger_error ('No such Perk: \''.$id.'\'', E_USER_ERROR);
        return $this->_perks[$id];
    }
    
    /**
     * @return Sample_Perk 
     */
    function getPerksItem($id) {
        return $this->getPerk($id);
    }
    
    /**
     * @return Sample_Perk[] 
     */
    function getAllPerks() {
        $res = [];
        foreach ($this->listPerks() as $id)
            $res[] = $this->getPerk($id);
        return $res;
    }
    
    /**
     * @param Sample_Perk $perk 
     */
    function addPerk($perk) {
        if (!is_a($perk, 'Sample_Perk')) trigger_error('$perk must be an instance of Sample_Perk', E_USER_ERROR);
        $this->listPerks();
        $this->_perks[] = $perk;
        
        if (is_array($perk->_tags) && !Ac_Util::sameInArray($this, $perk->_tags)) {
                $perk->_tags[] = $this;
        }
        
    }

    /**
     * @return Sample_Perk  
     */
    function createPerk($values = array()) {
        $m = $this->getMapper('Sample_Perk_Mapper');
        $res = $m->createRecord();
        if ($values) $res->bind($values);
        $this->addPerk($res);
        return $res;
    }
    

    function getPerkIds() {
        if ($this->_perkIds === false) {
            $this->mapper->loadPerkIdsFor($this);
        }
        return $this->_perkIds;
    }
    
    function setPerkIds($perkIds) {
        if (!is_array($perkIds)) trigger_error('$perkIds must be an array', E_USER_ERROR);
        $this->_perkIds = $perkIds;
        $this->_perksLoaded = false;
        $this->_perks = false; 
    }
    
    function clearPerks() {
        $this->_perks = array();
        $this->_perksLoaded = true;
        $this->_perkIds = false;
    }               
  
    
}

<?php

class Sample_Tag_Mapper extends Sample_Tag_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Tag_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Tag[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Tag_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'tagId';

    var $recordClass = 'Sample_Tag';

    var $tableName = '#__tags';

    var $id = 'Sample_Tag_Mapper';

    var $storage = 'Sample_Tag_Storage';

    var $columnNames = [ 0 => 'tagId', 1 => 'title', 2 => 'titleM', 3 => 'titleF', ];

    var $nullableColumns = [ 0 => 'titleM', 1 => 'titleF', ];

    var $defaults = [
            'tagId' => NULL,
            'title' => NULL,
            'titleM' => NULL,
            'titleF' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'tagId';
    protected $askRelationsForDefaults = false;
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_people' => false,
            '_peopleCount' => false,
            '_peopleLoaded' => false,
            '_personIds' => false,
            '_perks' => false,
            '_perksCount' => false,
            '_perksLoaded' => false,
            '_perkIds' => false,
        ]);
    }
    
    /**
     * @return Sample_Tag 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Tag_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tag 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Tag 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Tag 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Tag 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Tag 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Tag[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Tag[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Tag     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Tag     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Tag[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Tag[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_people' => [
                'srcMapperClass' => 'Sample_Tag_Mapper',
                'destMapperClass' => 'Sample_Person_Mapper',
                'srcVarName' => '_people',
                'srcNNIdsVarName' => '_personIds',
                'srcCountVarName' => '_peopleCount',
                'srcLoadedVarName' => '_peopleLoaded',
                'destVarName' => '_tags',
                'destCountVarName' => '_tagsCount',
                'destLoadedVarName' => '_tagsLoaded',
                'destNNIdsVarName' => '_tagIds',
                'fieldLinks' => [
                    'tagId' => 'idOfTag',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPersonIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadTagIdsFor',
                ],
                'midTableName' => '#__people_tags',
                'fieldLinks2' => [
                    'idOfPerson' => 'personId',
                ],
            ],
            '_perks' => [
                'srcMapperClass' => 'Sample_Tag_Mapper',
                'destMapperClass' => 'Sample_Perk_Mapper',
                'srcVarName' => '_perks',
                'srcNNIdsVarName' => '_perkIds',
                'srcCountVarName' => '_perksCount',
                'srcLoadedVarName' => '_perksLoaded',
                'destVarName' => '_tags',
                'destCountVarName' => '_tagsCount',
                'destLoadedVarName' => '_tagsLoaded',
                'destNNIdsVarName' => '_tagIds',
                'fieldLinks' => [
                    'tagId' => 'idOfTag',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => false,
                'srcLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadPerkIdsFor',
                ],
                'destLoadNNIdsMethod' => [
                    0 => true,
                    1 => 'loadTagIdsFor',
                ],
                'midTableName' => '#__tag_perks',
                'fieldLinks2' => [
                    'idOfPerk' => 'perkId',
                ],
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'people' => [
                'relationId' => '_people',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'person',
                'plural' => 'people',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForPeople',
                'getSrcObjectsMapperMethod' => 'getOfPeople',
                'createDestObjectMethod' => 'createPerson',
                'getAllDestObjectsMethod' => 'getAllPeople',
                'listDestObjectsMethod' => 'listPeople',
                'countDestObjectsMethod' => 'countPeople',
                'getDestObjectMethod' => 'getPerson',
                'addDestObjectMethod' => 'addPerson',
                'isDestLoadedMethod' => 'isPeopleLoaded',
                'loadDestIdsMapperMethod' => 'loadPersonIdsFor',
                'getDestIdsMethod' => 'getPersonIds',
                'setDestIdsMethod' => 'setPersonIds',
                'clearDestObjectsMethod' => 'clearPeople',
            ],
            'perks' => [
                'relationId' => '_perks',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'perk',
                'plural' => 'perks',
                'class' => 'Ac_Model_Association_ManyToMany',
                'loadDestObjectsMapperMethod' => 'loadPerksFor',
                'loadSrcObjectsMapperMethod' => 'loadForPerks',
                'getSrcObjectsMapperMethod' => 'getOfPerks',
                'createDestObjectMethod' => 'createPerk',
                'getAllDestObjectsMethod' => 'getAllPerks',
                'listDestObjectsMethod' => 'listPerks',
                'countDestObjectsMethod' => 'countPerks',
                'getDestObjectMethod' => 'getPerk',
                'addDestObjectMethod' => 'addPerk',
                'isDestLoadedMethod' => 'isPerksLoaded',
                'loadDestIdsMapperMethod' => 'loadPerkIdsFor',
                'getDestIdsMethod' => 'getPerkIds',
                'setDestIdsMethod' => 'setPerkIds',
                'clearDestObjectsMethod' => 'clearPerks',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_tags_single'),

                'pluralCaption' => new Ac_Lang_String('sample_tags_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'tagId',
            ],
            'Index_2' => [
                0 => 'title',
            ],
        ];
    }

    /**
     * @return Sample_Tag 
     */
    function loadByTagId ($tagId) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('tagId').' = '.$this->getDb()->q($tagId).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }

    /**
     * @return Sample_Tag 
     */
    function loadByTitle ($title) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('title').' = '.$this->getDb()->q($title).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    /**
     * Returns (but not loads!) one or more tags of given one or more people 
     * @param Sample_Tag|array $people     
     * @return Sample_Tag|array of Sample_Tag objects  
     */
    function getOfPeople($people) {
        $rel = $this->getRelation('_people');
        $res = $rel->getSrc($people); 
        return $res;
    }
    
    /**
     * Loads one or more tags of given one or more people 
     * @param Sample_Person|array $people of Sample_Tag objects      
     */
    function loadForPeople($people) {
        $rel = $this->getRelation('_people');
        return $rel->loadSrc($people); 
    }
    
    /**
     * Loads one or more people of given one or more tags 
     * @param Sample_Tag|array $tags     
     */
    function loadPeopleFor($tags) {
        $rel = $this->getRelation('_people');
        return $rel->loadDest($tags); 
    }


    /**
     * @param Sample_Tag|array $tags 
     */
     function loadPersonIdsFor($tags) {
        $rel = $this->getRelation('_people');
        return $rel->loadDestNNIds($tags); 
    }
    
    /**
     * Returns (but not loads!) one or more tags of given one or more perks 
     * @param Sample_Tag|array $perks     
     * @return Sample_Tag|array of Sample_Tag objects  
     */
    function getOfPerks($perks) {
        $rel = $this->getRelation('_perks');
        $res = $rel->getSrc($perks); 
        return $res;
    }
    
    /**
     * Loads one or more tags of given one or more perks 
     * @param Sample_Perk|array $perks of Sample_Tag objects      
     */
    function loadForPerks($perks) {
        $rel = $this->getRelation('_perks');
        return $rel->loadSrc($perks); 
    }
    
    /**
     * Loads one or more perks of given one or more tags 
     * @param Sample_Tag|array $tags     
     */
    function loadPerksFor($tags) {
        $rel = $this->getRelation('_perks');
        return $rel->loadDest($tags); 
    }


    /**
     * @param Sample_Tag|array $tags 
     */
     function loadPerkIdsFor($tags) {
        $rel = $this->getRelation('_perks');
        return $rel->loadDestNNIds($tags); 
    }
    
    
}

<?php

class Sample_Tag_Storage extends Sample_Tag_Base_Storage {
  

}
<?php

class Sample_Tag_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__tags'; 

    var $recordClass = 'Sample_Tag'; 

    var $primaryKey = 'tagId'; 

    var $defaults = [
            'tagId' => NULL,
            'title' => NULL,
            'titleM' => NULL,
            'titleF' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'titleM', 1 => 'titleF', ]; 

    var $autoincFieldName = 'tagId'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'tagId',
    ],
    'Index_2' => [
        0 => 'title',
    ],
]; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'personIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfTag',
                        'midDestKey' => 'idOfPerson',
                        'tableKey' => 'personId',
                        'midTableAlias' => 'mid__people',
                    ],
                    'perkIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfTag',
                        'midDestKey' => 'idOfPerk',
                        'tableKey' => 'perkId',
                        'midTableAlias' => 'mid__perks',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Sample_Tree_Adjacent extends Sample_Tree_Adjacent_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Tree_Adjacent_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $id = NULL;

    var $parentId = NULL;

    var $ordering = 0;

    var $title = '';

    var $tag = NULL;
    
    var $_mapperClass = 'Sample_Tree_Adjacent_Mapper';
    
    /**
     * @var Sample_Tree_Adjacent_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tree_Adjacent_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_adjacent_id'),
            ],
            'parentId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tree_adjacent_parent_id'),
            ],
            'ordering' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_adjacent_ordering'),
            ],
            'title' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_tree_adjacent_title'),
            ],
            'tag' => [
                'dataType' => 'int',
                'maxLength' => '11',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tree_adjacent_tag'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
  
    
}

<?php

class Sample_Tree_Adjacent_Mapper extends Sample_Tree_Adjacent_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Tree_Adjacent_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Tree_Adjacent[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Tree_Adjacent_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Tree_Adjacent';

    var $tableName = '#__tree_adjacent';

    var $id = 'Sample_Tree_Adjacent_Mapper';

    var $storage = 'Sample_Tree_Adjacent_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'parentId', 2 => 'ordering', 3 => 'title', 4 => 'tag', ];

    var $nullableColumns = [ 0 => 'parentId', 1 => 'tag', ];

    var $defaults = [
            'id' => NULL,
            'parentId' => NULL,
            'ordering' => 0,
            'title' => '',
            'tag' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
 
    /**
     * @return Sample_Tree_Adjacent 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Tree_Adjacent_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tree_Adjacent 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Tree_Adjacent 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Tree_Adjacent 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Tree_Adjacent 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Tree_Adjacent 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Tree_Adjacent[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Tree_Adjacent[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Tree_Adjacent     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Tree_Adjacent     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Tree_Adjacent[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Tree_Adjacent[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    function getDefaultSort() {
        return 'ordering';
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_tree_adjacent_single'),

                'pluralCaption' => new Ac_Lang_String('sample_tree_adjacent_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
        ];
    }

    /**
     * @return Sample_Tree_Adjacent 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Tree_Adjacent_Storage extends Sample_Tree_Adjacent_Base_Storage {
  

}
<?php

class Sample_Tree_Adjacent_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__tree_adjacent'; 

    var $recordClass = 'Sample_Tree_Adjacent'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'parentId' => NULL,
            'ordering' => 0,
            'title' => '',
            'tag' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'parentId', 1 => 'tag', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
]; 
 
    
}

<?php

class Sample_Tree_Combo extends Sample_Tree_Combo_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Tree_Combo_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $id = NULL;

    var $leftCol = 0;

    var $rightCol = 1;

    var $parentId = NULL;

    var $ordering = 0;

    var $title = '';

    var $tag = NULL;

    var $ignore = 0;

    var $depth = 0;
    
    var $_mapperClass = 'Sample_Tree_Combo_Mapper';
    
    /**
     * @var Sample_Tree_Combo_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tree_Combo_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_combo_id'),
            ],
            'leftCol' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_combo_left_col'),
            ],
            'rightCol' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_combo_right_col'),
            ],
            'parentId' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tree_combo_parent_id'),
            ],
            'ordering' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_combo_ordering'),
            ],
            'title' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_tree_combo_title'),
            ],
            'tag' => [
                'dataType' => 'int',
                'maxLength' => '11',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tree_combo_tag'),
            ],
            'ignore' => [
                'dataType' => 'bool',
                'controlType' => 'selectList',
                'maxLength' => '1',
                'valueList' => [
                    0 => 'No',
                    1 => 'Yes',
                ],

                'caption' => new Ac_Lang_String('sample_tree_combo_ignore'),
            ],
            'depth' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_combo_depth'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
  
    
}

<?php

class Sample_Tree_Combo_Mapper extends Sample_Tree_Combo_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Tree_Combo_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Tree_Combo[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Tree_Combo_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Tree_Combo';

    var $tableName = '#__tree_combos';

    var $id = 'Sample_Tree_Combo_Mapper';

    var $storage = 'Sample_Tree_Combo_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'leftCol', 2 => 'rightCol', 3 => 'parentId', 4 => 'ordering', 5 => 'title', 6 => 'tag', 7 => 'ignore', 8 => 'depth', ];

    var $nullableColumns = [ 0 => 'parentId', 1 => 'tag', ];

    var $defaults = [
            'id' => NULL,
            'leftCol' => 0,
            'rightCol' => 1,
            'parentId' => NULL,
            'ordering' => 0,
            'title' => '',
            'tag' => NULL,
            'ignore' => 0,
            'depth' => 0,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
 
    /**
     * @return Sample_Tree_Combo 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Tree_Combo_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tree_Combo 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Tree_Combo 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Tree_Combo 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Tree_Combo 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Tree_Combo 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Tree_Combo[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Tree_Combo[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Tree_Combo     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Tree_Combo     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Tree_Combo[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Tree_Combo[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    function getDefaultSort() {
        return 'ordering';
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_tree_combos_single'),

                'pluralCaption' => new Ac_Lang_String('sample_tree_combos_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
        ];
    }

    /**
     * @return Sample_Tree_Combo 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Tree_Combo_Storage extends Sample_Tree_Combo_Base_Storage {
  

}
<?php

class Sample_Tree_Combo_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__tree_combos'; 

    var $recordClass = 'Sample_Tree_Combo'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'leftCol' => 0,
            'rightCol' => 1,
            'parentId' => NULL,
            'ordering' => 0,
            'title' => '',
            'tag' => NULL,
            'ignore' => 0,
            'depth' => 0,
        ]; 

    var $nullableColumns = [ 0 => 'parentId', 1 => 'tag', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
]; 
 
    
}

<?php

class Sample_Tree_Record extends Sample_Tree_Record_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Sample_Tree_Record_Base_Object extends Ac_Model_Object {


    var $_hasDefaults = true;

    var $id = NULL;

    var $title = '';

    var $tag = NULL;
    
    var $_mapperClass = 'Sample_Tree_Record_Mapper';
    
    /**
     * @var Sample_Tree_Record_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tree_Record_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'id' => [
                'dataType' => 'int',
                'maxLength' => '10',
                'attribs' => [
                    'size' => '6',
                ],

                'caption' => new Ac_Lang_String('sample_tree_record_id'),
            ],
            'title' => [
                'maxLength' => '255',

                'caption' => new Ac_Lang_String('sample_tree_record_title'),
            ],
            'tag' => [
                'dataType' => 'int',
                'maxLength' => '11',
                'attribs' => [
                    'size' => '6',
                ],
                'isNullable' => true,

                'caption' => new Ac_Lang_String('sample_tree_record_tag'),
            ],
        ];
    
        return $pi;
                
    }
    

    function hasUniformPropertiesInfo() { return true; }
  
    
}

<?php

class Sample_Tree_Record_Mapper extends Sample_Tree_Record_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Sample_Tree_Record_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Sample_Tree_Record[] loadFromRows(array $rows, $keysToList = false)
 */
class Sample_Tree_Record_Base_Mapper extends Ac_Model_Mapper {

    var $pk = 'id';

    var $recordClass = 'Sample_Tree_Record';

    var $tableName = '#__tree_records';

    var $id = 'Sample_Tree_Record_Mapper';

    var $storage = 'Sample_Tree_Record_Storage';

    var $columnNames = [ 0 => 'id', 1 => 'title', 2 => 'tag', ];

    var $nullableColumns = [ 0 => 'tag', ];

    var $defaults = [
            'id' => NULL,
            'title' => '',
            'tag' => NULL,
        ];
    
    /**
     * @var Sample 
     */
     protected $application = false;
     
   
    protected $autoincFieldName = 'id';
    protected $askRelationsForDefaults = false;
 
 
    /**
     * @return Sample_Tree_Record 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Sample_Tree_Record_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Sample_Tree_Record 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Sample_Tree_Record 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Sample_Tree_Record 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Sample_Tree_Record 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Sample_Tree_Record 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Sample_Tree_Record[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Sample_Tree_Record[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Sample_Tree_Record     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Sample_Tree_Record     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Sample_Tree_Record[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Sample_Tree_Record[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [

                'singleCaption' => new Ac_Lang_String('sample_tree_records_single'),

                'pluralCaption' => new Ac_Lang_String('sample_tree_records_plural'),
            ],
            parent::doGetInfoParams()
        );
        
    }
    
    
    protected function doGetUniqueIndexData() {
        return [
            'PRIMARY' => [
                0 => 'id',
            ],
        ];
    }

    /**
     * @return Sample_Tree_Record 
     */
    function loadById ($id) {
        $recs = $this->loadRecordsByCriteria(''.$this->getDb()->n('id').' = '.$this->getDb()->q($id).'');
        if (count($recs)) $res = $recs[0];
            else $res = null;
        return $res;
    }
    
}

<?php

class Sample_Tree_Record_Storage extends Sample_Tree_Record_Base_Storage {
  

}
<?php

class Sample_Tree_Record_Base_Storage extends Ac_Model_Storage_MonoTable {

    var $tableName = '#__tree_records'; 

    var $recordClass = 'Sample_Tree_Record'; 

    var $primaryKey = 'id'; 

    var $defaults = [
            'id' => NULL,
            'title' => '',
            'tag' => NULL,
        ]; 

    var $nullableColumns = [ 0 => 'tag', ]; 

    var $autoincFieldName = 'id'; 

    var $uniqueIndices = [
    'PRIMARY' => [
        0 => 'id',
    ],
]; 
 
    
}

<?php 

class Child extends Child_DomainBase {
    
    function getAppClassFile() {
        return __FILE__;
    }

    /**
     * @deperecated
     * @return Child 
     */
    static function getInstance($id = null) {
        return Ac_Application::getApplicationInstance('Child', $id);
    }

    /**
     * @return Child 
     */
    static function i($id = null) {
        return Ac_Application::getApplicationInstance('Child', $id);
    }
    
}
<?php 

abstract class Child_DomainBase extends Sample {

    protected function doOnInitialize() {
        parent::doOnInitialize();
 
        $this->setMapperAliases([
    'Sample_Person_Mapper' => 'Child_Person_Mapper',
    'Sample_Perk_Mapper' => 'Child_Perk_Mapper',
    'Sample_Person_Album_Mapper' => 'Child_Person_Album_Mapper',
    'Sample_Person_Photo_Mapper' => 'Child_Person_Photo_Mapper',
    'Sample_Person_Post_Mapper' => 'Child_Person_Post_Mapper',
    'Sample_Publish_ImplMapper' => 'Child_Publish_ImplMapper',
    'Sample_Relation_Type_Mapper' => 'Child_Relation_Type_Mapper',
    'Sample_Relation_Mapper' => 'Child_Relation_Mapper',
    'Sample_Religion_Mapper' => 'Child_Religion_Mapper',
    'Sample_Shop_Category_Mapper' => 'Child_Shop_Category_Mapper',
    'Sample_Shop_Classifier_Mapper' => 'Child_Shop_Classifier_Mapper',
    'Sample_Shop_Classifier_Type_Mapper' => 'Child_Shop_Classifier_Type_Mapper',
    'Sample_Shop_Product_Extra_Code_ImplMapper' => 'Child_Shop_Product_Extra_Code_ImplMapper',
    'Sample_Shop_Product_Note_ImplMapper' => 'Child_Shop_Product_Note_ImplMapper',
    'Sample_Shop_Product_Mapper' => 'Child_Shop_Product_Mapper',
    'Sample_Shop_Spec_Computer_ImplMapper' => 'Child_Shop_Spec_Computer_ImplMapper',
    'Sample_Shop_Spec_Food_ImplMapper' => 'Child_Shop_Spec_Food_ImplMapper',
    'Sample_Shop_Spec_Laptop_ImplMapper' => 'Child_Shop_Spec_Laptop_ImplMapper',
    'Sample_Shop_Spec_Monitor_ImplMapper' => 'Child_Shop_Spec_Monitor_ImplMapper',
    'Sample_Shop_Spec_Mapper' => 'Child_Shop_Spec_Mapper',
    'Sample_Tag_Mapper' => 'Child_Tag_Mapper',
    'Sample_Tree_Adjacent_Mapper' => 'Child_Tree_Adjacent_Mapper',
    'Sample_Tree_Combo_Mapper' => 'Child_Tree_Combo_Mapper',
    'Sample_Tree_Record_Mapper' => 'Child_Tree_Record_Mapper',
], true);
    }


    protected function doGetMapperPrototypes() {
        return [
            'Child_Person_Mapper' => [
                'class' => 'Child_Person_Mapper',
            ],
            'Child_Perk_Mapper' => [
                'class' => 'Child_Perk_Mapper',
            ],
            'Child_Person_Album_Mapper' => [
                'class' => 'Child_Person_Album_Mapper',
            ],
            'Child_Person_Photo_Mapper' => [
                'class' => 'Child_Person_Photo_Mapper',
            ],
            'Child_Person_Post_Mapper' => [
                'class' => 'Child_Person_Post_Mapper',
            ],
            'Child_Publish_ImplMapper' => [
                'class' => 'Child_Publish_ImplMapper',
            ],
            'Child_Relation_Type_Mapper' => [
                'class' => 'Child_Relation_Type_Mapper',
            ],
            'Child_Relation_Mapper' => [
                'class' => 'Child_Relation_Mapper',
            ],
            'Child_Religion_Mapper' => [
                'class' => 'Child_Religion_Mapper',
            ],
            'Child_Shop_Category_Mapper' => [
                'class' => 'Child_Shop_Category_Mapper',
            ],
            'Child_Shop_Classifier_Mapper' => [
                'class' => 'Child_Shop_Classifier_Mapper',
            ],
            'Child_Shop_Classifier_Type_Mapper' => [
                'class' => 'Child_Shop_Classifier_Type_Mapper',
            ],
            'Child_Shop_Product_Extra_Code_ImplMapper' => [
                'class' => 'Child_Shop_Product_Extra_Code_ImplMapper',
            ],
            'Child_Shop_Product_Note_ImplMapper' => [
                'class' => 'Child_Shop_Product_Note_ImplMapper',
            ],
            'Child_Shop_Product_Mapper' => [
                'class' => 'Child_Shop_Product_Mapper',
            ],
            'Child_Shop_Spec_Computer_ImplMapper' => [
                'class' => 'Child_Shop_Spec_Computer_ImplMapper',
            ],
            'Child_Shop_Spec_Food_ImplMapper' => [
                'class' => 'Child_Shop_Spec_Food_ImplMapper',
            ],
            'Child_Shop_Spec_Laptop_ImplMapper' => [
                'class' => 'Child_Shop_Spec_Laptop_ImplMapper',
            ],
            'Child_Shop_Spec_Monitor_ImplMapper' => [
                'class' => 'Child_Shop_Spec_Monitor_ImplMapper',
            ],
            'Child_Shop_Spec_Mapper' => [
                'class' => 'Child_Shop_Spec_Mapper',
            ],
            'Child_Tag_Mapper' => [
                'class' => 'Child_Tag_Mapper',
            ],
            'Child_Tree_Adjacent_Mapper' => [
                'class' => 'Child_Tree_Adjacent_Mapper',
            ],
            'Child_Tree_Combo_Mapper' => [
                'class' => 'Child_Tree_Combo_Mapper',
            ],
            'Child_Tree_Record_Mapper' => [
                'class' => 'Child_Tree_Record_Mapper',
            ],
        ];
    }
    
    /**
     * @return Child_Person_Mapper 
     */
    function getChildPersonMapper() {
        return $this->getMapper('Child_Person_Mapper');
    }
    
    /**
     * @return Child_Perk_Mapper 
     */
    function getChildPerkMapper() {
        return $this->getMapper('Child_Perk_Mapper');
    }
    
    /**
     * @return Child_Person_Album_Mapper 
     */
    function getChildPersonAlbumMapper() {
        return $this->getMapper('Child_Person_Album_Mapper');
    }
    
    /**
     * @return Child_Person_Photo_Mapper 
     */
    function getChildPersonPhotoMapper() {
        return $this->getMapper('Child_Person_Photo_Mapper');
    }
    
    /**
     * @return Child_Person_Post_Mapper 
     */
    function getChildPersonPostMapper() {
        return $this->getMapper('Child_Person_Post_Mapper');
    }
    
    /**
     * @return Child_Publish_ImplMapper 
     */
    function getChildPublishImplMapper() {
        return $this->getMapper('Child_Publish_ImplMapper');
    }
    
    /**
     * @return Child_Relation_Type_Mapper 
     */
    function getChildRelationTypeMapper() {
        return $this->getMapper('Child_Relation_Type_Mapper');
    }
    
    /**
     * @return Child_Relation_Mapper 
     */
    function getChildRelationMapper() {
        return $this->getMapper('Child_Relation_Mapper');
    }
    
    /**
     * @return Child_Religion_Mapper 
     */
    function getChildReligionMapper() {
        return $this->getMapper('Child_Religion_Mapper');
    }
    
    /**
     * @return Child_Shop_Category_Mapper 
     */
    function getChildShopCategoryMapper() {
        return $this->getMapper('Child_Shop_Category_Mapper');
    }
    
    /**
     * @return Child_Shop_Classifier_Mapper 
     */
    function getChildShopClassifierMapper() {
        return $this->getMapper('Child_Shop_Classifier_Mapper');
    }
    
    /**
     * @return Child_Shop_Classifier_Type_Mapper 
     */
    function getChildShopClassifierTypeMapper() {
        return $this->getMapper('Child_Shop_Classifier_Type_Mapper');
    }
    
    /**
     * @return Child_Shop_Product_Extra_Code_ImplMapper 
     */
    function getChildShopProductExtraCodeImplMapper() {
        return $this->getMapper('Child_Shop_Product_Extra_Code_ImplMapper');
    }
    
    /**
     * @return Child_Shop_Product_Note_ImplMapper 
     */
    function getChildShopProductNoteImplMapper() {
        return $this->getMapper('Child_Shop_Product_Note_ImplMapper');
    }
    
    /**
     * @return Child_Shop_Product_Mapper 
     */
    function getChildShopProductMapper() {
        return $this->getMapper('Child_Shop_Product_Mapper');
    }
    
    /**
     * @return Child_Shop_Spec_Computer_ImplMapper 
     */
    function getChildShopSpecComputerImplMapper() {
        return $this->getMapper('Child_Shop_Spec_Computer_ImplMapper');
    }
    
    /**
     * @return Child_Shop_Spec_Food_ImplMapper 
     */
    function getChildShopSpecFoodImplMapper() {
        return $this->getMapper('Child_Shop_Spec_Food_ImplMapper');
    }
    
    /**
     * @return Child_Shop_Spec_Laptop_ImplMapper 
     */
    function getChildShopSpecLaptopImplMapper() {
        return $this->getMapper('Child_Shop_Spec_Laptop_ImplMapper');
    }
    
    /**
     * @return Child_Shop_Spec_Monitor_ImplMapper 
     */
    function getChildShopSpecMonitorImplMapper() {
        return $this->getMapper('Child_Shop_Spec_Monitor_ImplMapper');
    }
    
    /**
     * @return Child_Shop_Spec_Mapper 
     */
    function getChildShopSpecMapper() {
        return $this->getMapper('Child_Shop_Spec_Mapper');
    }
    
    /**
     * @return Child_Tag_Mapper 
     */
    function getChildTagMapper() {
        return $this->getMapper('Child_Tag_Mapper');
    }
    
    /**
     * @return Child_Tree_Adjacent_Mapper 
     */
    function getChildTreeAdjacentMapper() {
        return $this->getMapper('Child_Tree_Adjacent_Mapper');
    }
    
    /**
     * @return Child_Tree_Combo_Mapper 
     */
    function getChildTreeComboMapper() {
        return $this->getMapper('Child_Tree_Combo_Mapper');
    }
    
    /**
     * @return Child_Tree_Record_Mapper 
     */
    function getChildTreeRecordMapper() {
        return $this->getMapper('Child_Tree_Record_Mapper');
    }
    
    /**
     * @return Child_Person_Mapper 
     */
    function getSamplePersonMapper() {
        return $this->getChildPersonMapper();
    }
    
    /**
     * @return Child_Perk_Mapper 
     */
    function getSamplePerkMapper() {
        return $this->getChildPerkMapper();
    }
    
    /**
     * @return Child_Person_Album_Mapper 
     */
    function getSamplePersonAlbumMapper() {
        return $this->getChildPersonAlbumMapper();
    }
    
    /**
     * @return Child_Person_Photo_Mapper 
     */
    function getSamplePersonPhotoMapper() {
        return $this->getChildPersonPhotoMapper();
    }
    
    /**
     * @return Child_Person_Post_Mapper 
     */
    function getSamplePersonPostMapper() {
        return $this->getChildPersonPostMapper();
    }
    
    /**
     * @return Child_Publish_ImplMapper 
     */
    function getSamplePublishImplMapper() {
        return $this->getChildPublishImplMapper();
    }
    
    /**
     * @return Child_Relation_Type_Mapper 
     */
    function getSampleRelationTypeMapper() {
        return $this->getChildRelationTypeMapper();
    }
    
    /**
     * @return Child_Relation_Mapper 
     */
    function getSampleRelationMapper() {
        return $this->getChildRelationMapper();
    }
    
    /**
     * @return Child_Religion_Mapper 
     */
    function getSampleReligionMapper() {
        return $this->getChildReligionMapper();
    }
    
    /**
     * @return Child_Shop_Category_Mapper 
     */
    function getSampleShopCategoryMapper() {
        return $this->getChildShopCategoryMapper();
    }
    
    /**
     * @return Child_Shop_Classifier_Mapper 
     */
    function getSampleShopClassifierMapper() {
        return $this->getChildShopClassifierMapper();
    }
    
    /**
     * @return Child_Shop_Classifier_Type_Mapper 
     */
    function getSampleShopClassifierTypeMapper() {
        return $this->getChildShopClassifierTypeMapper();
    }
    
    /**
     * @return Child_Shop_Product_Extra_Code_ImplMapper 
     */
    function getSampleShopProductExtraCodeImplMapper() {
        return $this->getChildShopProductExtraCodeImplMapper();
    }
    
    /**
     * @return Child_Shop_Product_Note_ImplMapper 
     */
    function getSampleShopProductNoteImplMapper() {
        return $this->getChildShopProductNoteImplMapper();
    }
    
    /**
     * @return Child_Shop_Product_Mapper 
     */
    function getSampleShopProductMapper() {
        return $this->getChildShopProductMapper();
    }
    
    /**
     * @return Child_Shop_Spec_Computer_ImplMapper 
     */
    function getSampleShopSpecComputerImplMapper() {
        return $this->getChildShopSpecComputerImplMapper();
    }
    
    /**
     * @return Child_Shop_Spec_Food_ImplMapper 
     */
    function getSampleShopSpecFoodImplMapper() {
        return $this->getChildShopSpecFoodImplMapper();
    }
    
    /**
     * @return Child_Shop_Spec_Laptop_ImplMapper 
     */
    function getSampleShopSpecLaptopImplMapper() {
        return $this->getChildShopSpecLaptopImplMapper();
    }
    
    /**
     * @return Child_Shop_Spec_Monitor_ImplMapper 
     */
    function getSampleShopSpecMonitorImplMapper() {
        return $this->getChildShopSpecMonitorImplMapper();
    }
    
    /**
     * @return Child_Shop_Spec_Mapper 
     */
    function getSampleShopSpecMapper() {
        return $this->getChildShopSpecMapper();
    }
    
    /**
     * @return Child_Tag_Mapper 
     */
    function getSampleTagMapper() {
        return $this->getChildTagMapper();
    }
    
    /**
     * @return Child_Tree_Adjacent_Mapper 
     */
    function getSampleTreeAdjacentMapper() {
        return $this->getChildTreeAdjacentMapper();
    }
    
    /**
     * @return Child_Tree_Combo_Mapper 
     */
    function getSampleTreeComboMapper() {
        return $this->getChildTreeComboMapper();
    }
    
    /**
     * @return Child_Tree_Record_Mapper 
     */
    function getSampleTreeRecordMapper() {
        return $this->getChildTreeRecordMapper();
    }
    
 
    /**
     * @return Child_Person 
     */
    static function Child_Person ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Person 
     */
    function createChildPerson () {
        return $this->getMapper('Child_Person_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Perk 
     */
    static function Child_Perk ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Perk 
     */
    function createChildPerk () {
        return $this->getMapper('Child_Perk_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Person_Album 
     */
    static function Child_Person_Album ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Person_Album 
     */
    function createChildPersonAlbum () {
        return $this->getMapper('Child_Person_Album_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Person_Photo 
     */
    static function Child_Person_Photo ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Person_Photo 
     */
    function createChildPersonPhoto () {
        return $this->getMapper('Child_Person_Photo_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Person_Post 
     */
    static function Child_Person_Post ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Person_Post 
     */
    function createChildPersonPost () {
        return $this->getMapper('Child_Person_Post_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Publish 
     */
    static function Child_Publish ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Publish 
     */
    function createChildPublish () {
        return $this->getMapper('Child_Publish_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Relation_Type 
     */
    static function Child_Relation_Type ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Relation_Type 
     */
    function createChildRelationType () {
        return $this->getMapper('Child_Relation_Type_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Relation 
     */
    static function Child_Relation ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Relation 
     */
    function createChildRelation () {
        return $this->getMapper('Child_Relation_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Religion 
     */
    static function Child_Religion ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Religion 
     */
    function createChildReligion () {
        return $this->getMapper('Child_Religion_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Category 
     */
    static function Child_Shop_Category ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Category 
     */
    function createChildShopCategory () {
        return $this->getMapper('Child_Shop_Category_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Classifier 
     */
    static function Child_Shop_Classifier ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Classifier 
     */
    function createChildShopClassifier () {
        return $this->getMapper('Child_Shop_Classifier_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Classifier_Type 
     */
    static function Child_Shop_Classifier_Type ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Classifier_Type 
     */
    function createChildShopClassifierType () {
        return $this->getMapper('Child_Shop_Classifier_Type_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Product_Extra_Code 
     */
    static function Child_Shop_Product_Extra_Code ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Product_Extra_Code 
     */
    function createChildShopProductExtraCode () {
        return $this->getMapper('Child_Shop_Product_Extra_Code_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Product_Note 
     */
    static function Child_Shop_Product_Note ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Product_Note 
     */
    function createChildShopProductNote () {
        return $this->getMapper('Child_Shop_Product_Note_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Product 
     */
    static function Child_Shop_Product ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Product 
     */
    function createChildShopProduct () {
        return $this->getMapper('Child_Shop_Product_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Spec_Computer 
     */
    static function Child_Shop_Spec_Computer ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Spec_Computer 
     */
    function createChildShopSpecComputer () {
        return $this->getMapper('Child_Shop_Spec_Computer_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Spec_Food 
     */
    static function Child_Shop_Spec_Food ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Spec_Food 
     */
    function createChildShopSpecFood () {
        return $this->getMapper('Child_Shop_Spec_Food_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Spec_Laptop 
     */
    static function Child_Shop_Spec_Laptop ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Spec_Laptop 
     */
    function createChildShopSpecLaptop () {
        return $this->getMapper('Child_Shop_Spec_Laptop_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Spec_Monitor 
     */
    static function Child_Shop_Spec_Monitor ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Spec_Monitor 
     */
    function createChildShopSpecMonitor () {
        return $this->getMapper('Child_Shop_Spec_Monitor_ImplMapper')->createRecord();
    }
    
 
    /**
     * @return Child_Shop_Spec 
     */
    static function Child_Shop_Spec ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Shop_Spec 
     */
    function createChildShopSpec () {
        return $this->getMapper('Child_Shop_Spec_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Tag 
     */
    static function Child_Tag ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Tag 
     */
    function createChildTag () {
        return $this->getMapper('Child_Tag_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Tree_Adjacent 
     */
    static function Child_Tree_Adjacent ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Tree_Adjacent 
     */
    function createChildTreeAdjacent () {
        return $this->getMapper('Child_Tree_Adjacent_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Tree_Combo 
     */
    static function Child_Tree_Combo ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Tree_Combo 
     */
    function createChildTreeCombo () {
        return $this->getMapper('Child_Tree_Combo_Mapper')->createRecord();
    }
    
 
    /**
     * @return Child_Tree_Record 
     */
    static function Child_Tree_Record ($object = null) {
        return $object;
    }
    
    /**
     * @return Child_Tree_Record 
     */
    function createChildTreeRecord () {
        return $this->getMapper('Child_Tree_Record_Mapper')->createRecord();
    }
    

}
{
    "__class": "Ac_Cg_Domain",
    "name": "Child",
    "appName": "Child",
    "appClass": false,
    "appBaseClass": "Ac_Application",
    "caption": "Avancore_Child",
    "dbName": "avancore_test",
    "relationsToNonModels": false,
    "tablePrefix": "ac_",
    "replaceTablePrefixWith": "#__",
    "stripTablePrefixFromIds": true,
    "extraStripFromIds": false,
    "autoTables": [],
    "autoTablesAll": "\/^#__\/",
    "autoTablesIgnore": [
        "#__tree_nested_sets",
        "#__shop_product_upc",
        "#__shop_meta"
    ],
    "tableNamesArePlural": true,
    "subsystemPrefixes": [],
    "modelNames": [],
    "dontLinkSubsystems": [],
    "subsystemPrefixAppearsOnlyOnce": true,
    "tableNameFixes": [],
    "dontPrefixClassesWithAppName": false,
    "defaultTitlePropName": "title",
    "autoDetectTitles": true,
    "defaultPublishedPropName": "published",
    "defaultOrderingPropName": "ordering",
    "modelDefaults": {
        "generateMethodPlaceholders": true,
        "noUi": true,
        "hasUniformPropertiesInfo": true
    },
    "schemaExtras": [],
    "dictionary": {
        "__class": "Ac_Cg_Dictionary",
        "translations": [],
        "pluralForms": [],
        "singularForms": [],
        "fallbackToConstants": false,
        "constants": [],
        "alwaysUseConstants": true,
        "constantPrefix": "Child",
        "defaultLanguage": "en",
        "useInflector": true
    },
    "useLangStrings": false,
    "ignoredColumnsInJunctionTables": {
        "#__shop_product_related": [
            "ignore"
        ]
    },
    "extraConfigByTables": [],
    "langStringPrefix": false,
    "tableLangStringPrefix": false,
    "addSubsystemsToMapperMethods": true,
    "overrideTypesUsingDocBlocks": true,
    "parentDomainName": "Sample",
    "autoParentModels": true,
    "parentTableMap": [],
    "modelNameDecorator": [],
    "dontInheritProperties": [],
    "domainTemplates": false,
    "inspector": {
        "__class": "Ac_Sql_Dbi_Inspector_Canned",
        "tableData": {
            "avancore_test": {
                "ac_album_photos": {
                    "columns": {
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "albumId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "photoId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "photoId",
                                "2": "albumId",
                                "3": "personId"
                            }
                        },
                        "FK__ac_person_albums": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "albumId"
                            }
                        },
                        "FK__ac_person_photos": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "photoId"
                            }
                        }
                    },
                    "relations": {
                        "FK__ac_person_albums": {
                            "table": "ac_person_albums",
                            "columns": {
                                "personId": "personId",
                                "albumId": "albumId"
                            }
                        },
                        "FK__ac_person_photos": {
                            "table": "ac_person_photos",
                            "columns": {
                                "personId": "personId",
                                "photoId": "photoId"
                            }
                        }
                    }
                },
                "ac_cpk": {
                    "columns": {
                        "foo": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "bar": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "baz": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "foo",
                                "2": "bar"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_people": {
                    "columns": {
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": null
                        },
                        "gender": {
                            "type": "enum",
                            "enumValues": [
                                "F",
                                "M"
                            ],
                            "nullable": false,
                            "default": "F"
                        },
                        "isSingle": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 1
                        },
                        "birthDate": {
                            "type": "date",
                            "nullable": false,
                            "default": null
                        },
                        "lastUpdatedDatetime": {
                            "type": "datetime",
                            "nullable": true,
                            "default": null
                        },
                        "createdTs": {
                            "type": "timestamp",
                            "nullable": false,
                            "default": "CURRENT_TIMESTAMP"
                        },
                        "religionId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "portraitId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "personId"
                            }
                        },
                        "FK_ac_people_1": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "religionId"
                            }
                        },
                        "FK_ac_person_photos_ac_people_protrait": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "portraitId"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_person_photos_ac_people_portrait": {
                            "table": "ac_person_photos",
                            "columns": {
                                "personId": "personId",
                                "portraitId": "photoId"
                            }
                        },
                        "FK_ac_person_religion": {
                            "table": "ac_religion",
                            "columns": {
                                "religionId": "religionId"
                            }
                        }
                    }
                },
                "ac_people_tags": {
                    "columns": {
                        "idOfPerson": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "idOfTag": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "idOfPerson",
                                "2": "idOfTag"
                            }
                        },
                        "FK_ac_people_tags_2": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "idOfTag"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_people_tags_1": {
                            "table": "ac_people",
                            "columns": {
                                "idOfPerson": "personId"
                            }
                        },
                        "FK_ac_people_tags_2": {
                            "table": "ac_tags",
                            "columns": {
                                "idOfTag": "tagId"
                            }
                        }
                    }
                },
                "ac_perks": {
                    "columns": {
                        "perkId": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "perkId"
                            }
                        },
                        "uqName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "name"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_person_albums": {
                    "columns": {
                        "albumId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "albumName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": "''"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "albumId"
                            }
                        },
                        "FK__ac_people": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        }
                    },
                    "relations": {
                        "FK__ac_people": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        }
                    }
                },
                "ac_person_photos": {
                    "columns": {
                        "photoId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "filename": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "photoId"
                            }
                        },
                        "FK_ac_person_photos_ac_people": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_person_photos_ac_people": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        }
                    }
                },
                "ac_person_posts": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "photoId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": ""
                        },
                        "content": {
                            "type": "longtext",
                            "nullable": true,
                            "default": null
                        },
                        "pubId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubId"
                            }
                        },
                        "personId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        },
                        "FK__ac_post_photo": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId",
                                "2": "photoId"
                            }
                        }
                    },
                    "relations": {
                        "fkPostPublish": {
                            "table": "ac_publish",
                            "columns": {
                                "pubId": "id"
                            }
                        },
                        "FK__ac_post_person": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        },
                        "FK__ac_post_photo": {
                            "table": "ac_person_photos",
                            "columns": {
                                "personId": "personId",
                                "photoId": "photoId"
                            }
                        }
                    }
                },
                "ac_publish": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "sharedObjectType": {
                            "type": "varchar",
                            "width": "50",
                            "nullable": false,
                            "default": null
                        },
                        "published": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": true,
                            "default": 1
                        },
                        "deleted": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": true,
                            "default": 0
                        },
                        "publishUp": {
                            "type": "datetime",
                            "nullable": true,
                            "default": "0000-00-00 00:00:00"
                        },
                        "publishDown": {
                            "type": "datetime",
                            "nullable": true,
                            "default": "0000-00-00 00:00:00"
                        },
                        "authorId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "editorId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "pubChannelId": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "dateCreated": {
                            "type": "datetime",
                            "nullable": false,
                            "default": "0000-00-00 00:00:00"
                        },
                        "dateModified": {
                            "type": "datetime",
                            "nullable": false,
                            "default": "0000-00-00 00:00:00"
                        },
                        "dateDeleted": {
                            "type": "datetime",
                            "nullable": false,
                            "default": "0000-00-00 00:00:00"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubChannelId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubChannelId"
                            }
                        },
                        "sharedObjectType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "sharedObjectType"
                            }
                        },
                        "fkPubAuthor": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "authorId"
                            }
                        },
                        "fkPubEditor": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "editorId"
                            }
                        }
                    },
                    "relations": {
                        "fkPubAuthor": {
                            "table": "ac_people",
                            "columns": {
                                "authorId": "personId"
                            }
                        },
                        "fkPubEditor": {
                            "table": "ac_people",
                            "columns": {
                                "editorId": "personId"
                            }
                        }
                    }
                },
                "ac_relation_types": {
                    "columns": {
                        "relationTypeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "isSymmetrical": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "relationTypeId"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_relations": {
                    "columns": {
                        "relationId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "personId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "otherPersonId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "relationTypeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "relationBegin": {
                            "type": "datetime",
                            "nullable": true,
                            "default": null
                        },
                        "relationEnd": {
                            "type": "datetime",
                            "nullable": true,
                            "default": null
                        },
                        "notes": {
                            "type": "text",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "relationId"
                            }
                        },
                        "FK_ac_relations_3": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "relationTypeId"
                            }
                        },
                        "FK_ac_relations_outgoing": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "personId"
                            }
                        },
                        "FK_ac_relations_incoming": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "otherPersonId"
                            }
                        }
                    },
                    "relations": {
                        "FK_ac_relations_3": {
                            "table": "ac_relation_types",
                            "columns": {
                                "relationTypeId": "relationTypeId"
                            }
                        },
                        "FK_ac_relations_incoming": {
                            "table": "ac_people",
                            "columns": {
                                "otherPersonId": "personId"
                            }
                        },
                        "FK_ac_relations_outgoing": {
                            "table": "ac_people",
                            "columns": {
                                "personId": "personId"
                            }
                        }
                    }
                },
                "ac_religion": {
                    "columns": {
                        "religionId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "religionId"
                            }
                        },
                        "Index_2": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "title"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_shop_categories": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "leftCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "rightCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "depth": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "metaId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "pubId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubId"
                            }
                        }
                    },
                    "relations": {
                        "fkCategoryPublish": {
                            "table": "ac_publish",
                            "columns": {
                                "pubId": "id"
                            }
                        }
                    }
                },
                "ac_shop_classifier": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "type": {
                            "type": "varchar",
                            "width": "16",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "type_title": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "type",
                                "2": "title"
                            }
                        }
                    },
                    "relations": {
                        "fkClassifierType": {
                            "table": "ac_shop_classifier_type",
                            "columns": {
                                "type": "type"
                            }
                        }
                    }
                },
                "ac_shop_classifier_type": {
                    "columns": {
                        "type": {
                            "type": "varchar",
                            "width": "16",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "type"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_shop_meta": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "pageTitle": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "metaDescription": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "metaKeywords": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "metaNoindex": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        },
                        "sharedObjectType": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": "other"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_shop_product_categories": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "categoryId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId",
                                "2": "categoryId"
                            }
                        },
                        "fkProductCategoryCategory": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        }
                    },
                    "relations": {
                        "fkProductCategoryCategory": {
                            "table": "ac_shop_categories",
                            "columns": {
                                "categoryId": "id"
                            }
                        },
                        "fkProductCategoryProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_shop_product_extraCodes": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ean": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "asin": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "gtin": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "responsiblePersonId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "fkExtraCodeResponsiblePerson": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "responsiblePersonId"
                            }
                        }
                    },
                    "relations": {
                        "fkExtraCodeProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        },
                        "fkExtraCodeResponsiblePerson": {
                            "table": "ac_people",
                            "columns": {
                                "responsiblePersonId": "personId"
                            }
                        }
                    }
                },
                "ac_shop_product_notes": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "note": {
                            "type": "text",
                            "nullable": false,
                            "default": null
                        },
                        "noteAuthorId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "fkProductNoteAuthor": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "noteAuthorId"
                            }
                        }
                    },
                    "relations": {
                        "fkProductNoteAuthor": {
                            "table": "ac_people",
                            "columns": {
                                "noteAuthorId": "personId"
                            }
                        },
                        "fkProductNoteProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_shop_product_related": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "relatedProductId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId",
                                "2": "relatedProductId"
                            }
                        },
                        "ignore": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ignore"
                            }
                        },
                        "relatedProductReferencing": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "relatedProductId"
                            }
                        }
                    },
                    "relations": {
                        "relatedProductReferenced": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        },
                        "relatedProductReferencing": {
                            "table": "ac_shop_products",
                            "columns": {
                                "relatedProductId": "id"
                            }
                        }
                    }
                },
                "ac_shop_product_upc": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "upcCode": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fk_ac_product_upc_1": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_shop_products": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "sku": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "metaId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "pubId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxPubId": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "pubId"
                            }
                        }
                    },
                    "relations": {
                        "fkPersonPublish": {
                            "table": "ac_publish",
                            "columns": {
                                "pubId": "id"
                            }
                        }
                    }
                },
                "ac_shop_spec_computer": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "hdd": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "ram": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "os": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fkSpecsComputer": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_spec_food": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "storageType": {
                            "type": "enum",
                            "enumValues": [
                                "shelfStable",
                                "frozen",
                                "refrigerated"
                            ],
                            "nullable": true,
                            "default": "shelfStable"
                        },
                        "storageTerm": {
                            "type": "int",
                            "unsigned": true,
                            "width": "3",
                            "nullable": false,
                            "default": 0
                        },
                        "storageTermUnit": {
                            "type": "enum",
                            "enumValues": [
                                "days",
                                "months",
                                "years"
                            ],
                            "nullable": false,
                            "default": "days"
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fkSpecsFood": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_spec_laptop": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "weight": {
                            "type": "decimal",
                            "unsigned": true,
                            "width": "3",
                            "decimals": "1",
                            "nullable": false,
                            "default": null
                        },
                        "battery": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        }
                    },
                    "relations": {
                        "fkSpecLaptopProduct": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_spec_monitor": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "diagonal": {
                            "type": "decimal",
                            "unsigned": true,
                            "width": "4",
                            "decimals": "1",
                            "nullable": false,
                            "default": null
                        },
                        "hRes": {
                            "type": "int",
                            "unsigned": true,
                            "width": "5",
                            "nullable": false,
                            "default": null
                        },
                        "vRes": {
                            "type": "int",
                            "unsigned": true,
                            "width": "5",
                            "nullable": false,
                            "default": null
                        },
                        "matrixTypeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "fkMonitorMatrixType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "matrixTypeId"
                            }
                        }
                    },
                    "relations": {
                        "fkMonitorMatrixType": {
                            "table": "ac_shop_classifier",
                            "columns": {
                                "matrixTypeId": "id"
                            }
                        },
                        "fkMonitorSpec": {
                            "table": "ac_shop_specs",
                            "columns": {
                                "productId": "productId"
                            }
                        }
                    }
                },
                "ac_shop_specs": {
                    "columns": {
                        "productId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "detailsUrl": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "specsType": {
                            "type": "varchar",
                            "width": "40",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "productId"
                            }
                        },
                        "specsType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "specsType"
                            }
                        }
                    },
                    "relations": {
                        "specsProduct": {
                            "table": "ac_shop_products",
                            "columns": {
                                "productId": "id"
                            }
                        }
                    }
                },
                "ac_tag_perks": {
                    "columns": {
                        "idOfTag": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "idOfPerk": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "idOfTag",
                                "2": "idOfPerk"
                            }
                        },
                        "fkTagId_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "idOfTag"
                            }
                        },
                        "fkPerkId_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "idOfPerk"
                            }
                        }
                    },
                    "relations": {
                        "fkPerkId": {
                            "table": "ac_perks",
                            "columns": {
                                "idOfPerk": "perkId"
                            }
                        },
                        "fkTagId": {
                            "table": "ac_tags",
                            "columns": {
                                "idOfTag": "tagId"
                            }
                        }
                    }
                },
                "ac_tags": {
                    "columns": {
                        "tagId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "titleM": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "titleF": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "tagId"
                            }
                        },
                        "Index_2": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "title"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_adjacent": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "tag": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "index_4": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "index_5": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ordering"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_combos": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "leftCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "rightCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 1
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "tag": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        },
                        "depth": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "index_2": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "leftCol"
                            }
                        },
                        "index_3": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "rightCol"
                            }
                        },
                        "index_4": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "index_5": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ordering"
                            }
                        },
                        "index_6": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ignore"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_nested_sets": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "treeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "leftCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "rightCol": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 1
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "ordering": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        },
                        "comment": {
                            "type": "varchar",
                            "width": "40",
                            "nullable": false,
                            "default": null
                        },
                        "ignore": {
                            "type": "int",
                            "unsigned": true,
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        },
                        "depth": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id",
                                "2": "treeId"
                            }
                        },
                        "index_2": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "leftCol"
                            }
                        },
                        "index_3": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "rightCol"
                            }
                        },
                        "index_4": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "index_5": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ordering"
                            }
                        },
                        "index_6": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "ignore"
                            }
                        },
                        "index_7": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "index_8": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "treeId"
                            }
                        }
                    },
                    "relations": []
                },
                "ac_tree_records": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "title": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": false,
                            "default": ""
                        },
                        "tag": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_template": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "importId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "lineNo": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_aipk": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "content": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_aipk_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "importId": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": 1
                        },
                        "itemId": {
                            "type": "int",
                            "width": "11",
                            "nullable": true,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "content": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "otherContent": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "isDraft": {
                            "type": "int",
                            "width": "1",
                            "nullable": false,
                            "default": 0
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_aipk_linked": {
                    "columns": {
                        "masterId": {
                            "type": "int",
                            "width": "11",
                            "nullable": false,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "otherContent": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "masterId"
                            }
                        },
                        "name_UNIQUE": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_categories": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "parentId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxTitle": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        },
                        "fk_im_test_categories_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        }
                    },
                    "relations": {
                        "fk_im_test_categories_1": {
                            "table": "im_test_categories",
                            "columns": {
                                "parentId": "id"
                            }
                        }
                    }
                },
                "im_test_categories_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "categoryId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "categoryName": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "description": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "parentId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "parentName": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryName"
                            }
                        },
                        "idxItemId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        },
                        "idxTypeId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentId"
                            }
                        },
                        "idxType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "parentName"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_classifiers_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "classifierId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "title": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "description": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "classifierType": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "title"
                            }
                        },
                        "idxItemId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "classifierId"
                            }
                        },
                        "idxType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "classifierType"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_item_categories": {
                    "columns": {
                        "itemId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "categoryId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "itemId",
                                "2": "categoryId"
                            }
                        },
                        "fk_im_test_item_categories_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        },
                        "fk_im_test_item_categories_1_idx1": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "itemId"
                            }
                        }
                    },
                    "relations": {
                        "categoryId": {
                            "table": "im_test_categories",
                            "columns": {
                                "categoryId": "id"
                            }
                        },
                        "itemId": {
                            "table": "im_test_items",
                            "columns": {
                                "itemId": "id"
                            }
                        }
                    }
                },
                "im_test_item_categories_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "categoryId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "categoryName": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "lineNo": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "categoryId"
                            }
                        },
                        "idxLineNo": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "lineNo"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_items": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "description": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "imageFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "thumbFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "typeId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        },
                        "fk_im_test_items_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "typeId"
                            }
                        }
                    },
                    "relations": {
                        "fk_im_test_items_1": {
                            "table": "im_test_types",
                            "columns": {
                                "typeId": "id"
                            }
                        }
                    }
                },
                "im_test_items_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "itemId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "description": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "typeId": {
                            "type": "int",
                            "width": "10",
                            "nullable": true,
                            "default": null
                        },
                        "type": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "relatedText1": {
                            "type": "mediumtext",
                            "nullable": true,
                            "default": null
                        },
                        "pictureUrl": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "lineNo": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "name"
                            }
                        },
                        "idxItemId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "itemId"
                            }
                        },
                        "idxTypeId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "typeId"
                            }
                        },
                        "idxType": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "type"
                            }
                        },
                        "idxLineNo": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "lineNo"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        },
                        "idxPictureUrl": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "pictureUrl"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_pictures_import": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "importId": {
                            "type": "int",
                            "width": "10",
                            "nullable": false,
                            "default": null
                        },
                        "importStatus": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": "unprocessed"
                        },
                        "problems": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": null
                        },
                        "pictureUrl": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "pictureFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        },
                        "thumbFileName": {
                            "type": "varchar",
                            "width": "255",
                            "nullable": true,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxStatus": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importStatus"
                            }
                        },
                        "idxImportId": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "importId"
                            }
                        },
                        "idxPictureUrl": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "pictureUrl"
                            }
                        },
                        "idxPictureFileName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "pictureFileName"
                            }
                        },
                        "idxThumbFileName": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "thumbFileName"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_related": {
                    "columns": {
                        "itemId": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "relatedText1": {
                            "type": "mediumtext",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "itemId"
                            }
                        },
                        "fk_im_test_related_1_idx": {
                            "primary": false,
                            "unique": false,
                            "columns": {
                                "1": "itemId"
                            }
                        }
                    },
                    "relations": {
                        "fk_im_test_related_1": {
                            "table": "im_test_items",
                            "columns": {
                                "itemId": "id"
                            }
                        }
                    }
                },
                "im_test_source_of_copy": {
                    "columns": {
                        "id": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "description": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "thisWillBeRelatedText": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": ""
                        },
                        "somethingElse": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": true,
                            "default": ""
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        }
                    },
                    "relations": []
                },
                "im_test_types": {
                    "columns": {
                        "id": {
                            "type": "int",
                            "unsigned": true,
                            "width": "10",
                            "nullable": false,
                            "default": null,
                            "autoInc": true
                        },
                        "name": {
                            "type": "varchar",
                            "width": "45",
                            "nullable": false,
                            "default": null
                        }
                    },
                    "indices": {
                        "PRIMARY": {
                            "primary": true,
                            "unique": true,
                            "columns": {
                                "1": "id"
                            }
                        },
                        "idxTitle": {
                            "primary": false,
                            "unique": true,
                            "columns": {
                                "1": "name"
                            }
                        }
                    },
                    "relations": []
                }
            }
        },
        "defaultDatabaseName": "avancore_test"
    },
    "_models": {
        "people": {
            "__class": "Ac_Cg_Model",
            "name": "people",
            "table": "#__people",
            "subsystemPrefixes": [],
            "single": "person",
            "plural": "people",
            "className": "Child_Person",
            "singleCaption": "People",
            "pluralCaption": "People",
            "parentClassName": "Sample_Person",
            "parentMapperClassName": "Sample_Person_Mapper",
            "parentStorageClassName": "Sample_Person_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "lastUpdatedDatetime",
                "religionId",
                "portraitId"
            ],
            "mapperVars": [],
            "titleProp": "name",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_person_photos_ac_people_portrait": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_person_photos_ac_people_portrait",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Photo",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "portrait",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_person_photos_ac_people_portrait",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people_portrait",
                    "caption": "Person photo",
                    "varName": "portraitPersonPhoto",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ]
                },
                "_rel_FK_ac_person_religion": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_person_religion",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Religion",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Religion_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_person_religion",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_religion",
                    "caption": "Religion",
                    "varName": "religion",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "religion",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_religion"
                    ]
                },
                "_rel_FK_ac_people_tags_1": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ],
                    "otherRelation": "FK_ac_people_tags_2",
                    "isOtherIncoming": false,
                    "className": "Child_Tag",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Tag_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people_tags",
                            "FK_ac_people_tags_1"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK_ac_people_tags_2",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_people_tags_1",
                    "caption": "Tags",
                    "varName": "tags",
                    "pluralForList": "tags",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "tags",
                    "_rel": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ],
                    "_otherRel": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ]
                },
                "_rel_FK__ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_albums",
                        "FK__ac_people"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Album",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Album_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_albums",
                            "FK__ac_people"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_people",
                    "caption": "Person albums",
                    "varName": "personAlbums",
                    "pluralForList": "personAlbums",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personAlbums",
                    "_rel": [
                        "#__person_albums",
                        "FK__ac_people"
                    ]
                },
                "_rel_FK_ac_person_photos_ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Photo",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_photos",
                            "FK_ac_person_photos_ac_people"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people",
                    "caption": "Person photos",
                    "varName": "personPhotos",
                    "pluralForList": "personPhotos",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ]
                },
                "_rel_FK__ac_post_person": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Post",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Post_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_posts",
                            "FK__ac_post_person"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_person",
                    "caption": "Person posts",
                    "varName": "personPosts",
                    "pluralForList": "personPosts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personPosts",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ]
                },
                "_rel_fkPubAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__publish",
                        "fkPubAuthor"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "author",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__publish",
                            "fkPubAuthor"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPubAuthor",
                    "caption": "Publish",
                    "varName": "authorPublish",
                    "pluralForList": "authorPublish",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": true,
                    "_other": "publish",
                    "_rel": [
                        "#__publish",
                        "fkPubAuthor"
                    ]
                },
                "_rel_fkPubEditor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__publish",
                        "fkPubEditor"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "editor",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__publish",
                            "fkPubEditor"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPubEditor",
                    "caption": "Publish",
                    "varName": "editorPublish",
                    "pluralForList": "editorPublish",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": true,
                    "_other": "publish",
                    "_rel": [
                        "#__publish",
                        "fkPubEditor"
                    ]
                },
                "_rel_FK_ac_relations_incoming": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Relation",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "incoming",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Relation_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__relations",
                            "FK_ac_relations_incoming"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_incoming",
                    "caption": "Relations",
                    "varName": "incomingRelations",
                    "pluralForList": "incomingRelations",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "relations",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ]
                },
                "_rel_FK_ac_relations_outgoing": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Relation",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "outgoing",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Relation_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__relations",
                            "FK_ac_relations_outgoing"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_outgoing",
                    "caption": "Relations",
                    "varName": "outgoingRelations",
                    "pluralForList": "outgoingRelations",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "relations",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ]
                },
                "_rel_fkExtraCodeResponsiblePerson": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "extraCode",
                    "canLoadSrc": true,
                    "canLoadDest": false,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_extraCodes",
                            "fkExtraCodeResponsiblePerson"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkExtraCodeResponsiblePerson",
                    "caption": "Shop products",
                    "varName": "extraCodeShopProducts",
                    "pluralForList": "extraCodeShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ]
                },
                "_rel_fkProductNoteAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "note",
                    "canLoadSrc": true,
                    "canLoadDest": false,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_notes",
                            "fkProductNoteAuthor"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductNoteAuthor",
                    "caption": "Shop products",
                    "varName": "noteShopProducts",
                    "pluralForList": "noteShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "personId"
                    ]
                },
                "name": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "name",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "name",
                    "caption": "Name",
                    "varName": "name",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "name"
                    ]
                },
                "gender": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "gender",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": false,
                    "valueList": {
                        "F": "F",
                        "M": "M"
                    },
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "F",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "gender",
                    "caption": "Gender",
                    "varName": "gender",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "gender"
                    ]
                },
                "isSingle": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "isSingle",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 1,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "isSingle",
                    "caption": "Is Single",
                    "varName": "isSingle",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "isSingle"
                    ]
                },
                "birthDate": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "birthDate",
                    "dataType": "date",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "birthDate",
                    "caption": "Birth Date",
                    "varName": "birthDate",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d",
                        "outputDateFormat": "Y-m-d"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "birthDate"
                    ]
                },
                "lastUpdatedDatetime": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "lastUpdatedDatetime",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "lastUpdatedDatetime",
                    "caption": "Last Updated Datetime",
                    "varName": "lastUpdatedDatetime",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "lastUpdatedDatetime"
                    ]
                },
                "createdTs": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "createdTs",
                    "dataType": "timestamp",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": false,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "createdTs",
                    "caption": "Created Ts",
                    "varName": "createdTs",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "createdTs"
                    ]
                },
                "religionId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "religionId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Religion_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "religionId",
                    "caption": "Religion Id",
                    "varName": "religionId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "religionId"
                    ]
                },
                "portraitId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "portraitId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Photo_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "portraitId",
                    "caption": "Portrait Id",
                    "varName": "portraitId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__people",
                        "portraitId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_person_photos_ac_people_portrait",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_person_religion",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK_ac_people_tags_2",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_albums",
                        "FK__ac_people"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__publish",
                        "fkPubAuthor"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__publish",
                        "fkPubEditor"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "perks": {
            "__class": "Ac_Cg_Model",
            "name": "perks",
            "table": "#__perks",
            "subsystemPrefixes": [],
            "single": "perk",
            "plural": "perks",
            "className": "Child_Perk",
            "singleCaption": "Perk",
            "pluralCaption": "Perks",
            "parentClassName": "Sample_Perk",
            "parentMapperClassName": "Sample_Perk_Mapper",
            "parentStorageClassName": "Sample_Perk_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "name"
            ],
            "mapperVars": [],
            "titleProp": "name",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkPerkId": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__tag_perks",
                        "fkPerkId"
                    ],
                    "otherRelation": "fkTagId",
                    "isOtherIncoming": false,
                    "className": "Child_Tag",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Tag_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__tag_perks",
                            "fkPerkId"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkTagId",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPerkId",
                    "caption": "Tags",
                    "varName": "tags",
                    "pluralForList": "tags",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "tags",
                    "_rel": [
                        "#__tag_perks",
                        "fkPerkId"
                    ],
                    "_otherRel": [
                        "#__tag_perks",
                        "fkTagId"
                    ]
                },
                "perkId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "perkId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "perkId",
                    "caption": "Perk Id",
                    "varName": "perkId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__perks",
                        "perkId"
                    ]
                },
                "name": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "name",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "name",
                    "caption": "Name",
                    "varName": "name",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__perks",
                        "name"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__tag_perks",
                        "fkPerkId"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkTagId",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "personAlbums": {
            "__class": "Ac_Cg_Model",
            "name": "personAlbums",
            "table": "#__person_albums",
            "subsystemPrefixes": [],
            "single": "personAlbum",
            "plural": "personAlbums",
            "className": "Child_Person_Album",
            "singleCaption": "Person album",
            "pluralCaption": "Person albums",
            "parentClassName": "Sample_Person_Album",
            "parentMapperClassName": "Sample_Person_Album_Mapper",
            "parentStorageClassName": "Sample_Person_Album_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "albumName",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK__ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK__ac_people",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK__ac_people",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_people",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__person_albums",
                        "FK__ac_people"
                    ]
                },
                "_rel_FK__ac_person_albums": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ],
                    "otherRelation": "FK__ac_person_photos",
                    "isOtherIncoming": false,
                    "className": "Child_Person_Photo",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__album_photos",
                            "FK__ac_person_albums"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK__ac_person_photos",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_person_albums",
                    "caption": "Person photos",
                    "varName": "personPhotos",
                    "pluralForList": "personPhotos",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ],
                    "_otherRel": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ]
                },
                "albumId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "albumId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "albumId",
                    "caption": "Album Id",
                    "varName": "albumId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_albums",
                        "albumId"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_albums",
                        "personId"
                    ]
                },
                "albumName": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "albumName",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "''",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "albumName",
                    "caption": "Album Name",
                    "varName": "albumName",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_albums",
                        "albumName"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK__ac_people",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK__ac_person_photos",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "personPhotos": {
            "__class": "Ac_Cg_Model",
            "name": "personPhotos",
            "table": "#__person_photos",
            "subsystemPrefixes": [],
            "single": "personPhoto",
            "plural": "personPhotos",
            "className": "Child_Person_Photo",
            "singleCaption": "Person photo",
            "pluralCaption": "Person photos",
            "parentClassName": "Sample_Person_Photo",
            "parentMapperClassName": "Sample_Person_Photo_Mapper",
            "parentStorageClassName": "Sample_Person_Photo_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "filename",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_person_photos_ac_people": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_person_photos_ac_people",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_person_photos_ac_people",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__person_photos",
                        "FK_ac_person_photos_ac_people"
                    ]
                },
                "_rel_FK__ac_person_photos": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ],
                    "otherRelation": "FK__ac_person_albums",
                    "isOtherIncoming": false,
                    "className": "Child_Person_Album",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Album_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__album_photos",
                            "FK__ac_person_photos"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK__ac_person_albums",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_person_photos",
                    "caption": "Person albums",
                    "varName": "personAlbums",
                    "pluralForList": "personAlbums",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personAlbums",
                    "_rel": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ],
                    "_otherRel": [
                        "#__album_photos",
                        "FK__ac_person_albums"
                    ]
                },
                "_rel_FK_ac_person_photos_ac_people_portrait": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "portrait",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people",
                            "FK_ac_person_photos_ac_people_portrait"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_photos_ac_people_portrait",
                    "caption": "People",
                    "varName": "portraitPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ]
                },
                "_rel_FK__ac_post_photo": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Post",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Post_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_posts",
                            "FK__ac_post_photo"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_photo",
                    "caption": "Person posts",
                    "varName": "personPosts",
                    "pluralForList": "personPosts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personPosts",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ]
                },
                "photoId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "photoId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "photoId",
                    "caption": "Photo Id",
                    "varName": "photoId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_photos",
                        "photoId"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_photos",
                        "personId"
                    ]
                },
                "filename": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "filename",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "filename",
                    "caption": "Filename",
                    "varName": "filename",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_photos",
                        "filename"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_person_photos_ac_people",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__album_photos",
                        "FK__ac_person_photos"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK__ac_person_albums",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people",
                        "FK_ac_person_photos_ac_people_portrait"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "personPosts": {
            "__class": "Ac_Cg_Model",
            "name": "personPosts",
            "table": "#__person_posts",
            "subsystemPrefixes": [],
            "single": "personPost",
            "plural": "personPosts",
            "className": "Child_Person_Post",
            "singleCaption": "Person post",
            "pluralCaption": "Person posts",
            "parentClassName": "Sample_Person_Post",
            "parentMapperClassName": "Sample_Person_Post_Mapper",
            "parentStorageClassName": "Sample_Person_Post_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "personId",
                "photoId",
                "title",
                "content",
                "pubId"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "publish": {
                    "class": "Child_Publish_MapperMixable",
                    "colMap": {
                        "id": "pubId"
                    }
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkPostPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPostPublish",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPostPublish",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPostPublish",
                    "caption": "Publish",
                    "varName": "publish",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "publish",
                    "_rel": [
                        "#__person_posts",
                        "fkPostPublish"
                    ]
                },
                "_rel_FK__ac_post_person": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK__ac_post_person",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK__ac_post_person",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_person",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_person"
                    ]
                },
                "_rel_FK__ac_post_photo": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK__ac_post_photo",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Photo",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Photo_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK__ac_post_photo",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK__ac_post_photo",
                    "caption": "Person photo",
                    "varName": "personPhoto",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "personPhotos",
                    "_rel": [
                        "#__person_posts",
                        "FK__ac_post_photo"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "id"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "personId"
                    ]
                },
                "photoId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "photoId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Photo_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "photoId",
                    "caption": "Photo Id",
                    "varName": "photoId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "photoId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "title"
                    ]
                },
                "content": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "content",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "content",
                    "caption": "Content",
                    "varName": "content",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "content"
                    ]
                },
                "pubId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Publish_ImplMapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubId",
                    "caption": "Pub Id",
                    "varName": "pubId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__person_posts",
                        "pubId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPostPublish",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK__ac_post_person",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK__ac_post_photo",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "publish": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkPersonPublish",
                "fkCategoryPublish",
                "fkPostPublish"
            ],
            "skipMapperMixables": [],
            "masterProperties": {
                "fkPersonPublish": "_rel_fkPersonPublish",
                "fkCategoryPublish": "_rel_fkCategoryPublish",
                "fkPostPublish": "_rel_fkPostPublish"
            },
            "isReferenced": true,
            "parentExtraTableClass": "Sample_Publish_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_authorPerson": {
                    "srcMapperClass": "Child_Publish_ImplMapper",
                    "destMapperClass": "Child_Person_Mapper",
                    "srcVarName": "_authorPerson",
                    "fieldLinks": {
                        "authorId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                },
                "_editorPerson": {
                    "srcMapperClass": "Child_Publish_ImplMapper",
                    "destMapperClass": "Child_Person_Mapper",
                    "srcVarName": "_editorPerson",
                    "fieldLinks": {
                        "editorId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "authorPerson": {
                    "relationId": "_authorPerson",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "authorPerson",
                    "plural": "authorPeople",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadAuthorPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfAuthorPeople",
                    "createDestObjectMethod": "createAuthorPerson",
                    "getDestObjectMethod": "getAuthorPerson",
                    "setDestObjectMethod": "setAuthorPerson",
                    "clearDestObjectMethod": "clearAuthorPerson"
                },
                "editorPerson": {
                    "relationId": "_editorPerson",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "editorPerson",
                    "plural": "editorPeople",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadEditorPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfEditorPeople",
                    "createDestObjectMethod": "createEditorPerson",
                    "getDestObjectMethod": "getEditorPerson",
                    "setDestObjectMethod": "setEditorPerson",
                    "clearDestObjectMethod": "clearEditorPerson"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "publish",
            "table": "#__publish",
            "subsystemPrefixes": [],
            "single": "publish",
            "plural": "publish",
            "className": "Child_Publish",
            "singleCaption": "Publish",
            "pluralCaption": "Publish",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Publish_ImplMapper",
            "parentStorageClassName": "Sample_Publish_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "published",
                "deleted",
                "publishUp",
                "publishDown",
                "authorId",
                "editorId",
                "pubChannelId"
            ],
            "mapperVars": [],
            "titleProp": "pubChannelId",
            "publishedProp": "published",
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkPubAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPubAuthor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "author",
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPubAuthor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPubAuthor",
                    "caption": "People",
                    "varName": "authorPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__publish",
                        "fkPubAuthor"
                    ]
                },
                "_rel_fkPubEditor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPubEditor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "editor",
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPubEditor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkPubEditor",
                    "caption": "People",
                    "varName": "editorPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__publish",
                        "fkPubEditor"
                    ]
                },
                "_rel_fkPostPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__person_posts",
                        "fkPostPublish"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person_Post",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Post_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__person_posts",
                            "fkPostPublish"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPostPublish",
                    "caption": "Person post",
                    "varName": "personPost",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "personPosts",
                    "_rel": [
                        "#__person_posts",
                        "fkPostPublish"
                    ]
                },
                "_rel_fkCategoryPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Category",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Category_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_categories",
                            "fkCategoryPublish"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkCategoryPublish",
                    "caption": "Shop category",
                    "varName": "shopCategory",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopCategories",
                    "_rel": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ]
                },
                "_rel_fkPersonPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_products",
                            "fkPersonPublish"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPersonPublish",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "id"
                    ]
                },
                "sharedObjectType": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "sharedObjectType",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "50",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "sharedObjectType",
                    "caption": "Shared Object Type",
                    "varName": "sharedObjectType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "sharedObjectType"
                    ]
                },
                "published": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "published",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 1,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "published",
                    "caption": "Published",
                    "varName": "published",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "published"
                    ]
                },
                "deleted": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "deleted",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "deleted",
                    "caption": "Deleted",
                    "varName": "deleted",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "deleted"
                    ]
                },
                "publishUp": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "publishUp",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "publishUp",
                    "caption": "Publish Up",
                    "varName": "publishUp",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "publishUp"
                    ]
                },
                "publishDown": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "publishDown",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "publishDown",
                    "caption": "Publish Down",
                    "varName": "publishDown",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "publishDown"
                    ]
                },
                "authorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "authorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "authorId",
                    "caption": "Author Id",
                    "varName": "authorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "authorId"
                    ]
                },
                "editorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "editorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "editorId",
                    "caption": "Editor Id",
                    "varName": "editorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "editorId"
                    ]
                },
                "pubChannelId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubChannelId",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubChannelId",
                    "caption": "Pub Channel Id",
                    "varName": "pubChannelId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "pubChannelId"
                    ]
                },
                "dateCreated": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "dateCreated",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "dateCreated",
                    "caption": "Date Created",
                    "varName": "dateCreated",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "dateCreated"
                    ]
                },
                "dateModified": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "dateModified",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "dateModified",
                    "caption": "Date Modified",
                    "varName": "dateModified",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "dateModified"
                    ]
                },
                "dateDeleted": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "dateDeleted",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "0000-00-00 00:00:00",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "dateDeleted",
                    "caption": "Date Deleted",
                    "varName": "dateDeleted",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__publish",
                        "dateDeleted"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPubAuthor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPubEditor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__person_posts",
                        "fkPostPublish"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "relationTypes": {
            "__class": "Ac_Cg_Model",
            "name": "relationTypes",
            "table": "#__relation_types",
            "subsystemPrefixes": [],
            "single": "relationType",
            "plural": "relationTypes",
            "className": "Child_Relation_Type",
            "singleCaption": "Relation type",
            "pluralCaption": "Relation types",
            "parentClassName": "Sample_Relation_Type",
            "parentMapperClassName": "Sample_Relation_Type_Mapper",
            "parentStorageClassName": "Sample_Relation_Type_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_relations_3": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Relation",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Relation_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__relations",
                            "FK_ac_relations_3"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_3",
                    "caption": "Relations",
                    "varName": "relations",
                    "pluralForList": "relations",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "relations",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ]
                },
                "relationTypeId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationTypeId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationTypeId",
                    "caption": "Relation Type Id",
                    "varName": "relationTypeId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relation_types",
                        "relationTypeId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relation_types",
                        "title"
                    ]
                },
                "isSymmetrical": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "isSymmetrical",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "isSymmetrical",
                    "caption": "Is Symmetrical",
                    "varName": "isSymmetrical",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relation_types",
                        "isSymmetrical"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "relations": {
            "__class": "Ac_Cg_Model",
            "name": "relations",
            "table": "#__relations",
            "subsystemPrefixes": [],
            "single": "relation",
            "plural": "relations",
            "className": "Child_Relation",
            "singleCaption": "Relation",
            "pluralCaption": "Relations",
            "parentClassName": "Sample_Relation",
            "parentMapperClassName": "Sample_Relation_Mapper",
            "parentStorageClassName": "Sample_Relation_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "relationBegin",
                "relationEnd"
            ],
            "mapperVars": [],
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_relations_3": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_relations_3",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Relation_Type",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Relation_Type_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_relations_3",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_3",
                    "caption": "Relation type",
                    "varName": "relationType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "relationTypes",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_3"
                    ]
                },
                "_rel_FK_ac_relations_incoming": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_relations_incoming",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "incoming",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_relations_incoming",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_incoming",
                    "caption": "People",
                    "varName": "incomingPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_incoming"
                    ]
                },
                "_rel_FK_ac_relations_outgoing": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "FK_ac_relations_outgoing",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "outgoing",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "FK_ac_relations_outgoing",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_relations_outgoing",
                    "caption": "People",
                    "varName": "outgoingPerson",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__relations",
                        "FK_ac_relations_outgoing"
                    ]
                },
                "relationId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationId",
                    "caption": "Relation Id",
                    "varName": "relationId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationId"
                    ]
                },
                "personId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "personId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "personId",
                    "caption": "Person Id",
                    "varName": "personId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "personId"
                    ]
                },
                "otherPersonId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "otherPersonId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "otherPersonId",
                    "caption": "Other Person Id",
                    "varName": "otherPersonId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "otherPersonId"
                    ]
                },
                "relationTypeId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationTypeId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Relation_Type_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationTypeId",
                    "caption": "Relation Type Id",
                    "varName": "relationTypeId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationTypeId"
                    ]
                },
                "relationBegin": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationBegin",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationBegin",
                    "caption": "Relation Begin",
                    "varName": "relationBegin",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationBegin"
                    ]
                },
                "relationEnd": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "relationEnd",
                    "dataType": "dateTime",
                    "controlType": "dateInput",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "relationEnd",
                    "caption": "Relation End",
                    "varName": "relationEnd",
                    "pluralForList": false,
                    "extraPropertyInfo": {
                        "internalDateFormat": "Y-m-d H:i:s",
                        "outputDateFormat": "Y-m-d H:i:s"
                    },
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "relationEnd"
                    ]
                },
                "notes": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "notes",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "notes",
                    "caption": "Notes",
                    "varName": "notes",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__relations",
                        "notes"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_relations_3",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_relations_incoming",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "FK_ac_relations_outgoing",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "religion": {
            "__class": "Ac_Cg_Model",
            "name": "religion",
            "table": "#__religion",
            "subsystemPrefixes": [],
            "single": "religion",
            "plural": "religion",
            "className": "Child_Religion",
            "singleCaption": "Religion",
            "pluralCaption": "Religion",
            "parentClassName": "Sample_Religion",
            "parentMapperClassName": "Sample_Religion_Mapper",
            "parentStorageClassName": "Sample_Religion_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_person_religion": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people",
                        "FK_ac_person_religion"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people",
                            "FK_ac_person_religion"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_person_religion",
                    "caption": "People",
                    "varName": "people",
                    "pluralForList": "people",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__people",
                        "FK_ac_person_religion"
                    ]
                },
                "religionId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "religionId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "religionId",
                    "caption": "Religion Id",
                    "varName": "religionId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__religion",
                        "religionId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__religion",
                        "title"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people",
                        "FK_ac_person_religion"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopCategories": {
            "__class": "Ac_Cg_Model",
            "name": "shopCategories",
            "table": "#__shop_categories",
            "subsystemPrefixes": [],
            "single": "shopCategory",
            "plural": "shopCategories",
            "className": "Child_Shop_Category",
            "singleCaption": "Shop category",
            "pluralCaption": "Shop categories",
            "parentClassName": "Sample_Shop_Category",
            "parentMapperClassName": "Sample_Shop_Category_Mapper",
            "parentStorageClassName": "Sample_Shop_Category_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "title",
                "parentId",
                "metaId",
                "pubId"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": "ordering",
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "publish": {
                    "class": "Child_Publish_MapperMixable",
                    "colMap": {
                        "id": "pubId"
                    }
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkCategoryPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkCategoryPublish",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkCategoryPublish",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkCategoryPublish",
                    "caption": "Publish",
                    "varName": "publish",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "publish",
                    "_rel": [
                        "#__shop_categories",
                        "fkCategoryPublish"
                    ]
                },
                "_rel_fkProductCategoryCategory": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ],
                    "otherRelation": "fkProductCategoryProduct",
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_categories",
                            "fkProductCategoryCategory"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkProductCategoryProduct",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductCategoryCategory",
                    "caption": "Shop products",
                    "varName": "shopProducts",
                    "pluralForList": "shopProducts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ],
                    "_otherRel": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "id"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "title"
                    ]
                },
                "leftCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "leftCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "leftCol",
                    "caption": "Left Col",
                    "varName": "leftCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "leftCol"
                    ]
                },
                "rightCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "rightCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "rightCol",
                    "caption": "Right Col",
                    "varName": "rightCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "rightCol"
                    ]
                },
                "ignore": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ignore",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ignore",
                    "caption": "Ignore",
                    "varName": "ignore",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "ignore"
                    ]
                },
                "parentId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "parentId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "parentId",
                    "caption": "Parent Id",
                    "varName": "parentId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "parentId"
                    ]
                },
                "ordering": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ordering",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ordering",
                    "caption": "Ordering",
                    "varName": "ordering",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "ordering"
                    ]
                },
                "depth": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "depth",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "depth",
                    "caption": "Depth",
                    "varName": "depth",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "depth"
                    ]
                },
                "metaId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "metaId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "metaId",
                    "caption": "Meta Id",
                    "varName": "metaId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "metaId"
                    ]
                },
                "pubId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Publish_ImplMapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubId",
                    "caption": "Pub Id",
                    "varName": "pubId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_categories",
                        "pubId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkCategoryPublish",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkProductCategoryProduct",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopClassifier": {
            "__class": "Ac_Cg_Model",
            "name": "shopClassifier",
            "table": "#__shop_classifier",
            "subsystemPrefixes": [],
            "single": "shopClassifier",
            "plural": "shopClassifier",
            "className": "Child_Shop_Classifier",
            "singleCaption": "Shop classifier",
            "pluralCaption": "Shop classifier",
            "parentClassName": "Sample_Shop_Classifier",
            "parentMapperClassName": "Sample_Shop_Classifier_Mapper",
            "parentStorageClassName": "Sample_Shop_Classifier_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkClassifierType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkClassifierType",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Classifier_Type",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Classifier_Type_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkClassifierType",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkClassifierType",
                    "caption": "Shop classifier type",
                    "varName": "shopClassifierType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopClassifierType",
                    "_rel": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ]
                },
                "_rel_fkMonitorMatrixType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "monitor",
                    "canLoadSrc": true,
                    "canLoadDest": false,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_monitor",
                            "fkMonitorMatrixType"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkMonitorMatrixType",
                    "caption": "Shop specs",
                    "varName": "monitorShopSpecs",
                    "pluralForList": "monitorShopSpecs",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier",
                        "id"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier",
                        "title"
                    ]
                },
                "type": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "type",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": "16",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Classifier_Type_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "type",
                    "caption": "Type",
                    "varName": "type",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier",
                        "type"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkClassifierType",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopClassifierType": {
            "__class": "Ac_Cg_Model",
            "name": "shopClassifierType",
            "table": "#__shop_classifier_type",
            "subsystemPrefixes": [],
            "single": "shopClassifierType",
            "plural": "shopClassifierType",
            "className": "Child_Shop_Classifier_Type",
            "singleCaption": "Shop classifier type",
            "pluralCaption": "Shop classifier type",
            "parentClassName": "Sample_Shop_Classifier_Type",
            "parentMapperClassName": "Sample_Shop_Classifier_Type_Mapper",
            "parentStorageClassName": "Sample_Shop_Classifier_Type_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "type",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkClassifierType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Classifier",
                    "thisIsUnique": true,
                    "otherIsUnique": false,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Classifier_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_classifier",
                            "fkClassifierType"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkClassifierType",
                    "caption": "Shop classifier",
                    "varName": "shopClassifier",
                    "pluralForList": "shopClassifier",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopClassifier",
                    "_rel": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ]
                },
                "type": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "type",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "16",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "type",
                    "caption": "Type",
                    "varName": "type",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_classifier_type",
                        "type"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_classifier",
                        "fkClassifierType"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopProductExtraCodes": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkExtraCodeProduct"
            ],
            "skipMapperMixables": [],
            "masterProperties": {
                "fkExtraCodeProduct": "_rel_fkExtraCodeProduct"
            },
            "isReferenced": false,
            "parentExtraTableClass": "Sample_Shop_Product_Extra_Code_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_person": {
                    "srcMapperClass": "Child_Shop_Product_Extra_Code_ImplMapper",
                    "destMapperClass": "Child_Person_Mapper",
                    "srcVarName": "_person",
                    "destVarName": "_extraCodeShopProducts",
                    "destCountVarName": "_extraCodeShopProductsCount",
                    "destLoadedVarName": "_extraCodeShopProductsLoaded",
                    "fieldLinks": {
                        "responsiblePersonId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "person": {
                    "relationId": "_person",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "person",
                    "plural": "people",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfPeople",
                    "createDestObjectMethod": "createPerson",
                    "getDestObjectMethod": "getPerson",
                    "setDestObjectMethod": "setPerson",
                    "clearDestObjectMethod": "clearPerson"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopProductExtraCodes",
            "table": "#__shop_product_extraCodes",
            "subsystemPrefixes": [],
            "single": "shopProductExtraCode",
            "plural": "shopProductExtraCodes",
            "className": "Child_Shop_Product_Extra_Code",
            "singleCaption": "Shop product extra code",
            "pluralCaption": "Shop product extra codes",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Shop_Product_Extra_Code_ImplMapper",
            "parentStorageClassName": "Sample_Shop_Product_Extra_Code_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "responsiblePersonId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": "ean",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__shop_product_extraCodes",
                    "uniformTypeId": "Child_Shop_Product_Mapper"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "shopProducts",
            "_properties": {
                "_rel_fkExtraCodeProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkExtraCodeProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkExtraCodeProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkExtraCodeProduct",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ]
                },
                "_rel_fkExtraCodeResponsiblePerson": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkExtraCodeResponsiblePerson",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkExtraCodeResponsiblePerson",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkExtraCodeResponsiblePerson",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeResponsiblePerson"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "productId"
                    ]
                },
                "ean": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ean",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ean",
                    "caption": "Ean",
                    "varName": "ean",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "ean"
                    ]
                },
                "asin": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "asin",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "asin",
                    "caption": "Asin",
                    "varName": "asin",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "asin"
                    ]
                },
                "gtin": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "gtin",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "gtin",
                    "caption": "Gtin",
                    "varName": "gtin",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "gtin"
                    ]
                },
                "responsiblePersonId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "responsiblePersonId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "responsiblePersonId",
                    "caption": "Responsible Person Id",
                    "varName": "responsiblePersonId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_extraCodes",
                        "responsiblePersonId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkExtraCodeProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkExtraCodeResponsiblePerson",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopProductNotes": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkProductNoteProduct"
            ],
            "skipMapperMixables": [],
            "masterProperties": {
                "fkProductNoteProduct": "_rel_fkProductNoteProduct"
            },
            "isReferenced": false,
            "parentExtraTableClass": "Sample_Shop_Product_Note_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_person": {
                    "srcMapperClass": "Child_Shop_Product_Note_ImplMapper",
                    "destMapperClass": "Child_Person_Mapper",
                    "srcVarName": "_person",
                    "destVarName": "_noteShopProducts",
                    "destCountVarName": "_noteShopProductsCount",
                    "destLoadedVarName": "_noteShopProductsLoaded",
                    "fieldLinks": {
                        "noteAuthorId": "personId"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "person": {
                    "relationId": "_person",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "person",
                    "plural": "people",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadPeopleFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfPeople",
                    "createDestObjectMethod": "createPerson",
                    "getDestObjectMethod": "getPerson",
                    "setDestObjectMethod": "setPerson",
                    "clearDestObjectMethod": "clearPerson"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": true,
            "name": "shopProductNotes",
            "table": "#__shop_product_notes",
            "subsystemPrefixes": [],
            "single": "shopProductNote",
            "plural": "shopProductNotes",
            "className": "Child_Shop_Product_Note",
            "singleCaption": "Shop product note",
            "pluralCaption": "Shop product notes",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Shop_Product_Note_ImplMapper",
            "parentStorageClassName": "Sample_Shop_Product_Note_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "noteAuthorId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__shop_product_notes",
                    "uniformTypeId": "Child_Shop_Product_Mapper"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "shopProducts",
            "_properties": {
                "_rel_fkProductNoteAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkProductNoteAuthor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkProductNoteAuthor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductNoteAuthor",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ]
                },
                "_rel_fkProductNoteProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkProductNoteProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkProductNoteProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkProductNoteProduct",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "11",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "productId"
                    ]
                },
                "note": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "note",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "note",
                    "caption": "Note",
                    "varName": "note",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "note"
                    ]
                },
                "noteAuthorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "noteAuthorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "noteAuthorId",
                    "caption": "Note Author Id",
                    "varName": "noteAuthorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "noteAuthorId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkProductNoteAuthor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkProductNoteProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopProducts": {
            "__class": "Ac_Cg_Model",
            "name": "shopProducts",
            "table": "#__shop_products",
            "subsystemPrefixes": [],
            "single": "shopProduct",
            "plural": "shopProducts",
            "className": "Child_Shop_Product",
            "singleCaption": "Shop product",
            "pluralCaption": "Shop products",
            "parentClassName": "Sample_Shop_Product",
            "parentMapperClassName": "Sample_Shop_Product_Mapper",
            "parentStorageClassName": "Sample_Shop_Product_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "metaId",
                "pubId"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "publish": {
                    "class": "Child_Publish_MapperMixable",
                    "colMap": {
                        "id": "pubId"
                    }
                },
                "extraCode": {
                    "class": "Child_Shop_Product_Extra_Code_MapperMixable",
                    "colMap": {
                        "productId": "id"
                    }
                },
                "note": {
                    "class": "Child_Shop_Product_Note_MapperMixable",
                    "colMap": {
                        "productId": "id"
                    }
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_fkPersonPublish": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkPersonPublish",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Publish",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Publish_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkPersonPublish",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkPersonPublish",
                    "caption": "Publish",
                    "varName": "publish",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "publish",
                    "_rel": [
                        "#__shop_products",
                        "fkPersonPublish"
                    ]
                },
                "_rel_fkProductCategoryProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ],
                    "otherRelation": "fkProductCategoryCategory",
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Category",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Category_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_categories",
                            "fkProductCategoryProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkProductCategoryCategory",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkProductCategoryProduct",
                    "caption": "Shop categories",
                    "varName": "shopCategories",
                    "pluralForList": "shopCategories",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopCategories",
                    "_rel": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ],
                    "_otherRel": [
                        "#__shop_product_categories",
                        "fkProductCategoryCategory"
                    ]
                },
                "_rel_fkExtraCodeProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product_Extra_Code",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Extra_Code_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_extraCodes",
                            "fkExtraCodeProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkExtraCodeProduct",
                    "caption": "Shop product extra code",
                    "varName": "shopProductExtraCode",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProductExtraCodes",
                    "_rel": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ]
                },
                "_rel_fkProductNoteProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product_Note",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Note_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_notes",
                            "fkProductNoteProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkProductNoteProduct",
                    "caption": "Shop product note",
                    "varName": "shopProductNote",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopProductNotes",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ]
                },
                "_rel_relatedProductReferenced": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ],
                    "otherRelation": "relatedProductReferencing",
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "referenced",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_related",
                            "relatedProductReferenced"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "relatedProductReferencing",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_relatedProductReferenced",
                    "caption": "Shop products",
                    "varName": "referencedShopProducts",
                    "pluralForList": "referencedShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ],
                    "_otherRel": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ]
                },
                "_rel_relatedProductReferencing": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ],
                    "otherRelation": "relatedProductReferenced",
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": "referencing",
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_product_related",
                            "relatedProductReferencing"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "relatedProductReferenced",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_relatedProductReferencing",
                    "caption": "Shop products",
                    "varName": "referencingShopProducts",
                    "pluralForList": "referencingShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ],
                    "_otherRel": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ]
                },
                "_rel_specsProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_specs",
                        "specsProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_specs",
                            "specsProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_specsProduct",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_specs",
                        "specsProduct"
                    ]
                },
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "id"
                    ]
                },
                "sku": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "sku",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "sku",
                    "caption": "Sku",
                    "varName": "sku",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "sku"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "title"
                    ]
                },
                "metaId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "metaId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "metaId",
                    "caption": "Meta Id",
                    "varName": "metaId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "metaId"
                    ]
                },
                "pubId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "pubId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Publish_ImplMapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "pubId",
                    "caption": "Pub Id",
                    "varName": "pubId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_products",
                        "pubId"
                    ]
                },
                "_rel_fkProductNoteAuthor": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkProductNoteAuthor",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkProductNoteAuthor",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": false,
                        "createAssociationObject": false
                    },
                    "enabled": true,
                    "name": "_rel_fkProductNoteAuthor",
                    "caption": "People",
                    "varName": "person",
                    "pluralForList": "noteShopProducts",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__shop_product_notes",
                        "fkProductNoteAuthor"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "11",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "productId"
                    ]
                },
                "note": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "note",
                    "dataType": false,
                    "controlType": "textArea",
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "note",
                    "caption": "Note",
                    "varName": "note",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "note"
                    ]
                },
                "noteAuthorId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "noteAuthorId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Person_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "noteAuthorId",
                    "caption": "Note Author Id",
                    "varName": "noteAuthorId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_product_notes",
                        "noteAuthorId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkPersonPublish",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_categories",
                        "fkProductCategoryProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkProductCategoryCategory",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_extraCodes",
                        "fkExtraCodeProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_notes",
                        "fkProductNoteProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_related",
                        "relatedProductReferenced"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "relatedProductReferencing",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_product_related",
                        "relatedProductReferencing"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "relatedProductReferenced",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_specs",
                        "specsProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkProductNoteAuthor",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": false,
                    "createAssociationObject": false
                }
            ]
        },
        "shopSpecComputer": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkMonitorSpec"
            ],
            "skipMapperMixables": true,
            "masterProperties": [],
            "isReferenced": true,
            "parentExtraTableClass": "Sample_Shop_Spec_Computer_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopSpec": {
                    "srcMapperClass": "Child_Shop_Spec_Computer_ImplMapper",
                    "destMapperClass": "Child_Shop_Spec_Mapper",
                    "srcVarName": "_shopSpec",
                    "fieldLinks": {
                        "productId": "productId"
                    },
                    "srcIsUnique": true,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopSpec": {
                    "relationId": "_shopSpec",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopSpec",
                    "plural": "shopSpecs",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopSpecsFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopSpecs",
                    "createDestObjectMethod": "createShopSpec",
                    "getDestObjectMethod": "getShopSpec",
                    "setDestObjectMethod": "setShopSpec",
                    "clearDestObjectMethod": "clearShopSpec"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecComputer",
            "table": "#__shop_spec_computer",
            "subsystemPrefixes": [],
            "single": "shopSpecComputer",
            "plural": "shopSpecComputer",
            "className": "Child_Shop_Spec_Computer",
            "singleCaption": "Shop spec computer",
            "pluralCaption": "Shop spec computer",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Shop_Spec_Computer_ImplMapper",
            "parentStorageClassName": "Sample_Shop_Spec_Computer_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "os",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": {
                "masterFkIds": [
                    {
                        "notFound": "Property specified by foreign key 'fkMonitorSpec' not found"
                    }
                ]
            },
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkSpecsComputer": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkSpecsComputer",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkSpecsComputer",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkSpecsComputer",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "productId"
                    ]
                },
                "hdd": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "hdd",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "hdd",
                    "caption": "Hdd",
                    "varName": "hdd",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "hdd"
                    ]
                },
                "ram": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ram",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ram",
                    "caption": "Ram",
                    "varName": "ram",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "ram"
                    ]
                },
                "os": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "os",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "os",
                    "caption": "Os",
                    "varName": "os",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_computer",
                        "os"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkSpecsComputer",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecFood": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [],
            "skipMapperMixables": true,
            "masterProperties": [],
            "isReferenced": true,
            "parentExtraTableClass": "Sample_Shop_Spec_Food_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopSpec": {
                    "srcMapperClass": "Child_Shop_Spec_Food_ImplMapper",
                    "destMapperClass": "Child_Shop_Spec_Mapper",
                    "srcVarName": "_shopSpec",
                    "fieldLinks": {
                        "productId": "productId"
                    },
                    "srcIsUnique": true,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopSpec": {
                    "relationId": "_shopSpec",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopSpec",
                    "plural": "shopSpecs",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopSpecsFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopSpecs",
                    "createDestObjectMethod": "createShopSpec",
                    "getDestObjectMethod": "getShopSpec",
                    "setDestObjectMethod": "setShopSpec",
                    "clearDestObjectMethod": "clearShopSpec"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecFood",
            "table": "#__shop_spec_food",
            "subsystemPrefixes": [],
            "single": "shopSpecFood",
            "plural": "shopSpecFood",
            "className": "Child_Shop_Spec_Food",
            "singleCaption": "Shop spec food",
            "pluralCaption": "Shop spec food",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Shop_Spec_Food_ImplMapper",
            "parentStorageClassName": "Sample_Shop_Spec_Food_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "storageType"
            ],
            "mapperVars": [],
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkSpecsFood": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkSpecsFood",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkSpecsFood",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkSpecsFood",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "productId"
                    ]
                },
                "storageType": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "storageType",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": false,
                    "valueList": {
                        "shelfStable": "shelfStable",
                        "frozen": "frozen",
                        "refrigerated": "refrigerated"
                    },
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "shelfStable",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "storageType",
                    "caption": "Storage Type",
                    "varName": "storageType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "storageType"
                    ]
                },
                "storageTerm": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "storageTerm",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "3",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "storageTerm",
                    "caption": "Storage Term",
                    "varName": "storageTerm",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "storageTerm"
                    ]
                },
                "storageTermUnit": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "storageTermUnit",
                    "dataType": false,
                    "controlType": "selectList",
                    "maxLength": false,
                    "valueList": {
                        "days": "days",
                        "months": "months",
                        "years": "years"
                    },
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "days",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "storageTermUnit",
                    "caption": "Storage Term Unit",
                    "varName": "storageTermUnit",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_food",
                        "storageTermUnit"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkSpecsFood",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecLaptop": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkMonitorSpec"
            ],
            "skipMapperMixables": true,
            "masterProperties": [],
            "isReferenced": true,
            "parentExtraTableClass": "Sample_Shop_Spec_Laptop_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopSpec": {
                    "srcMapperClass": "Child_Shop_Spec_Laptop_ImplMapper",
                    "destMapperClass": "Child_Shop_Spec_Mapper",
                    "srcVarName": "_shopSpec",
                    "fieldLinks": {
                        "productId": "productId"
                    },
                    "srcIsUnique": true,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopSpec": {
                    "relationId": "_shopSpec",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopSpec",
                    "plural": "shopSpecs",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopSpecsFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopSpecs",
                    "createDestObjectMethod": "createShopSpec",
                    "getDestObjectMethod": "getShopSpec",
                    "setDestObjectMethod": "setShopSpec",
                    "clearDestObjectMethod": "clearShopSpec"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecLaptop",
            "table": "#__shop_spec_laptop",
            "subsystemPrefixes": [],
            "single": "shopSpecLaptop",
            "plural": "shopSpecLaptop",
            "className": "Child_Shop_Spec_Laptop",
            "singleCaption": "Shop spec laptop",
            "pluralCaption": "Shop spec laptop",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Shop_Spec_Laptop_ImplMapper",
            "parentStorageClassName": "Sample_Shop_Spec_Laptop_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "battery",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": {
                "masterFkIds": [
                    {
                        "notFound": "Property specified by foreign key 'fkMonitorSpec' not found"
                    }
                ]
            },
            "warnings": [],
            "masterModelName": "",
            "_properties": {
                "_rel_fkSpecLaptopProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkSpecLaptopProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkSpecLaptopProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkSpecLaptopProduct",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_laptop",
                        "productId"
                    ]
                },
                "weight": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "weight",
                    "dataType": "float",
                    "controlType": false,
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "weight",
                    "caption": "Weight",
                    "varName": "weight",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_laptop",
                        "weight"
                    ]
                },
                "battery": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "battery",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "battery",
                    "caption": "Battery",
                    "varName": "battery",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_laptop",
                        "battery"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkSpecLaptopProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecMonitor": {
            "__class": "Ac_Cg_Model_Part",
            "masterFkIds": [
                "fkMonitorSpec"
            ],
            "skipMapperMixables": true,
            "masterProperties": {
                "fkMonitorSpec": "_rel_fkMonitorSpec"
            },
            "isReferenced": false,
            "parentExtraTableClass": "Sample_Shop_Spec_Monitor_MapperMixable",
            "parentExtraTableIsAbstract": false,
            "extraRelationPrototypes": {
                "_shopClassifier": {
                    "srcMapperClass": "Child_Shop_Spec_Monitor_ImplMapper",
                    "destMapperClass": "Child_Shop_Classifier_Mapper",
                    "srcVarName": "_shopClassifier",
                    "destVarName": "_monitorShopSpecs",
                    "destCountVarName": "_monitorShopSpecsCount",
                    "destLoadedVarName": "_monitorShopSpecsLoaded",
                    "fieldLinks": {
                        "matrixTypeId": "id"
                    },
                    "srcIsUnique": false,
                    "destIsUnique": true,
                    "srcOutgoing": true
                }
            },
            "extraAssociationPrototypes": {
                "shopClassifier": {
                    "relationId": "_shopClassifier",
                    "useMapperMethods": true,
                    "useModelMethods": true,
                    "single": "shopClassifier",
                    "plural": "shopClassifier",
                    "canLoadSrcObjects": false,
                    "class": "Ac_Model_Association_One",
                    "loadDestObjectsMapperMethod": "loadShopClassifierFor",
                    "loadSrcObjectsMapperMethod": null,
                    "getSrcObjectsMapperMethod": "getOfShopClassifier",
                    "createDestObjectMethod": "createShopClassifier",
                    "getDestObjectMethod": "getShopClassifier",
                    "setDestObjectMethod": "setShopClassifier",
                    "clearDestObjectMethod": "clearShopClassifier"
                }
            },
            "mixableId": false,
            "objectPropertiesPrefix": false,
            "mapperMixableExtra": [],
            "perModelMapperMixableExtras": [],
            "objectTypeField": false,
            "inline": false,
            "name": "shopSpecMonitor",
            "table": "#__shop_spec_monitor",
            "subsystemPrefixes": [],
            "single": "shopSpecMonitor",
            "plural": "shopSpecMonitor",
            "className": "Child_Shop_Spec_Monitor",
            "singleCaption": "Shop spec monitor",
            "pluralCaption": "Shop spec monitor",
            "parentClassName": "Ac_Model_Mixable_ExtraTable",
            "parentMapperClassName": "Sample_Shop_Spec_Monitor_ImplMapper",
            "parentStorageClassName": "Sample_Shop_Spec_Monitor_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "matrixTypeId"
            ],
            "mapperVars": {
                "identifierField": {
                    "visibility": "protected",
                    "default": null,
                    "comment": "",
                    "name": "foo",
                    "__class": "Ac_Cg_Member"
                }
            },
            "titleProp": false,
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": {
                "Ac_Model_Typer_Abstract": {
                    "class": "Ac_Model_Typer_ExtraTable",
                    "tableName": "#__shop_spec_monitor",
                    "uniformTypeId": "Child_Shop_Spec_Mapper"
                }
            },
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "masterModelName": "shopSpecs",
            "_properties": {
                "_rel_fkMonitorMatrixType": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkMonitorMatrixType",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Classifier",
                    "thisIsUnique": false,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": false,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Classifier_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkMonitorMatrixType",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkMonitorMatrixType",
                    "caption": "Shop classifier",
                    "varName": "shopClassifier",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopClassifier",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorMatrixType"
                    ]
                },
                "_rel_fkMonitorSpec": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "fkMonitorSpec",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "fkMonitorSpec",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkMonitorSpec",
                    "caption": "Shop spec",
                    "varName": "shopSpec",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecs",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Spec_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "productId"
                    ]
                },
                "diagonal": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "diagonal",
                    "dataType": "float",
                    "controlType": false,
                    "maxLength": false,
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "diagonal",
                    "caption": "Diagonal",
                    "varName": "diagonal",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "diagonal"
                    ]
                },
                "hRes": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "hRes",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "5",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "hRes",
                    "caption": "H Res",
                    "varName": "hRes",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "hRes"
                    ]
                },
                "vRes": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "vRes",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "5",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "vRes",
                    "caption": "V Res",
                    "varName": "vRes",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "vRes"
                    ]
                },
                "matrixTypeId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "matrixTypeId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Classifier_Mapper"
                    },
                    "dummyCaption": {
                        "__class": "Ac_Cg_Php_Expression",
                        "expression": "''",
                        "key": false,
                        "comment": false,
                        "exportValue": false
                    },
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "matrixTypeId",
                    "caption": "Matrix Type Id",
                    "varName": "matrixTypeId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_spec_monitor",
                        "matrixTypeId"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkMonitorMatrixType",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "fkMonitorSpec",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "shopSpecs": {
            "__class": "Ac_Cg_Model",
            "name": "shopSpecs",
            "table": "#__shop_specs",
            "subsystemPrefixes": [],
            "single": "shopSpec",
            "plural": "shopSpecs",
            "className": "Child_Shop_Spec",
            "singleCaption": "Shop spec",
            "pluralCaption": "Shop specs",
            "parentClassName": "Sample_Shop_Spec",
            "parentMapperClassName": "Sample_Shop_Spec_Mapper",
            "parentStorageClassName": "Sample_Shop_Spec_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [],
            "mapperVars": [],
            "titleProp": "detailsUrl",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_specsProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": false,
                    "relation": "specsProduct",
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Product",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Product_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": "specsProduct",
                        "hasModel": true,
                        "isIncoming": false,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_specsProduct",
                    "caption": "Shop product",
                    "varName": "shopProduct",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "shopProducts",
                    "_rel": [
                        "#__shop_specs",
                        "specsProduct"
                    ]
                },
                "_rel_fkSpecsComputer": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec_Computer",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Computer_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_computer",
                            "fkSpecsComputer"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkSpecsComputer",
                    "caption": "Shop spec computer",
                    "varName": "shopSpecComputer",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecComputer",
                    "_rel": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ]
                },
                "_rel_fkSpecsFood": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec_Food",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Food_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_food",
                            "fkSpecsFood"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkSpecsFood",
                    "caption": "Shop spec food",
                    "varName": "shopSpecFood",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecFood",
                    "_rel": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ]
                },
                "_rel_fkSpecLaptopProduct": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec_Laptop",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Laptop_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_laptop",
                            "fkSpecLaptopProduct"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkSpecLaptopProduct",
                    "caption": "Shop spec laptop",
                    "varName": "shopSpecLaptop",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecLaptop",
                    "_rel": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ]
                },
                "_rel_fkMonitorSpec": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ],
                    "otherRelation": false,
                    "isOtherIncoming": false,
                    "className": "Child_Shop_Spec_Monitor",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Shop_Spec_Monitor_ImplMapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__shop_spec_monitor",
                            "fkMonitorSpec"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": false,
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": false,
                    "name": "_rel_fkMonitorSpec",
                    "caption": "Shop spec monitor",
                    "varName": "shopSpecMonitor",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": false,
                    "ignoreInDescendants": true,
                    "_other": "shopSpecMonitor",
                    "_rel": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ]
                },
                "productId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "productId",
                    "dataType": "int",
                    "controlType": "selectList",
                    "maxLength": "10",
                    "valueList": false,
                    "values": {
                        "class": "Ac_Model_Values_Mapper",
                        "mapperClass": "Child_Shop_Product_Mapper"
                    },
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "productId",
                    "caption": "Product Id",
                    "varName": "productId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_specs",
                        "productId"
                    ]
                },
                "detailsUrl": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "detailsUrl",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "detailsUrl",
                    "caption": "Details Url",
                    "varName": "detailsUrl",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_specs",
                        "detailsUrl"
                    ]
                },
                "specsType": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "specsType",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "40",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "specsType",
                    "caption": "Specs Type",
                    "varName": "specsType",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__shop_specs",
                        "specsType"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": "specsProduct",
                    "hasModel": true,
                    "isIncoming": false,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_computer",
                        "fkSpecsComputer"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_food",
                        "fkSpecsFood"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_laptop",
                        "fkSpecLaptopProduct"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__shop_spec_monitor",
                        "fkMonitorSpec"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": false,
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "tags": {
            "__class": "Ac_Cg_Model",
            "name": "tags",
            "table": "#__tags",
            "subsystemPrefixes": [],
            "single": "tag",
            "plural": "tags",
            "className": "Child_Tag",
            "singleCaption": "Tag",
            "pluralCaption": "Tags",
            "parentClassName": "Sample_Tag",
            "parentMapperClassName": "Sample_Tag_Mapper",
            "parentStorageClassName": "Sample_Tag_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "titleM",
                "titleF"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "_rel_FK_ac_people_tags_2": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ],
                    "otherRelation": "FK_ac_people_tags_1",
                    "isOtherIncoming": false,
                    "className": "Child_Person",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Person_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__people_tags",
                            "FK_ac_people_tags_2"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "FK_ac_people_tags_1",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_FK_ac_people_tags_2",
                    "caption": "People",
                    "varName": "people",
                    "pluralForList": "people",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "people",
                    "_rel": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ],
                    "_otherRel": [
                        "#__people_tags",
                        "FK_ac_people_tags_1"
                    ]
                },
                "_rel_fkTagId": {
                    "__class": "Ac_Cg_Property_Object",
                    "isPrivateVar": true,
                    "isIncoming": true,
                    "relation": [
                        "#__tag_perks",
                        "fkTagId"
                    ],
                    "otherRelation": "fkPerkId",
                    "isOtherIncoming": false,
                    "className": "Child_Perk",
                    "thisIsUnique": true,
                    "otherIsUnique": true,
                    "idrSuffixSingle": "",
                    "idrSuffixPlural": "",
                    "otherModelIdInMethodsSingle": false,
                    "otherModelIdInMethodsPlural": false,
                    "otherModelIdInMethodsPrefix": false,
                    "canLoadSrc": true,
                    "canLoadDest": true,
                    "canCreateDest": true,
                    "mapperClass": "Child_Perk_Mapper",
                    "relationOverrides": [],
                    "associationOverrides": [],
                    "relationProviderOverrides": [],
                    "modelRelation": {
                        "__class": "Ac_Cg_Model_Relation",
                        "relationName": [
                            "#__tag_perks",
                            "fkTagId"
                        ],
                        "hasModel": true,
                        "isIncoming": true,
                        "otherRelationName": "fkPerkId",
                        "isOtherRelationIncoming": false,
                        "createRelationObject": true,
                        "createAssociationObject": true
                    },
                    "enabled": true,
                    "name": "_rel_fkTagId",
                    "caption": "Perks",
                    "varName": "perks",
                    "pluralForList": "perks",
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_other": "perks",
                    "_rel": [
                        "#__tag_perks",
                        "fkTagId"
                    ],
                    "_otherRel": [
                        "#__tag_perks",
                        "fkPerkId"
                    ]
                },
                "tagId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tagId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tagId",
                    "caption": "Tag Id",
                    "varName": "tagId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "tagId"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "title"
                    ]
                },
                "titleM": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "titleM",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "titleM",
                    "caption": "TitleM",
                    "varName": "titleM",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "titleM"
                    ]
                },
                "titleF": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "titleF",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "45",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "titleF",
                    "caption": "TitleF",
                    "varName": "titleF",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tags",
                        "titleF"
                    ]
                }
            },
            "_relations": [
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__people_tags",
                        "FK_ac_people_tags_2"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "FK_ac_people_tags_1",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                },
                {
                    "__class": "Ac_Cg_Model_Relation",
                    "relationName": [
                        "#__tag_perks",
                        "fkTagId"
                    ],
                    "hasModel": true,
                    "isIncoming": true,
                    "otherRelationName": "fkPerkId",
                    "isOtherRelationIncoming": false,
                    "createRelationObject": true,
                    "createAssociationObject": true
                }
            ]
        },
        "treeAdjacent": {
            "__class": "Ac_Cg_Model",
            "name": "treeAdjacent",
            "table": "#__tree_adjacent",
            "subsystemPrefixes": [],
            "single": "treeAdjacent",
            "plural": "treeAdjacent",
            "className": "Child_Tree_Adjacent",
            "singleCaption": "Tree adjacent",
            "pluralCaption": "Tree adjacent",
            "parentClassName": "Sample_Tree_Adjacent",
            "parentMapperClassName": "Sample_Tree_Adjacent_Mapper",
            "parentStorageClassName": "Sample_Tree_Adjacent_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "parentId",
                "tag"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": "ordering",
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "id"
                    ]
                },
                "parentId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "parentId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "parentId",
                    "caption": "Parent Id",
                    "varName": "parentId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "parentId"
                    ]
                },
                "ordering": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ordering",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ordering",
                    "caption": "Ordering",
                    "varName": "ordering",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "ordering"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "title"
                    ]
                },
                "tag": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tag",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tag",
                    "caption": "Tag",
                    "varName": "tag",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_adjacent",
                        "tag"
                    ]
                }
            }
        },
        "treeCombos": {
            "__class": "Ac_Cg_Model",
            "name": "treeCombos",
            "table": "#__tree_combos",
            "subsystemPrefixes": [],
            "single": "treeCombo",
            "plural": "treeCombos",
            "className": "Child_Tree_Combo",
            "singleCaption": "Tree combo",
            "pluralCaption": "Tree combos",
            "parentClassName": "Sample_Tree_Combo",
            "parentMapperClassName": "Sample_Tree_Combo_Mapper",
            "parentStorageClassName": "Sample_Tree_Combo_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "parentId",
                "tag"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": "ordering",
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "id"
                    ]
                },
                "leftCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "leftCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "leftCol",
                    "caption": "Left Col",
                    "varName": "leftCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "leftCol"
                    ]
                },
                "rightCol": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "rightCol",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 1,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "rightCol",
                    "caption": "Right Col",
                    "varName": "rightCol",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "rightCol"
                    ]
                },
                "parentId": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "parentId",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "parentId",
                    "caption": "Parent Id",
                    "varName": "parentId",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "parentId"
                    ]
                },
                "ordering": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ordering",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ordering",
                    "caption": "Ordering",
                    "varName": "ordering",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "ordering"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "title"
                    ]
                },
                "tag": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tag",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tag",
                    "caption": "Tag",
                    "varName": "tag",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "tag"
                    ]
                },
                "ignore": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "ignore",
                    "dataType": "bool",
                    "controlType": "selectList",
                    "maxLength": "1",
                    "valueList": [
                        "No",
                        "Yes"
                    ],
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "ignore",
                    "caption": "Ignore",
                    "varName": "ignore",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "ignore"
                    ]
                },
                "depth": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "depth",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": 0,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "depth",
                    "caption": "Depth",
                    "varName": "depth",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_combos",
                        "depth"
                    ]
                }
            }
        },
        "treeRecords": {
            "__class": "Ac_Cg_Model",
            "name": "treeRecords",
            "table": "#__tree_records",
            "subsystemPrefixes": [],
            "single": "treeRecord",
            "plural": "treeRecords",
            "className": "Child_Tree_Record",
            "singleCaption": "Tree record",
            "pluralCaption": "Tree records",
            "parentClassName": "Sample_Tree_Record",
            "parentMapperClassName": "Sample_Tree_Record_Mapper",
            "parentStorageClassName": "Sample_Tree_Record_Storage",
            "parentClassIsAbstract": false,
            "parentMapperIsAbstract": false,
            "parentStorageIsAbstract": false,
            "parentFinderClassName": false,
            "parentFinderClassIsAbstract": false,
            "properties": [],
            "fixMapperMethodNames": false,
            "extraOwnPropertiesInfo": [],
            "useLangStrings": "?",
            "langStringPrefix": false,
            "tableLangStringPrefix": false,
            "createAccessors": false,
            "nullableColumns": [
                "tag"
            ],
            "mapperVars": [],
            "titleProp": "title",
            "publishedProp": false,
            "orderingProp": false,
            "orderGroupProp": false,
            "useIndexNamesInMapper": false,
            "uiListBaseClass": "Ac_Page_List",
            "uiFormBaseClass": "Ac_Page_Form",
            "generateMethodPlaceholders": true,
            "hasUniformPropertiesInfo": true,
            "altDomainPrefix": false,
            "modelCoreMixables": [],
            "mapperCoreMixables": [],
            "parentModelName": false,
            "onlyColumns": false,
            "ignoreColumns": [],
            "onlyRelations": false,
            "ignoreRelations": [],
            "errors": [],
            "warnings": [],
            "_properties": {
                "id": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "id",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "10",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "id",
                    "caption": "Id",
                    "varName": "id",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_records",
                        "id"
                    ]
                },
                "title": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "title",
                    "dataType": false,
                    "controlType": false,
                    "maxLength": "255",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": "",
                    "extraPropInfo": [],
                    "attribs": [],
                    "isNullable": false,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "title",
                    "caption": "Title",
                    "varName": "title",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_records",
                        "title"
                    ]
                },
                "tag": {
                    "__class": "Ac_Cg_Property_Simple",
                    "colName": "tag",
                    "dataType": "int",
                    "controlType": false,
                    "maxLength": "11",
                    "valueList": false,
                    "values": false,
                    "dummyCaption": false,
                    "isRte": false,
                    "required": false,
                    "default": null,
                    "extraPropInfo": [],
                    "attribs": {
                        "size": "6"
                    },
                    "isNullable": true,
                    "enabled": true,
                    "isPrivateVar": false,
                    "name": "tag",
                    "caption": "Tag",
                    "varName": "tag",
                    "pluralForList": false,
                    "extraPropertyInfo": [],
                    "inherited": true,
                    "ignoreInDescendants": false,
                    "_col": [
                        "#__tree_records",
                        "tag"
                    ]
                }
            }
        }
    },
    "models": []
}<?php

class Child_Person extends Child_Person_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Person_Base_Object extends Sample_Person {

    
    var $_mapperClass = 'Child_Person_Mapper';
    
    /**
     * @var Child_Person_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'portraitPersonPhoto' => [
                'className' => 'Child_Person_Photo',
                'mapperClass' => 'Child_Person_Photo_Mapper',
                'caption' => 'Person photo',
            ],
            'religion' => [
                'className' => 'Child_Religion',
                'mapperClass' => 'Child_Religion_Mapper',
                'caption' => 'Religion',
            ],
            'tags' => [
                'className' => 'Child_Tag',
                'mapperClass' => 'Child_Tag_Mapper',
                'caption' => 'Tags',
            ],
            'tagIds' => [
                'values' => [
                    'mapperClass' => 'Child_Tag_Mapper',
                ],
            ],
            'personAlbums' => [
                'className' => 'Child_Person_Album',
                'mapperClass' => 'Child_Person_Album_Mapper',
                'caption' => 'Person albums',
            ],
            'personPhotos' => [
                'className' => 'Child_Person_Photo',
                'mapperClass' => 'Child_Person_Photo_Mapper',
                'caption' => 'Person photos',
            ],
            'personPosts' => [
                'className' => 'Child_Person_Post',
                'mapperClass' => 'Child_Person_Post_Mapper',
                'caption' => 'Person posts',
            ],
            'incomingRelations' => [
                'className' => 'Child_Relation',
                'mapperClass' => 'Child_Relation_Mapper',
                'otherModelIdInMethodsPrefix' => 'incoming',
                'caption' => 'Relations',
            ],
            'outgoingRelations' => [
                'className' => 'Child_Relation',
                'mapperClass' => 'Child_Relation_Mapper',
                'otherModelIdInMethodsPrefix' => 'outgoing',
                'caption' => 'Relations',
            ],
            'extraCodeShopProducts' => [
                'className' => 'Child_Shop_Product',
                'mapperClass' => 'Child_Shop_Product_Mapper',
                'caption' => 'Shop products',
            ],
            'noteShopProducts' => [
                'className' => 'Child_Shop_Product',
                'mapperClass' => 'Child_Shop_Product_Mapper',
                'caption' => 'Shop products',
            ],
            'personId' => [
                'caption' => 'Person Id',
            ],
            'name' => [
                'caption' => 'Name',
            ],
            'gender' => [
                'caption' => 'Gender',
            ],
            'isSingle' => [
                'caption' => 'Is Single',
            ],
            'birthDate' => [
                'caption' => 'Birth Date',
            ],
            'lastUpdatedDatetime' => [
                'caption' => 'Last Updated Datetime',
            ],
            'createdTs' => [
                'caption' => 'Created Ts',
            ],
            'religionId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Religion_Mapper',
                ],
                'caption' => 'Religion Id',
            ],
            'portraitId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Person_Photo_Mapper',
                ],
                'caption' => 'Portrait Id',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person_Photo 
     */
    function getPortraitPersonPhoto() {
        return parent::getPortraitPersonPhoto();
    }
    
    /**
     * @param Child_Person_Photo $portraitPersonPhoto 
     */
    function setPortraitPersonPhoto($portraitPersonPhoto) {
        if ($portraitPersonPhoto && !is_a($portraitPersonPhoto, 'Child_Person_Photo')) 
            trigger_error('$portraitPersonPhoto must be an instance of Child_Person_Photo', E_USER_ERROR);
        return parent::setPortraitPersonPhoto($portraitPersonPhoto);
    }
    
    /**
     * @return Child_Person_Photo  
     */
    function createPortraitPersonPhoto($values = array()) {
        return parent::createPortraitPersonPhoto($values);
    }

    
        
    
    /**
     * @return Child_Religion 
     */
    function getReligion() {
        return parent::getReligion();
    }
    
    /**
     * @param Child_Religion $religion 
     */
    function setReligion($religion) {
        if ($religion && !is_a($religion, 'Child_Religion')) 
            trigger_error('$religion must be an instance of Child_Religion', E_USER_ERROR);
        return parent::setReligion($religion);
    }
    
    /**
     * @return Child_Religion  
     */
    function createReligion($values = array()) {
        return parent::createReligion($values);
    }

    
        
    
    /**
     * @return Child_Tag 
     */
    function getTag($id) {
        return parent::getTag($id);
    }
    
    /**
     * @return Child_Tag 
     */
    function getTagsItem($id) {
        return parent::getTagsItem($id);
    }
    
    /**
     * @param Child_Tag $tag 
     */
    function addTag($tag) {
        if (!is_a($tag, 'Child_Tag'))
            trigger_error('$tag must be an instance of Child_Tag', E_USER_ERROR);
        return parent::addTag($tag);
    }
    
    /**
     * @return Child_Tag  
     */
    function createTag($values = array()) {
        return parent::createTag($values);
    }

    

        
    
    /**
     * @return Child_Person_Album 
     */
    function getPersonAlbum($id) {
        return parent::getPersonAlbum($id);
    }
    
    /**
     * @return Child_Person_Album 
     */
    function getPersonAlbumsItem($id) {
        return parent::getPersonAlbumsItem($id);
    }
    
    /**
     * @param Child_Person_Album $personAlbum 
     */
    function addPersonAlbum($personAlbum) {
        if (!is_a($personAlbum, 'Child_Person_Album'))
            trigger_error('$personAlbum must be an instance of Child_Person_Album', E_USER_ERROR);
        return parent::addPersonAlbum($personAlbum);
    }
    
    /**
     * @return Child_Person_Album  
     */
    function createPersonAlbum($values = array()) {
        return parent::createPersonAlbum($values);
    }

    

        
    
    /**
     * @return Child_Person_Photo 
     */
    function getPersonPhoto($id) {
        return parent::getPersonPhoto($id);
    }
    
    /**
     * @return Child_Person_Photo 
     */
    function getPersonPhotosItem($id) {
        return parent::getPersonPhotosItem($id);
    }
    
    /**
     * @param Child_Person_Photo $personPhoto 
     */
    function addPersonPhoto($personPhoto) {
        if (!is_a($personPhoto, 'Child_Person_Photo'))
            trigger_error('$personPhoto must be an instance of Child_Person_Photo', E_USER_ERROR);
        return parent::addPersonPhoto($personPhoto);
    }
    
    /**
     * @return Child_Person_Photo  
     */
    function createPersonPhoto($values = array()) {
        return parent::createPersonPhoto($values);
    }

    

        
    
    /**
     * @return Child_Person_Post 
     */
    function getPersonPost($id) {
        return parent::getPersonPost($id);
    }
    
    /**
     * @return Child_Person_Post 
     */
    function getPersonPostsItem($id) {
        return parent::getPersonPostsItem($id);
    }
    
    /**
     * @param Child_Person_Post $personPost 
     */
    function addPersonPost($personPost) {
        if (!is_a($personPost, 'Child_Person_Post'))
            trigger_error('$personPost must be an instance of Child_Person_Post', E_USER_ERROR);
        return parent::addPersonPost($personPost);
    }
    
    /**
     * @return Child_Person_Post  
     */
    function createPersonPost($values = array()) {
        return parent::createPersonPost($values);
    }

    

        
    
    /**
     * @return Child_Relation 
     */
    function getIncomingRelation($id) {
        return parent::getIncomingRelation($id);
    }
    
    /**
     * @return Child_Relation 
     */
    function getIncomingRelationsItem($id) {
        return parent::getIncomingRelationsItem($id);
    }
    
    /**
     * @param Child_Relation $incomingRelation 
     */
    function addIncomingRelation($incomingRelation) {
        if (!is_a($incomingRelation, 'Child_Relation'))
            trigger_error('$incomingRelation must be an instance of Child_Relation', E_USER_ERROR);
        return parent::addIncomingRelation($incomingRelation);
    }
    
    /**
     * @return Child_Relation  
     */
    function createIncomingRelation($values = array()) {
        return parent::createIncomingRelation($values);
    }

    

        
    
    /**
     * @return Child_Relation 
     */
    function getOutgoingRelation($id) {
        return parent::getOutgoingRelation($id);
    }
    
    /**
     * @return Child_Relation 
     */
    function getOutgoingRelationsItem($id) {
        return parent::getOutgoingRelationsItem($id);
    }
    
    /**
     * @param Child_Relation $outgoingRelation 
     */
    function addOutgoingRelation($outgoingRelation) {
        if (!is_a($outgoingRelation, 'Child_Relation'))
            trigger_error('$outgoingRelation must be an instance of Child_Relation', E_USER_ERROR);
        return parent::addOutgoingRelation($outgoingRelation);
    }
    
    /**
     * @return Child_Relation  
     */
    function createOutgoingRelation($values = array()) {
        return parent::createOutgoingRelation($values);
    }

    

        
    
    /**
     * @return Child_Shop_Product 
     */
    function getExtraCodeShopProduct($id) {
        return parent::getExtraCodeShopProduct($id);
    }
    
    /**
     * @return Child_Shop_Product 
     */
    function getExtraCodeShopProductsItem($id) {
        return parent::getExtraCodeShopProductsItem($id);
    }
    
    /**
     * @param Child_Shop_Product $extraCodeShopProduct 
     */
    function addExtraCodeShopProduct($extraCodeShopProduct) {
        if (!is_a($extraCodeShopProduct, 'Child_Shop_Product'))
            trigger_error('$extraCodeShopProduct must be an instance of Child_Shop_Product', E_USER_ERROR);
        return parent::addExtraCodeShopProduct($extraCodeShopProduct);
    }
    
    /**
     * @return Child_Shop_Product  
     */
    function createExtraCodeShopProduct($values = array()) {
        return parent::createExtraCodeShopProduct($values);
    }

    

        
    
    /**
     * @return Child_Shop_Product 
     */
    function getNoteShopProduct($id) {
        return parent::getNoteShopProduct($id);
    }
    
    /**
     * @return Child_Shop_Product 
     */
    function getNoteShopProductsItem($id) {
        return parent::getNoteShopProductsItem($id);
    }
    
    /**
     * @param Child_Shop_Product $noteShopProduct 
     */
    function addNoteShopProduct($noteShopProduct) {
        if (!is_a($noteShopProduct, 'Child_Shop_Product'))
            trigger_error('$noteShopProduct must be an instance of Child_Shop_Product', E_USER_ERROR);
        return parent::addNoteShopProduct($noteShopProduct);
    }
    
    /**
     * @return Child_Shop_Product  
     */
    function createNoteShopProduct($values = array()) {
        return parent::createNoteShopProduct($values);
    }

    

  
    
}

<?php

class Child_Person_Mapper extends Child_Person_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Person_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Person[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Person_Base_Mapper extends Sample_Person_Mapper {

    var $recordClass = 'Child_Person';

    var $id = 'Child_Person_Mapper';

    var $storage = 'Child_Person_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Person 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Person_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Person 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Person 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Person 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Person 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Person[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Person[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Person     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Person     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Person[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Person[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'name';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_portraitPersonPhoto' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Person_Photo_Mapper',
            ],
            '_religion' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Religion_Mapper',
            ],
            '_tags' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Tag_Mapper',
            ],
            '_personAlbums' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Person_Album_Mapper',
            ],
            '_personPhotos' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Person_Photo_Mapper',
            ],
            '_personPosts' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Person_Post_Mapper',
            ],
            '_incomingRelations' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Relation_Mapper',
                'destVarName' => '_incomingPerson',
            ],
            '_outgoingRelations' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Relation_Mapper',
                'destVarName' => '_outgoingPerson',
            ],
            '_extraCodeShopProducts' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Shop_Product_Mapper',
            ],
            '_noteShopProducts' => [
                'srcMapperClass' => 'Child_Person_Mapper',
                'destMapperClass' => 'Child_Shop_Product_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'People',
                'pluralCaption' => 'People',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Person 
     */
    function loadByPersonId ($personId) {
        $res = parent::loadByPersonId($personId);
        return $res;
    }
    
}

<?php

class Child_Person_Storage extends Child_Person_Base_Storage {
  

}
<?php

class Child_Person_Base_Storage extends Sample_Person_Storage {

    var $recordClass = 'Child_Person'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'tagIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfPerson',
                        'midDestKey' => 'idOfTag',
                        'tableKey' => 'tagId',
                        'midTableAlias' => 'mid__tags',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Perk extends Child_Perk_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Perk_Base_Object extends Sample_Perk {

    
    var $_mapperClass = 'Child_Perk_Mapper';
    
    /**
     * @var Child_Perk_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Perk_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'tags' => [
                'className' => 'Child_Tag',
                'mapperClass' => 'Child_Tag_Mapper',
                'caption' => 'Tags',
            ],
            'tagIds' => [
                'values' => [
                    'mapperClass' => 'Child_Tag_Mapper',
                ],
            ],
            'perkId' => [
                'caption' => 'Perk Id',
            ],
            'name' => [
                'caption' => 'Name',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Tag 
     */
    function getTag($id) {
        return parent::getTag($id);
    }
    
    /**
     * @return Child_Tag 
     */
    function getTagsItem($id) {
        return parent::getTagsItem($id);
    }
    
    /**
     * @param Child_Tag $tag 
     */
    function addTag($tag) {
        if (!is_a($tag, 'Child_Tag'))
            trigger_error('$tag must be an instance of Child_Tag', E_USER_ERROR);
        return parent::addTag($tag);
    }
    
    /**
     * @return Child_Tag  
     */
    function createTag($values = array()) {
        return parent::createTag($values);
    }

    

  
    
}

<?php

class Child_Perk_Mapper extends Child_Perk_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Perk_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Perk[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Perk_Base_Mapper extends Sample_Perk_Mapper {

    var $recordClass = 'Child_Perk';

    var $id = 'Child_Perk_Mapper';

    var $storage = 'Child_Perk_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Perk 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Perk_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Perk 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Perk 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Perk 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Perk 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Perk 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Perk[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Perk[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Perk     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Perk     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Perk[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Perk[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'name';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_tags' => [
                'srcMapperClass' => 'Child_Perk_Mapper',
                'destMapperClass' => 'Child_Tag_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Perk',
                'pluralCaption' => 'Perks',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Perk 
     */
    function loadByPerkId ($perkId) {
        $res = parent::loadByPerkId($perkId);
        return $res;
    }
    
}

<?php

class Child_Perk_Storage extends Child_Perk_Base_Storage {
  

}
<?php

class Child_Perk_Base_Storage extends Sample_Perk_Storage {

    var $recordClass = 'Child_Perk'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'tagIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfPerk',
                        'midDestKey' => 'idOfTag',
                        'tableKey' => 'tagId',
                        'midTableAlias' => 'mid__tags',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Person_Album extends Child_Person_Album_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Person_Album_Base_Object extends Sample_Person_Album {

    
    var $_mapperClass = 'Child_Person_Album_Mapper';
    
    /**
     * @var Child_Person_Album_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Album_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'person' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'personPhotos' => [
                'className' => 'Child_Person_Photo',
                'mapperClass' => 'Child_Person_Photo_Mapper',
                'caption' => 'Person photos',
            ],
            'personPhotoIds' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Photo_Mapper',
                ],
            ],
            'albumId' => [
                'caption' => 'Album Id',
            ],
            'personId' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'caption' => 'Person Id',
            ],
            'albumName' => [
                'caption' => 'Album Name',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson() {
        return parent::getPerson();
    }
    
    /**
     * @param Child_Person $person 
     */
    function setPerson($person) {
        if ($person && !is_a($person, 'Child_Person')) 
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::setPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    
        
    
    /**
     * @return Child_Person_Photo 
     */
    function getPersonPhoto($id) {
        return parent::getPersonPhoto($id);
    }
    
    /**
     * @return Child_Person_Photo 
     */
    function getPersonPhotosItem($id) {
        return parent::getPersonPhotosItem($id);
    }
    
    /**
     * @param Child_Person_Photo $personPhoto 
     */
    function addPersonPhoto($personPhoto) {
        if (!is_a($personPhoto, 'Child_Person_Photo'))
            trigger_error('$personPhoto must be an instance of Child_Person_Photo', E_USER_ERROR);
        return parent::addPersonPhoto($personPhoto);
    }
    
    /**
     * @return Child_Person_Photo  
     */
    function createPersonPhoto($values = array()) {
        return parent::createPersonPhoto($values);
    }

    

  
    
}

<?php

class Child_Person_Album_Mapper extends Child_Person_Album_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Person_Album_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Person_Album[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Person_Album_Base_Mapper extends Sample_Person_Album_Mapper {

    var $recordClass = 'Child_Person_Album';

    var $id = 'Child_Person_Album_Mapper';

    var $storage = 'Child_Person_Album_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Person_Album 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Person_Album_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Album 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Person_Album 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Person_Album 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Person_Album 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Person_Album 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Person_Album[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Person_Album[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Person_Album     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Person_Album     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Person_Album[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Person_Album[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'albumName';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Child_Person_Album_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_personPhotos' => [
                'srcMapperClass' => 'Child_Person_Album_Mapper',
                'destMapperClass' => 'Child_Person_Photo_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Person album',
                'pluralCaption' => 'Person albums',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Person_Album 
     */
    function loadByAlbumId ($albumId) {
        $res = parent::loadByAlbumId($albumId);
        return $res;
    }
    
}

<?php

class Child_Person_Album_Storage extends Child_Person_Album_Base_Storage {
  

}
<?php

class Child_Person_Album_Base_Storage extends Sample_Person_Album_Storage {

    var $recordClass = 'Child_Person_Album'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'personPhotoIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Omni',
                        'midSrcKeys' => [
                            0 => 'personId',
                            1 => 'albumId',
                        ],
                        'midDestKeys' => [
                            0 => 'personId',
                            1 => 'photoId',
                        ],
                        'tableKeys' => [
                            0 => 'personId',
                            1 => 'photoId',
                        ],
                        'midTableAlias' => 'mid__personPhotos',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Person_Photo extends Child_Person_Photo_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Person_Photo_Base_Object extends Sample_Person_Photo {

    
    var $_mapperClass = 'Child_Person_Photo_Mapper';
    
    /**
     * @var Child_Person_Photo_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Photo_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'person' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'personAlbums' => [
                'className' => 'Child_Person_Album',
                'mapperClass' => 'Child_Person_Album_Mapper',
                'caption' => 'Person albums',
            ],
            'personAlbumIds' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Album_Mapper',
                ],
            ],
            'portraitPerson' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'personPosts' => [
                'className' => 'Child_Person_Post',
                'mapperClass' => 'Child_Person_Post_Mapper',
                'caption' => 'Person posts',
            ],
            'photoId' => [
                'caption' => 'Photo Id',
            ],
            'personId' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'caption' => 'Person Id',
            ],
            'filename' => [
                'caption' => 'Filename',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson() {
        return parent::getPerson();
    }
    
    /**
     * @param Child_Person $person 
     */
    function setPerson($person) {
        if ($person && !is_a($person, 'Child_Person')) 
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::setPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    
        
    
    /**
     * @return Child_Person_Album 
     */
    function getPersonAlbum($id) {
        return parent::getPersonAlbum($id);
    }
    
    /**
     * @return Child_Person_Album 
     */
    function getPersonAlbumsItem($id) {
        return parent::getPersonAlbumsItem($id);
    }
    
    /**
     * @param Child_Person_Album $personAlbum 
     */
    function addPersonAlbum($personAlbum) {
        if (!is_a($personAlbum, 'Child_Person_Album'))
            trigger_error('$personAlbum must be an instance of Child_Person_Album', E_USER_ERROR);
        return parent::addPersonAlbum($personAlbum);
    }
    
    /**
     * @return Child_Person_Album  
     */
    function createPersonAlbum($values = array()) {
        return parent::createPersonAlbum($values);
    }

    

        
    
    /**
     * @return Child_Person 
     */
    function getPortraitPerson() {
        return parent::getPortraitPerson();
    }
    
    /**
     * @param Child_Person $portraitPerson 
     */
    function setPortraitPerson($portraitPerson) {
        if ($portraitPerson && !is_a($portraitPerson, 'Child_Person')) 
            trigger_error('$portraitPerson must be an instance of Child_Person', E_USER_ERROR);
        return parent::setPortraitPerson($portraitPerson);
    }
    
    /**
     * @return Child_Person  
     */
    function createPortraitPerson($values = array()) {
        return parent::createPortraitPerson($values);
    }

    
        
    
    /**
     * @return Child_Person_Post 
     */
    function getPersonPost($id) {
        return parent::getPersonPost($id);
    }
    
    /**
     * @return Child_Person_Post 
     */
    function getPersonPostsItem($id) {
        return parent::getPersonPostsItem($id);
    }
    
    /**
     * @param Child_Person_Post $personPost 
     */
    function addPersonPost($personPost) {
        if (!is_a($personPost, 'Child_Person_Post'))
            trigger_error('$personPost must be an instance of Child_Person_Post', E_USER_ERROR);
        return parent::addPersonPost($personPost);
    }
    
    /**
     * @return Child_Person_Post  
     */
    function createPersonPost($values = array()) {
        return parent::createPersonPost($values);
    }

    

  
    
}

<?php

class Child_Person_Photo_Mapper extends Child_Person_Photo_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Person_Photo_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Person_Photo[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Person_Photo_Base_Mapper extends Sample_Person_Photo_Mapper {

    var $recordClass = 'Child_Person_Photo';

    var $id = 'Child_Person_Photo_Mapper';

    var $storage = 'Child_Person_Photo_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Person_Photo 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Person_Photo_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Photo 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Person_Photo 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Person_Photo 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Person_Photo 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Person_Photo 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Person_Photo[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Person_Photo[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Person_Photo     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Person_Photo     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Person_Photo[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Person_Photo[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'filename';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Child_Person_Photo_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_personAlbums' => [
                'srcMapperClass' => 'Child_Person_Photo_Mapper',
                'destMapperClass' => 'Child_Person_Album_Mapper',
            ],
            '_portraitPerson' => [
                'srcMapperClass' => 'Child_Person_Photo_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_personPosts' => [
                'srcMapperClass' => 'Child_Person_Photo_Mapper',
                'destMapperClass' => 'Child_Person_Post_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Person photo',
                'pluralCaption' => 'Person photos',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Person_Photo 
     */
    function loadByPhotoId ($photoId) {
        $res = parent::loadByPhotoId($photoId);
        return $res;
    }
    
}

<?php

class Child_Person_Photo_Storage extends Child_Person_Photo_Base_Storage {
  

}
<?php

class Child_Person_Photo_Base_Storage extends Sample_Person_Photo_Storage {

    var $recordClass = 'Child_Person_Photo'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'personAlbumIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Omni',
                        'midSrcKeys' => [
                            0 => 'personId',
                            1 => 'photoId',
                        ],
                        'midDestKeys' => [
                            0 => 'personId',
                            1 => 'albumId',
                        ],
                        'tableKeys' => [
                            0 => 'personId',
                            1 => 'albumId',
                        ],
                        'midTableAlias' => 'mid__personAlbums',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Person_Post extends Child_Person_Post_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Person_Post_Base_Object extends Sample_Person_Post {

    
    var $_mapperClass = 'Child_Person_Post_Mapper';
    
    /**
     * @var Child_Person_Post_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Post_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'publish' => [
                'className' => 'Child_Publish',
                'mapperClass' => 'Child_Publish_ImplMapper',
                'caption' => 'Publish',
            ],
            'person' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'personPhoto' => [
                'className' => 'Child_Person_Photo',
                'mapperClass' => 'Child_Person_Photo_Mapper',
                'caption' => 'Person photo',
            ],
            'id' => [
                'caption' => 'Id',
            ],
            'personId' => [
                'caption' => 'Person Id',
            ],
            'photoId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Person_Photo_Mapper',
                ],
                'caption' => 'Photo Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'content' => [
                'caption' => 'Content',
            ],
            'pubId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Publish_ImplMapper',
                ],
                'caption' => 'Pub Id',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Publish 
     */
    function getPublish() {
        return parent::getPublish();
    }
    
    /**
     * @param Child_Publish $publish 
     */
    function setPublish($publish) {
        if ($publish && !is_a($publish, 'Child_Publish')) 
            trigger_error('$publish must be an instance of Child_Publish', E_USER_ERROR);
        return parent::setPublish($publish);
    }
    
    /**
     * @return Child_Publish  
     */
    function createPublish($values = array()) {
        return parent::createPublish($values);
    }

    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson() {
        return parent::getPerson();
    }
    
    /**
     * @param Child_Person $person 
     */
    function setPerson($person) {
        if ($person && !is_a($person, 'Child_Person')) 
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::setPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    
        
    
    /**
     * @return Child_Person_Photo 
     */
    function getPersonPhoto() {
        return parent::getPersonPhoto();
    }
    
    /**
     * @param Child_Person_Photo $personPhoto 
     */
    function setPersonPhoto($personPhoto) {
        if ($personPhoto && !is_a($personPhoto, 'Child_Person_Photo')) 
            trigger_error('$personPhoto must be an instance of Child_Person_Photo', E_USER_ERROR);
        return parent::setPersonPhoto($personPhoto);
    }
    
    /**
     * @return Child_Person_Photo  
     */
    function createPersonPhoto($values = array()) {
        return parent::createPersonPhoto($values);
    }

    
  
    
}

<?php

class Child_Person_Post_Mapper extends Child_Person_Post_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Person_Post_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Person_Post[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Person_Post_Base_Mapper extends Sample_Person_Post_Mapper {

    var $recordClass = 'Child_Person_Post';

    var $id = 'Child_Person_Post_Mapper';

    var $storage = 'Child_Person_Post_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'publish' => [
                'class' => 'Child_Publish_MapperMixable',
            ],
        ]);
    }
    
 
    /**
     * @return Child_Person_Post 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Person_Post_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Person_Post 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Person_Post 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Person_Post 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Person_Post 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Person_Post 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Person_Post[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Person_Post[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Person_Post     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Person_Post     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Person_Post[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Person_Post[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_publish' => [
                'srcMapperClass' => 'Child_Person_Post_Mapper',
                'destMapperClass' => 'Child_Publish_ImplMapper',
            ],
            '_person' => [
                'srcMapperClass' => 'Child_Person_Post_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_personPhoto' => [
                'srcMapperClass' => 'Child_Person_Post_Mapper',
                'destMapperClass' => 'Child_Person_Photo_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Person post',
                'pluralCaption' => 'Person posts',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Person_Post 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }

    /**
     * @return Child_Person_Post 
     */
    function loadByPubId ($pubId) {
        $res = parent::loadByPubId($pubId);
        return $res;
    }
    
}

<?php

class Child_Person_Post_Storage extends Child_Person_Post_Base_Storage {
  

}
<?php

class Child_Person_Post_Base_Storage extends Sample_Person_Post_Storage {

    var $recordClass = 'Child_Person_Post'; 
 
    
}

<?php

class Child_Publish extends Child_Publish_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Publish_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    protected $preserveMetaCache = true;
    
    /**
     * @var Child_Publish_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Child_Publish';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), []);
    }
    
    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'authorPerson' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'editorPerson' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'id' => [
                'caption' => 'Id',
            ],
            'sharedObjectType' => [
                'caption' => 'Shared Object Type',
            ],
            'published' => [
                'caption' => 'Published',
            ],
            'deleted' => [
                'caption' => 'Deleted',
            ],
            'publishUp' => [
                'caption' => 'Publish Up',
            ],
            'publishDown' => [
                'caption' => 'Publish Down',
            ],
            'authorId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'caption' => 'Author Id',
            ],
            'editorId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'caption' => 'Editor Id',
            ],
            'pubChannelId' => [
                'caption' => 'Pub Channel Id',
            ],
            'dateCreated' => [
                'caption' => 'Date Created',
            ],
            'dateModified' => [
                'caption' => 'Date Modified',
            ],
            'dateDeleted' => [
                'caption' => 'Date Deleted',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person 
     */
    function getAuthorPerson() {
        return parent::getAuthorPerson();
    }
    
    /**
     * @param Child_Person $authorPerson 
     */
    function setAuthorPerson($authorPerson) {
        if ($authorPerson && !is_a($authorPerson, 'Child_Person')) 
            trigger_error('$authorPerson must be an instance of Child_Person', E_USER_ERROR);
        return parent::setAuthorPerson($authorPerson);
    }
    
    /**
     * @return Child_Person  
     */
    function createAuthorPerson($values = array()) {
        return parent::createAuthorPerson($values);
    }

    
        
    
    /**
     * @return Child_Person 
     */
    function getEditorPerson() {
        return parent::getEditorPerson();
    }
    
    /**
     * @param Child_Person $editorPerson 
     */
    function setEditorPerson($editorPerson) {
        if ($editorPerson && !is_a($editorPerson, 'Child_Person')) 
            trigger_error('$editorPerson must be an instance of Child_Person', E_USER_ERROR);
        return parent::setEditorPerson($editorPerson);
    }
    
    /**
     * @return Child_Person  
     */
    function createEditorPerson($values = array()) {
        return parent::createEditorPerson($values);
    }

    
  
    
}

<?php

class Child_Publish_ImplMapper extends Child_Publish_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Publish_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Publish[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Publish_Base_ImplMapper extends Sample_Publish_ImplMapper {

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Publish_ImplMapper';

    var $storage = 'Child_Publish_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Publish 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Publish_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Publish 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Publish 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Publish 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Publish 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Publish 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Publish[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Publish[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Publish     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Publish     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Publish[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Publish[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'pubChannelId';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_authorPerson' => [
                'srcMapperClass' => 'Child_Publish_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_editorPerson' => [
                'srcMapperClass' => 'Child_Publish_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Publish',
                'pluralCaption' => 'Publish',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Publish 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }

    /**
     * @return Child_Publish 
     */
    function loadByPubChannelId ($pubChannelId) {
        $res = parent::loadByPubChannelId($pubChannelId);
        return $res;
    }
    
}

<?php

class Child_Publish_Storage extends Child_Publish_Base_Storage {
  

}
<?php

class Child_Publish_Base_Storage extends Sample_Publish_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Publish_MapperMixable extends Child_Publish_Base_ExtraTable {
    
}

<?php 

class Child_Publish_Base_ExtraTable extends Sample_Publish_MapperMixable {

    protected $modelMixable = 'Child_Publish';
    
    protected $implMapper = 'Child_Publish_ImplMapper';
    
    protected $modelMixableId = 'Child_Publish';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_authorPerson' => [
                'srcMapperClass' => 'Child_Publish_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_editorPerson' => [
                'srcMapperClass' => 'Child_Publish_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Relation_Type extends Child_Relation_Type_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Relation_Type_Base_Object extends Sample_Relation_Type {

    
    var $_mapperClass = 'Child_Relation_Type_Mapper';
    
    /**
     * @var Child_Relation_Type_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Relation_Type_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'relations' => [
                'className' => 'Child_Relation',
                'mapperClass' => 'Child_Relation_Mapper',
                'caption' => 'Relations',
            ],
            'relationTypeId' => [
                'caption' => 'Relation Type Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'isSymmetrical' => [
                'caption' => 'Is Symmetrical',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Relation 
     */
    function getRelation($id) {
        return parent::getRelation($id);
    }
    
    /**
     * @return Child_Relation 
     */
    function getRelationsItem($id) {
        return parent::getRelationsItem($id);
    }
    
    /**
     * @param Child_Relation $relation 
     */
    function addRelation($relation) {
        if (!is_a($relation, 'Child_Relation'))
            trigger_error('$relation must be an instance of Child_Relation', E_USER_ERROR);
        return parent::addRelation($relation);
    }
    
    /**
     * @return Child_Relation  
     */
    function createRelation($values = array()) {
        return parent::createRelation($values);
    }

    

  
    
}

<?php

class Child_Relation_Type_Mapper extends Child_Relation_Type_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Relation_Type_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Relation_Type[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Relation_Type_Base_Mapper extends Sample_Relation_Type_Mapper {

    var $recordClass = 'Child_Relation_Type';

    var $id = 'Child_Relation_Type_Mapper';

    var $storage = 'Child_Relation_Type_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Relation_Type 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Relation_Type_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Relation_Type 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Relation_Type 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Relation_Type 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Relation_Type 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Relation_Type 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Relation_Type[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Relation_Type[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Relation_Type     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Relation_Type     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Relation_Type[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Relation_Type[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_relations' => [
                'srcMapperClass' => 'Child_Relation_Type_Mapper',
                'destMapperClass' => 'Child_Relation_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Relation type',
                'pluralCaption' => 'Relation types',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Relation_Type 
     */
    function loadByRelationTypeId ($relationTypeId) {
        $res = parent::loadByRelationTypeId($relationTypeId);
        return $res;
    }
    
}

<?php

class Child_Relation_Type_Storage extends Child_Relation_Type_Base_Storage {
  

}
<?php

class Child_Relation_Type_Base_Storage extends Sample_Relation_Type_Storage {

    var $recordClass = 'Child_Relation_Type'; 
 
    
}

<?php

class Child_Relation extends Child_Relation_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Relation_Base_Object extends Sample_Relation {


    var $_incomingPerson = false;

    var $_outgoingPerson = false;
    
    var $_mapperClass = 'Child_Relation_Mapper';
    
    /**
     * @var Child_Relation_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Relation_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    protected function listOwnProperties() {
        return array_unique(array_merge(parent::listOwnProperties(), [ 1 => 'incomingPerson', 2 => 'outgoingPerson', ]));
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'relationType' => [
                'className' => 'Child_Relation_Type',
                'mapperClass' => 'Child_Relation_Type_Mapper',
                'caption' => 'Relation type',
            ],
            'incomingPerson' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'otherModelIdInMethodsPrefix' => 'incoming',
                'caption' => 'People',
                'relationId' => '_incomingPerson',
                'referenceVarName' => '_incomingPerson',
            ],
            'outgoingPerson' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'otherModelIdInMethodsPrefix' => 'outgoing',
                'caption' => 'People',
                'relationId' => '_outgoingPerson',
                'referenceVarName' => '_outgoingPerson',
            ],
            'relationId' => [
                'caption' => 'Relation Id',
            ],
            'personId' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'objectPropertyName' => 'outgoingPerson',
                'caption' => 'Person Id',
            ],
            'otherPersonId' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'objectPropertyName' => 'incomingPerson',
                'caption' => 'Other Person Id',
            ],
            'relationTypeId' => [
                'values' => [
                    'mapperClass' => 'Child_Relation_Type_Mapper',
                ],
                'caption' => 'Relation Type Id',
            ],
            'relationBegin' => [
                'caption' => 'Relation Begin',
            ],
            'relationEnd' => [
                'caption' => 'Relation End',
            ],
            'notes' => [
                'caption' => 'Notes',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Relation_Type 
     */
    function getRelationType() {
        return parent::getRelationType();
    }
    
    /**
     * @param Child_Relation_Type $relationType 
     */
    function setRelationType($relationType) {
        if ($relationType && !is_a($relationType, 'Child_Relation_Type')) 
            trigger_error('$relationType must be an instance of Child_Relation_Type', E_USER_ERROR);
        return parent::setRelationType($relationType);
    }
    
    /**
     * @return Child_Relation_Type  
     */
    function createRelationType($values = array()) {
        return parent::createRelationType($values);
    }

    
        
    
    /**
     * @return Child_Person 
     */
    function getIncomingPerson() {
        return parent::getIncomingPerson();
    }
    
    /**
     * @param Child_Person $incomingPerson 
     */
    function setIncomingPerson($incomingPerson) {
        if ($incomingPerson && !is_a($incomingPerson, 'Child_Person')) 
            trigger_error('$incomingPerson must be an instance of Child_Person', E_USER_ERROR);
        return parent::setIncomingPerson($incomingPerson);
    }
    
    /**
     * @return Child_Person  
     */
    function createIncomingPerson($values = array()) {
        return parent::createIncomingPerson($values);
    }

    
        
    
    /**
     * @return Child_Person 
     */
    function getOutgoingPerson() {
        return parent::getOutgoingPerson();
    }
    
    /**
     * @param Child_Person $outgoingPerson 
     */
    function setOutgoingPerson($outgoingPerson) {
        if ($outgoingPerson && !is_a($outgoingPerson, 'Child_Person')) 
            trigger_error('$outgoingPerson must be an instance of Child_Person', E_USER_ERROR);
        return parent::setOutgoingPerson($outgoingPerson);
    }
    
    /**
     * @return Child_Person  
     */
    function createOutgoingPerson($values = array()) {
        return parent::createOutgoingPerson($values);
    }

    
  
    
}

<?php

class Child_Relation_Mapper extends Child_Relation_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Relation_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Relation[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Relation_Base_Mapper extends Sample_Relation_Mapper {

    var $recordClass = 'Child_Relation';

    var $id = 'Child_Relation_Mapper';

    var $storage = 'Child_Relation_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    function doGetInternalDefaults() {
        return Ac_Util::m(parent::doGetInternalDefaults(), [
            '_incomingPerson' => false,
            '_outgoingPerson' => false,
        ]);
    }
    
    /**
     * @return Child_Relation 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Relation_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Relation 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Relation 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Relation 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Relation 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Relation 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Relation[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Relation[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Relation     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Relation     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Relation[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Relation[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_relationType' => [
                'srcMapperClass' => 'Child_Relation_Mapper',
                'destMapperClass' => 'Child_Relation_Type_Mapper',
            ],
            '_incomingPerson' => [
                'srcMapperClass' => 'Child_Relation_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
                'srcVarName' => '_incomingPerson',
                'destVarName' => '_incomingRelations',
                'destCountVarName' => '_incomingRelationsCount',
                'destLoadedVarName' => '_incomingRelationsLoaded',
                'fieldLinks' => [
                    'otherPersonId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
            '_outgoingPerson' => [
                'srcMapperClass' => 'Child_Relation_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
                'srcVarName' => '_outgoingPerson',
                'destVarName' => '_outgoingRelations',
                'destCountVarName' => '_outgoingRelationsCount',
                'destLoadedVarName' => '_outgoingRelationsLoaded',
                'fieldLinks' => [
                    'personId' => 'personId',
                ],
                'srcIsUnique' => false,
                'destIsUnique' => true,
                'srcOutgoing' => true,
            ],
        ]);
        
    }
    
    protected function doGetAssociationPrototypes() {
        return Ac_Util::m(parent::doGetAssociationPrototypes(), [
            'incomingPerson' => [
                'relationId' => '_incomingPerson',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'incomingPerson',
                'plural' => 'incomingPeople',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadIncomingPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForIncomingPeople',
                'getSrcObjectsMapperMethod' => 'getOfIncomingPeople',
                'createDestObjectMethod' => 'createIncomingPerson',
                'getDestObjectMethod' => 'getIncomingPerson',
                'setDestObjectMethod' => 'setIncomingPerson',
                'clearDestObjectMethod' => 'clearIncomingPerson',
            ],
            'outgoingPerson' => [
                'relationId' => '_outgoingPerson',
                'useMapperMethods' => true,
                'useModelMethods' => true,
                'single' => 'outgoingPerson',
                'plural' => 'outgoingPeople',
                'class' => 'Ac_Model_Association_One',
                'loadDestObjectsMapperMethod' => 'loadOutgoingPeopleFor',
                'loadSrcObjectsMapperMethod' => 'loadForOutgoingPeople',
                'getSrcObjectsMapperMethod' => 'getOfOutgoingPeople',
                'createDestObjectMethod' => 'createOutgoingPerson',
                'getDestObjectMethod' => 'getOutgoingPerson',
                'setDestObjectMethod' => 'setOutgoingPerson',
                'clearDestObjectMethod' => 'clearOutgoingPerson',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Relation',
                'pluralCaption' => 'Relations',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Relation 
     */
    function loadByRelationId ($relationId) {
        $res = parent::loadByRelationId($relationId);
        return $res;
    }
    
}

<?php

class Child_Relation_Storage extends Child_Relation_Base_Storage {
  

}
<?php

class Child_Relation_Base_Storage extends Sample_Relation_Storage {

    var $recordClass = 'Child_Relation'; 
 
    
}

<?php

class Child_Religion extends Child_Religion_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Religion_Base_Object extends Sample_Religion {

    
    var $_mapperClass = 'Child_Religion_Mapper';
    
    /**
     * @var Child_Religion_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Religion_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'people' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'religionId' => [
                'caption' => 'Religion Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson($id) {
        return parent::getPerson($id);
    }
    
    /**
     * @return Child_Person 
     */
    function getPeopleItem($id) {
        return parent::getPeopleItem($id);
    }
    
    /**
     * @param Child_Person $person 
     */
    function addPerson($person) {
        if (!is_a($person, 'Child_Person'))
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::addPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    

  
    
}

<?php

class Child_Religion_Mapper extends Child_Religion_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Religion_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Religion[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Religion_Base_Mapper extends Sample_Religion_Mapper {

    var $recordClass = 'Child_Religion';

    var $id = 'Child_Religion_Mapper';

    var $storage = 'Child_Religion_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Religion 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Religion_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Religion 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Religion 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Religion 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Religion 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Religion 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Religion[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Religion[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Religion     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Religion     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Religion[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Religion[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_people' => [
                'srcMapperClass' => 'Child_Religion_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Religion',
                'pluralCaption' => 'Religion',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Religion 
     */
    function loadByReligionId ($religionId) {
        $res = parent::loadByReligionId($religionId);
        return $res;
    }

    /**
     * @return Child_Religion 
     */
    function loadByTitle ($title) {
        $res = parent::loadByTitle($title);
        return $res;
    }
    
}

<?php

class Child_Religion_Storage extends Child_Religion_Base_Storage {
  

}
<?php

class Child_Religion_Base_Storage extends Sample_Religion_Storage {

    var $recordClass = 'Child_Religion'; 
 
    
}

<?php

class Child_Shop_Category extends Child_Shop_Category_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Category_Base_Object extends Sample_Shop_Category {

    
    var $_mapperClass = 'Child_Shop_Category_Mapper';
    
    /**
     * @var Child_Shop_Category_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Category_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopProducts' => [
                'className' => 'Child_Shop_Product',
                'mapperClass' => 'Child_Shop_Product_Mapper',
                'caption' => 'Shop products',
            ],
            'shopProductIds' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Product_Mapper',
                ],
            ],
            'id' => [
                'caption' => 'Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'leftCol' => [
                'caption' => 'Left Col',
            ],
            'rightCol' => [
                'caption' => 'Right Col',
            ],
            'ignore' => [
                'caption' => 'Ignore',
            ],
            'parentId' => [
                'caption' => 'Parent Id',
            ],
            'ordering' => [
                'caption' => 'Ordering',
            ],
            'depth' => [
                'caption' => 'Depth',
            ],
            'metaId' => [
                'caption' => 'Meta Id',
            ],
            'pubId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Publish_ImplMapper',
                ],
                'caption' => 'Pub Id',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Product 
     */
    function getShopProduct($id) {
        return parent::getShopProduct($id);
    }
    
    /**
     * @return Child_Shop_Product 
     */
    function getShopProductsItem($id) {
        return parent::getShopProductsItem($id);
    }
    
    /**
     * @param Child_Shop_Product $shopProduct 
     */
    function addShopProduct($shopProduct) {
        if (!is_a($shopProduct, 'Child_Shop_Product'))
            trigger_error('$shopProduct must be an instance of Child_Shop_Product', E_USER_ERROR);
        return parent::addShopProduct($shopProduct);
    }
    
    /**
     * @return Child_Shop_Product  
     */
    function createShopProduct($values = array()) {
        return parent::createShopProduct($values);
    }

    

  
    
}

<?php

class Child_Shop_Category_Mapper extends Child_Shop_Category_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Category_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Category[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Category_Base_Mapper extends Sample_Shop_Category_Mapper {

    var $recordClass = 'Child_Shop_Category';

    var $id = 'Child_Shop_Category_Mapper';

    var $storage = 'Child_Shop_Category_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'publish' => [
                'class' => 'Child_Publish_MapperMixable',
            ],
        ]);
    }
    
 
    /**
     * @return Child_Shop_Category 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Category_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Category 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Category 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Category 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Category 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Category 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Category[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Category[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Category     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Category     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Category[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Category[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    function getDefaultSort() {
        return 'ordering';
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopProducts' => [
                'srcMapperClass' => 'Child_Shop_Category_Mapper',
                'destMapperClass' => 'Child_Shop_Product_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop category',
                'pluralCaption' => 'Shop categories',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Category 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }

    /**
     * @return Child_Shop_Category 
     */
    function loadByPubId ($pubId) {
        $res = parent::loadByPubId($pubId);
        return $res;
    }
    
}

<?php

class Child_Shop_Category_Storage extends Child_Shop_Category_Base_Storage {
  

}
<?php

class Child_Shop_Category_Base_Storage extends Sample_Shop_Category_Storage {

    var $recordClass = 'Child_Shop_Category'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'shopProductIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'categoryId',
                        'midDestKey' => 'productId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__shopProducts',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Shop_Classifier extends Child_Shop_Classifier_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Classifier_Base_Object extends Sample_Shop_Classifier {

    
    var $_mapperClass = 'Child_Shop_Classifier_Mapper';
    
    /**
     * @var Child_Shop_Classifier_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Classifier_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopClassifierType' => [
                'className' => 'Child_Shop_Classifier_Type',
                'mapperClass' => 'Child_Shop_Classifier_Type_Mapper',
                'caption' => 'Shop classifier type',
            ],
            'monitorShopSpecs' => [
                'className' => 'Child_Shop_Spec',
                'mapperClass' => 'Child_Shop_Spec_Mapper',
                'caption' => 'Shop specs',
            ],
            'id' => [
                'caption' => 'Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'type' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Classifier_Type_Mapper',
                ],
                'caption' => 'Type',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Classifier_Type 
     */
    function getShopClassifierType() {
        return parent::getShopClassifierType();
    }
    
    /**
     * @param Child_Shop_Classifier_Type $shopClassifierType 
     */
    function setShopClassifierType($shopClassifierType) {
        if ($shopClassifierType && !is_a($shopClassifierType, 'Child_Shop_Classifier_Type')) 
            trigger_error('$shopClassifierType must be an instance of Child_Shop_Classifier_Type', E_USER_ERROR);
        return parent::setShopClassifierType($shopClassifierType);
    }
    
    /**
     * @return Child_Shop_Classifier_Type  
     */
    function createShopClassifierType($values = array()) {
        return parent::createShopClassifierType($values);
    }

    
        
    
    /**
     * @return Child_Shop_Spec 
     */
    function getMonitorShopSpec($id) {
        return parent::getMonitorShopSpec($id);
    }
    
    /**
     * @return Child_Shop_Spec 
     */
    function getMonitorShopSpecsItem($id) {
        return parent::getMonitorShopSpecsItem($id);
    }
    
    /**
     * @param Child_Shop_Spec $monitorShopSpec 
     */
    function addMonitorShopSpec($monitorShopSpec) {
        if (!is_a($monitorShopSpec, 'Child_Shop_Spec'))
            trigger_error('$monitorShopSpec must be an instance of Child_Shop_Spec', E_USER_ERROR);
        return parent::addMonitorShopSpec($monitorShopSpec);
    }
    
    /**
     * @return Child_Shop_Spec  
     */
    function createMonitorShopSpec($values = array()) {
        return parent::createMonitorShopSpec($values);
    }

    

  
    
}

<?php

class Child_Shop_Classifier_Mapper extends Child_Shop_Classifier_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Classifier_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Classifier[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Classifier_Base_Mapper extends Sample_Shop_Classifier_Mapper {

    var $recordClass = 'Child_Shop_Classifier';

    var $id = 'Child_Shop_Classifier_Mapper';

    var $storage = 'Child_Shop_Classifier_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Shop_Classifier 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Classifier_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Classifier 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Classifier 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Classifier 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Classifier 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Classifier 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Classifier[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Classifier[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Classifier     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Classifier     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Classifier[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Classifier[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifierType' => [
                'srcMapperClass' => 'Child_Shop_Classifier_Mapper',
                'destMapperClass' => 'Child_Shop_Classifier_Type_Mapper',
            ],
            '_monitorShopSpecs' => [
                'srcMapperClass' => 'Child_Shop_Classifier_Mapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop classifier',
                'pluralCaption' => 'Shop classifier',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Classifier 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }

    /**
     * @return Child_Shop_Classifier 
     */
    function loadByTypeTitle ($type, $title) {
        $res = parent::loadByTypeTitle($type, $title);
        return $res;
    }
    
}

<?php

class Child_Shop_Classifier_Storage extends Child_Shop_Classifier_Base_Storage {
  

}
<?php

class Child_Shop_Classifier_Base_Storage extends Sample_Shop_Classifier_Storage {

    var $recordClass = 'Child_Shop_Classifier'; 
 
    
}

<?php

class Child_Shop_Classifier_Type extends Child_Shop_Classifier_Type_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Classifier_Type_Base_Object extends Sample_Shop_Classifier_Type {

    
    var $_mapperClass = 'Child_Shop_Classifier_Type_Mapper';
    
    /**
     * @var Child_Shop_Classifier_Type_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Classifier_Type_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopClassifier' => [
                'className' => 'Child_Shop_Classifier',
                'mapperClass' => 'Child_Shop_Classifier_Mapper',
                'caption' => 'Shop classifier',
            ],
            'type' => [
                'caption' => 'Type',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Classifier 
     */
    function getShopClassifier($id) {
        return parent::getShopClassifier($id);
    }
    
    /**
     * @return Child_Shop_Classifier 
     */
    function getShopClassifierItem($id) {
        return parent::getShopClassifierItem($id);
    }
    
    /**
     * @param Child_Shop_Classifier $shopClassifier 
     */
    function addShopClassifier($shopClassifier) {
        if (!is_a($shopClassifier, 'Child_Shop_Classifier'))
            trigger_error('$shopClassifier must be an instance of Child_Shop_Classifier', E_USER_ERROR);
        return parent::addShopClassifier($shopClassifier);
    }
    
    /**
     * @return Child_Shop_Classifier  
     */
    function createShopClassifier($values = array()) {
        return parent::createShopClassifier($values);
    }

    

  
    
}

<?php

class Child_Shop_Classifier_Type_Mapper extends Child_Shop_Classifier_Type_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Classifier_Type_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Classifier_Type[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Classifier_Type_Base_Mapper extends Sample_Shop_Classifier_Type_Mapper {

    var $recordClass = 'Child_Shop_Classifier_Type';

    var $id = 'Child_Shop_Classifier_Type_Mapper';

    var $storage = 'Child_Shop_Classifier_Type_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Shop_Classifier_Type 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Classifier_Type_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Classifier_Type 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Classifier_Type 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Classifier_Type 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Classifier_Type 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Classifier_Type 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Classifier_Type[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Classifier_Type[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Classifier_Type     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Classifier_Type     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Classifier_Type[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Classifier_Type[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'type';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifier' => [
                'srcMapperClass' => 'Child_Shop_Classifier_Type_Mapper',
                'destMapperClass' => 'Child_Shop_Classifier_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop classifier type',
                'pluralCaption' => 'Shop classifier type',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Classifier_Type 
     */
    function loadByType ($type) {
        $res = parent::loadByType($type);
        return $res;
    }
    
}

<?php

class Child_Shop_Classifier_Type_Storage extends Child_Shop_Classifier_Type_Base_Storage {
  

}
<?php

class Child_Shop_Classifier_Type_Base_Storage extends Sample_Shop_Classifier_Type_Storage {

    var $recordClass = 'Child_Shop_Classifier_Type'; 
 
    
}

<?php

class Child_Shop_Product_Extra_Code extends Child_Shop_Product_Extra_Code_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Product_Extra_Code_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    protected $preserveMetaCache = true;
    
    /**
     * @var Child_Shop_Product_Extra_Code_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Child_Shop_Product_Extra_Code';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), []);
    }
    
    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'person' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Product_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'ean' => [
                'caption' => 'Ean',
            ],
            'asin' => [
                'caption' => 'Asin',
            ],
            'gtin' => [
                'caption' => 'Gtin',
            ],
            'responsiblePersonId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'caption' => 'Responsible Person Id',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson() {
        return parent::getPerson();
    }
    
    /**
     * @param Child_Person $person 
     */
    function setPerson($person) {
        if ($person && !is_a($person, 'Child_Person')) 
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::setPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    
  
    
}

<?php

class Child_Shop_Product_Extra_Code_ImplMapper extends Child_Shop_Product_Extra_Code_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Product_Extra_Code_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Product_Extra_Code[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Product_Extra_Code_Base_ImplMapper extends Sample_Shop_Product_Extra_Code_ImplMapper {

    protected $identifierField = NULL;

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Shop_Product_Extra_Code_ImplMapper';

    var $storage = 'Child_Shop_Product_Extra_Code_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'uniformTypeId' => 'Child_Shop_Product_Mapper',
            ],
        ]);
    }
    
 
    /**
     * @return Child_Shop_Product_Extra_Code 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Product_Extra_Code_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Product_Extra_Code 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Product_Extra_Code 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Product_Extra_Code 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Product_Extra_Code 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Product_Extra_Code 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Product_Extra_Code[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Product_Extra_Code[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Product_Extra_Code     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Product_Extra_Code     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Product_Extra_Code[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Product_Extra_Code[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'ean';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Child_Shop_Product_Extra_Code_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop product extra code',
                'pluralCaption' => 'Shop product extra codes',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Product_Extra_Code 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Product_Extra_Code_Storage extends Child_Shop_Product_Extra_Code_Base_Storage {
  

}
<?php

class Child_Shop_Product_Extra_Code_Base_Storage extends Sample_Shop_Product_Extra_Code_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Shop_Product_Extra_Code_MapperMixable extends Child_Shop_Product_Extra_Code_Base_ExtraTable {
    
}

<?php 

class Child_Shop_Product_Extra_Code_Base_ExtraTable extends Sample_Shop_Product_Extra_Code_MapperMixable {

    protected $modelMixable = 'Child_Shop_Product_Extra_Code';
    
    protected $implMapper = 'Child_Shop_Product_Extra_Code_ImplMapper';
    
    protected $modelMixableId = 'Child_Shop_Product_Extra_Code';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Child_Shop_Product_Extra_Code_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Shop_Product_Note_ImplMapper extends Child_Shop_Product_Note_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Product_Note_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Product_Note[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Product_Note_Base_ImplMapper extends Sample_Shop_Product_Note_ImplMapper {

    protected $identifierField = NULL;

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Shop_Product_Note_ImplMapper';

    var $storage = 'Child_Shop_Product_Note_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'uniformTypeId' => 'Child_Shop_Product_Mapper',
            ],
        ]);
    }
    
 
    /**
     * @return Child_Shop_Product_Note 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Product_Note_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Product_Note 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Product_Note 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Product_Note 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Product_Note 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Product_Note 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Product_Note[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Product_Note[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Product_Note     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Product_Note     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Product_Note[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Product_Note[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Child_Shop_Product_Note_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop product note',
                'pluralCaption' => 'Shop product notes',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Product_Note 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Product_Note_Storage extends Child_Shop_Product_Note_Base_Storage {
  

}
<?php

class Child_Shop_Product_Note_Base_Storage extends Sample_Shop_Product_Note_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Shop_Product_Note_MapperMixable extends Child_Shop_Product_Note_Base_ExtraTable {
    
}

<?php 

class Child_Shop_Product_Note_Base_ExtraTable extends Sample_Shop_Product_Note_MapperMixable {

    protected $implMapper = 'Child_Shop_Product_Note_ImplMapper';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_person' => [
                'srcMapperClass' => 'Child_Shop_Product_Note_ImplMapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Shop_Product extends Child_Shop_Product_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Product_Base_Object extends Sample_Shop_Product {

    
    var $_mapperClass = 'Child_Shop_Product_Mapper';
    
    /**
     * @var Child_Shop_Product_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Product_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopCategories' => [
                'className' => 'Child_Shop_Category',
                'mapperClass' => 'Child_Shop_Category_Mapper',
                'caption' => 'Shop categories',
            ],
            'shopCategoryIds' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Category_Mapper',
                ],
            ],
            'referencedShopProducts' => [
                'className' => 'Child_Shop_Product',
                'mapperClass' => 'Child_Shop_Product_Mapper',
                'caption' => 'Shop products',
            ],
            'referencedShopProductIds' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Product_Mapper',
                ],
            ],
            'referencingShopProducts' => [
                'className' => 'Child_Shop_Product',
                'mapperClass' => 'Child_Shop_Product_Mapper',
                'caption' => 'Shop products',
            ],
            'referencingShopProductIds' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Product_Mapper',
                ],
            ],
            'shopSpec' => [
                'className' => 'Child_Shop_Spec',
                'mapperClass' => 'Child_Shop_Spec_Mapper',
                'caption' => 'Shop spec',
            ],
            'id' => [
                'caption' => 'Id',
            ],
            'sku' => [
                'caption' => 'Sku',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'metaId' => [
                'caption' => 'Meta Id',
            ],
            'pubId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Publish_ImplMapper',
                ],
                'caption' => 'Pub Id',
            ],
            'person' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Product_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'note' => [
                'caption' => 'Note',
            ],
            'noteAuthorId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
                'caption' => 'Note Author Id',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Category 
     */
    function getShopCategory($id) {
        return parent::getShopCategory($id);
    }
    
    /**
     * @return Child_Shop_Category 
     */
    function getShopCategoriesItem($id) {
        return parent::getShopCategoriesItem($id);
    }
    
    /**
     * @param Child_Shop_Category $shopCategory 
     */
    function addShopCategory($shopCategory) {
        if (!is_a($shopCategory, 'Child_Shop_Category'))
            trigger_error('$shopCategory must be an instance of Child_Shop_Category', E_USER_ERROR);
        return parent::addShopCategory($shopCategory);
    }
    
    /**
     * @return Child_Shop_Category  
     */
    function createShopCategory($values = array()) {
        return parent::createShopCategory($values);
    }

    

        
    
    /**
     * @return Child_Shop_Product 
     */
    function getReferencedShopProduct($id) {
        return parent::getReferencedShopProduct($id);
    }
    
    /**
     * @return Child_Shop_Product 
     */
    function getReferencedShopProductsItem($id) {
        return parent::getReferencedShopProductsItem($id);
    }
    
    /**
     * @param Child_Shop_Product $referencedShopProduct 
     */
    function addReferencedShopProduct($referencedShopProduct) {
        if (!is_a($referencedShopProduct, 'Child_Shop_Product'))
            trigger_error('$referencedShopProduct must be an instance of Child_Shop_Product', E_USER_ERROR);
        return parent::addReferencedShopProduct($referencedShopProduct);
    }
    
    /**
     * @return Child_Shop_Product  
     */
    function createReferencedShopProduct($values = array()) {
        return parent::createReferencedShopProduct($values);
    }

    

        
    
    /**
     * @return Child_Shop_Product 
     */
    function getReferencingShopProduct($id) {
        return parent::getReferencingShopProduct($id);
    }
    
    /**
     * @return Child_Shop_Product 
     */
    function getReferencingShopProductsItem($id) {
        return parent::getReferencingShopProductsItem($id);
    }
    
    /**
     * @param Child_Shop_Product $referencingShopProduct 
     */
    function addReferencingShopProduct($referencingShopProduct) {
        if (!is_a($referencingShopProduct, 'Child_Shop_Product'))
            trigger_error('$referencingShopProduct must be an instance of Child_Shop_Product', E_USER_ERROR);
        return parent::addReferencingShopProduct($referencingShopProduct);
    }
    
    /**
     * @return Child_Shop_Product  
     */
    function createReferencingShopProduct($values = array()) {
        return parent::createReferencingShopProduct($values);
    }

    

        
    
    /**
     * @return Child_Shop_Spec 
     */
    function getShopSpec() {
        return parent::getShopSpec();
    }
    
    /**
     * @param Child_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec && !is_a($shopSpec, 'Child_Shop_Spec')) 
            trigger_error('$shopSpec must be an instance of Child_Shop_Spec', E_USER_ERROR);
        return parent::setShopSpec($shopSpec);
    }
    
    /**
     * @return Child_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        return parent::createShopSpec($values);
    }

    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson() {
        return parent::getPerson();
    }
    
    /**
     * @param Child_Person $person 
     */
    function setPerson($person) {
        if ($person && !is_a($person, 'Child_Person')) 
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::setPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    
  
    
}

<?php

class Child_Shop_Product_Mapper extends Child_Shop_Product_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Product_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Product[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Product_Base_Mapper extends Sample_Shop_Product_Mapper {

    var $recordClass = 'Child_Shop_Product';

    var $id = 'Child_Shop_Product_Mapper';

    var $storage = 'Child_Shop_Product_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'publish' => [
                'class' => 'Child_Publish_MapperMixable',
            ],
            'extraCode' => [
                'class' => 'Child_Shop_Product_Extra_Code_MapperMixable',
            ],
            'note' => [
                'class' => 'Child_Shop_Product_Note_MapperMixable',
            ],
        ]);
    }
    
 
    /**
     * @return Child_Shop_Product 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Product_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Product 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Product 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Product 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Product 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Product 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Product[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Product[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Product     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Product     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Product[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Product[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopCategories' => [
                'srcMapperClass' => 'Child_Shop_Product_Mapper',
                'destMapperClass' => 'Child_Shop_Category_Mapper',
            ],
            '_referencedShopProducts' => [
                'srcMapperClass' => 'Child_Shop_Product_Mapper',
                'destMapperClass' => 'Child_Shop_Product_Mapper',
            ],
            '_referencingShopProducts' => [
                'srcMapperClass' => 'Child_Shop_Product_Mapper',
                'destMapperClass' => 'Child_Shop_Product_Mapper',
            ],
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Product_Mapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop product',
                'pluralCaption' => 'Shop products',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Product 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }

    /**
     * @return Child_Shop_Product 
     */
    function loadByPubId ($pubId) {
        $res = parent::loadByPubId($pubId);
        return $res;
    }
    
}

<?php

class Child_Shop_Product_Storage extends Child_Shop_Product_Base_Storage {
  

}
<?php

class Child_Shop_Product_Base_Storage extends Sample_Shop_Product_Storage {

    var $recordClass = 'Child_Shop_Product'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'shopCategoryIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'productId',
                        'midDestKey' => 'categoryId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__shopCategories',
                    ],
                    'referencedShopProductIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'productId',
                        'midDestKey' => 'relatedProductId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__referencedShopProducts',
                    ],
                    'referencingShopProductIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'relatedProductId',
                        'midDestKey' => 'productId',
                        'tableKey' => 'id',
                        'midTableAlias' => 'mid__referencingShopProducts',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Shop_Spec_Computer extends Child_Shop_Spec_Computer_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Spec_Computer_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    protected $preserveMetaCache = true;
    
    /**
     * @var Child_Shop_Spec_Computer_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Child_Shop_Spec_Computer';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), []);
    }
    
    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopSpec' => [
                'className' => 'Child_Shop_Spec',
                'mapperClass' => 'Child_Shop_Spec_Mapper',
                'caption' => 'Shop spec',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Spec_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'hdd' => [
                'caption' => 'Hdd',
            ],
            'ram' => [
                'caption' => 'Ram',
            ],
            'os' => [
                'caption' => 'Os',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Spec 
     */
    function getShopSpec() {
        return parent::getShopSpec();
    }
    
    /**
     * @param Child_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec && !is_a($shopSpec, 'Child_Shop_Spec')) 
            trigger_error('$shopSpec must be an instance of Child_Shop_Spec', E_USER_ERROR);
        return parent::setShopSpec($shopSpec);
    }
    
    /**
     * @return Child_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        return parent::createShopSpec($values);
    }

    
  
    
}

<?php

class Child_Shop_Spec_Computer_ImplMapper extends Child_Shop_Spec_Computer_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Spec_Computer_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Spec_Computer[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Spec_Computer_Base_ImplMapper extends Sample_Shop_Spec_Computer_ImplMapper {

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Shop_Spec_Computer_ImplMapper';

    var $storage = 'Child_Shop_Spec_Computer_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Shop_Spec_Computer 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Spec_Computer_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Spec_Computer 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Spec_Computer 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Spec_Computer 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Spec_Computer 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Spec_Computer 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Spec_Computer[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Spec_Computer[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Spec_Computer     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Spec_Computer     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Spec_Computer[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Spec_Computer[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'os';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Spec_Computer_ImplMapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop spec computer',
                'pluralCaption' => 'Shop spec computer',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Spec_Computer 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Spec_Computer_Storage extends Child_Shop_Spec_Computer_Base_Storage {
  

}
<?php

class Child_Shop_Spec_Computer_Base_Storage extends Sample_Shop_Spec_Computer_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Shop_Spec_Computer_MapperMixable extends Child_Shop_Spec_Computer_Base_ExtraTable {
    
}

<?php 

class Child_Shop_Spec_Computer_Base_ExtraTable extends Sample_Shop_Spec_Computer_MapperMixable {

    protected $modelMixable = 'Child_Shop_Spec_Computer';
    
    protected $implMapper = 'Child_Shop_Spec_Computer_ImplMapper';
    
    protected $modelMixableId = 'Child_Shop_Spec_Computer';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Spec_Computer_ImplMapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Shop_Spec_Food extends Child_Shop_Spec_Food_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Spec_Food_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    protected $preserveMetaCache = true;
    
    /**
     * @var Child_Shop_Spec_Food_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Child_Shop_Spec_Food';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), []);
    }
    
    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopSpec' => [
                'className' => 'Child_Shop_Spec',
                'mapperClass' => 'Child_Shop_Spec_Mapper',
                'caption' => 'Shop spec',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Spec_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'storageType' => [
                'caption' => 'Storage Type',
            ],
            'storageTerm' => [
                'caption' => 'Storage Term',
            ],
            'storageTermUnit' => [
                'caption' => 'Storage Term Unit',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Spec 
     */
    function getShopSpec() {
        return parent::getShopSpec();
    }
    
    /**
     * @param Child_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec && !is_a($shopSpec, 'Child_Shop_Spec')) 
            trigger_error('$shopSpec must be an instance of Child_Shop_Spec', E_USER_ERROR);
        return parent::setShopSpec($shopSpec);
    }
    
    /**
     * @return Child_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        return parent::createShopSpec($values);
    }

    
  
    
}

<?php

class Child_Shop_Spec_Food_ImplMapper extends Child_Shop_Spec_Food_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Spec_Food_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Spec_Food[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Spec_Food_Base_ImplMapper extends Sample_Shop_Spec_Food_ImplMapper {

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Shop_Spec_Food_ImplMapper';

    var $storage = 'Child_Shop_Spec_Food_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Shop_Spec_Food 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Spec_Food_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Spec_Food 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Spec_Food 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Spec_Food 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Spec_Food 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Spec_Food 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Spec_Food[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Spec_Food[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Spec_Food     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Spec_Food     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Spec_Food[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Spec_Food[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Spec_Food_ImplMapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop spec food',
                'pluralCaption' => 'Shop spec food',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Spec_Food 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Spec_Food_Storage extends Child_Shop_Spec_Food_Base_Storage {
  

}
<?php

class Child_Shop_Spec_Food_Base_Storage extends Sample_Shop_Spec_Food_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Shop_Spec_Food_MapperMixable extends Child_Shop_Spec_Food_Base_ExtraTable {
    
}

<?php 

class Child_Shop_Spec_Food_Base_ExtraTable extends Sample_Shop_Spec_Food_MapperMixable {

    protected $modelMixable = 'Child_Shop_Spec_Food';
    
    protected $implMapper = 'Child_Shop_Spec_Food_ImplMapper';
    
    protected $modelMixableId = 'Child_Shop_Spec_Food';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Spec_Food_ImplMapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Shop_Spec_Laptop extends Child_Shop_Spec_Laptop_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Spec_Laptop_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    protected $preserveMetaCache = true;
    
    /**
     * @var Child_Shop_Spec_Laptop_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Child_Shop_Spec_Laptop';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), []);
    }
    
    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopSpec' => [
                'className' => 'Child_Shop_Spec',
                'mapperClass' => 'Child_Shop_Spec_Mapper',
                'caption' => 'Shop spec',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Spec_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'weight' => [
                'caption' => 'Weight',
            ],
            'battery' => [
                'caption' => 'Battery',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Spec 
     */
    function getShopSpec() {
        return parent::getShopSpec();
    }
    
    /**
     * @param Child_Shop_Spec $shopSpec 
     */
    function setShopSpec($shopSpec) {
        if ($shopSpec && !is_a($shopSpec, 'Child_Shop_Spec')) 
            trigger_error('$shopSpec must be an instance of Child_Shop_Spec', E_USER_ERROR);
        return parent::setShopSpec($shopSpec);
    }
    
    /**
     * @return Child_Shop_Spec  
     */
    function createShopSpec($values = array()) {
        return parent::createShopSpec($values);
    }

    
  
    
}

<?php

class Child_Shop_Spec_Laptop_ImplMapper extends Child_Shop_Spec_Laptop_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Spec_Laptop_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Spec_Laptop[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Spec_Laptop_Base_ImplMapper extends Sample_Shop_Spec_Laptop_ImplMapper {

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Shop_Spec_Laptop_ImplMapper';

    var $storage = 'Child_Shop_Spec_Laptop_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Shop_Spec_Laptop 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Spec_Laptop_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Spec_Laptop 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Spec_Laptop 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Spec_Laptop 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Spec_Laptop 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Spec_Laptop 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Spec_Laptop[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Spec_Laptop[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Spec_Laptop     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Spec_Laptop     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Spec_Laptop[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Spec_Laptop[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'battery';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Spec_Laptop_ImplMapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop spec laptop',
                'pluralCaption' => 'Shop spec laptop',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Spec_Laptop 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Spec_Laptop_Storage extends Child_Shop_Spec_Laptop_Base_Storage {
  

}
<?php

class Child_Shop_Spec_Laptop_Base_Storage extends Sample_Shop_Spec_Laptop_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Shop_Spec_Laptop_MapperMixable extends Child_Shop_Spec_Laptop_Base_ExtraTable {
    
}

<?php 

class Child_Shop_Spec_Laptop_Base_ExtraTable extends Sample_Shop_Spec_Laptop_MapperMixable {

    protected $modelMixable = 'Child_Shop_Spec_Laptop';
    
    protected $implMapper = 'Child_Shop_Spec_Laptop_ImplMapper';
    
    protected $modelMixableId = 'Child_Shop_Spec_Laptop';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopSpec' => [
                'srcMapperClass' => 'Child_Shop_Spec_Laptop_ImplMapper',
                'destMapperClass' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Shop_Spec_Monitor extends Child_Shop_Spec_Monitor_Base_ObjectMixable {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Spec_Monitor_Base_ObjectMixable extends Ac_Model_Mixable_ExtraTable {


    protected $preserveMetaCache = true;
    
    /**
     * @var Child_Shop_Spec_Monitor_MapperMixable 
     */
    protected $mapperExtraTable = false;

    protected $mixableId = 'Child_Shop_Spec_Monitor';
    
    function hasPublicVars() {
        return true;
    }

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), []);
    }
    
    protected function getOwnPropertiesInfo() {
    	static $pi = false; 
        if ($pi === false) $pi = [
            'shopClassifier' => [
                'className' => 'Child_Shop_Classifier',
                'mapperClass' => 'Child_Shop_Classifier_Mapper',
                'caption' => 'Shop classifier',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Spec_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'diagonal' => [
                'caption' => 'Diagonal',
            ],
            'hRes' => [
                'caption' => 'H Res',
            ],
            'vRes' => [
                'caption' => 'V Res',
            ],
            'matrixTypeId' => [

                'dummyCaption' => '',
                'values' => [
                    'mapperClass' => 'Child_Shop_Classifier_Mapper',
                ],
                'caption' => 'Matrix Type Id',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Classifier 
     */
    function getShopClassifier() {
        return parent::getShopClassifier();
    }
    
    /**
     * @param Child_Shop_Classifier $shopClassifier 
     */
    function setShopClassifier($shopClassifier) {
        if ($shopClassifier && !is_a($shopClassifier, 'Child_Shop_Classifier')) 
            trigger_error('$shopClassifier must be an instance of Child_Shop_Classifier', E_USER_ERROR);
        return parent::setShopClassifier($shopClassifier);
    }
    
    /**
     * @return Child_Shop_Classifier  
     */
    function createShopClassifier($values = array()) {
        return parent::createShopClassifier($values);
    }

    
  
    
}

<?php

class Child_Shop_Spec_Monitor_ImplMapper extends Child_Shop_Spec_Monitor_Base_ImplMapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Spec_Monitor_ImplMapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Spec_Monitor[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Spec_Monitor_Base_ImplMapper extends Sample_Shop_Spec_Monitor_ImplMapper {

    protected $identifierField = NULL;

    var $recordClass = 'Ac_Model_Record';

    var $id = 'Child_Shop_Spec_Monitor_ImplMapper';

    var $storage = 'Child_Shop_Spec_Monitor_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
    protected function doGetCoreMixables() { 
        return Ac_Util::m(parent::doGetCoreMixables(), [
            'Ac_Model_Typer_Abstract' => [
                'uniformTypeId' => 'Child_Shop_Spec_Mapper',
            ],
        ]);
    }
    
 
    /**
     * @return Child_Shop_Spec_Monitor 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Spec_Monitor_ImplMapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Spec_Monitor 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Spec_Monitor 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Spec_Monitor 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Spec_Monitor 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Spec_Monitor 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Spec_Monitor[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Spec_Monitor[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Spec_Monitor     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Spec_Monitor     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Spec_Monitor[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Spec_Monitor[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifier' => [
                'srcMapperClass' => 'Child_Shop_Spec_Monitor_ImplMapper',
                'destMapperClass' => 'Child_Shop_Classifier_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop spec monitor',
                'pluralCaption' => 'Shop spec monitor',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Spec_Monitor 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Spec_Monitor_Storage extends Child_Shop_Spec_Monitor_Base_Storage {
  

}
<?php

class Child_Shop_Spec_Monitor_Base_Storage extends Sample_Shop_Spec_Monitor_Storage {

    var $recordClass = 'Ac_Model_Record'; 
 
    
}

<?php 

class Child_Shop_Spec_Monitor_MapperMixable extends Child_Shop_Spec_Monitor_Base_ExtraTable {
    
}

<?php 

class Child_Shop_Spec_Monitor_Base_ExtraTable extends Sample_Shop_Spec_Monitor_MapperMixable {

    protected $modelMixable = 'Child_Shop_Spec_Monitor';
    
    protected $implMapper = 'Child_Shop_Spec_Monitor_ImplMapper';
    
    protected $modelMixableId = 'Child_Shop_Spec_Monitor';
    
    
    
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopClassifier' => [
                'srcMapperClass' => 'Child_Shop_Spec_Monitor_ImplMapper',
                'destMapperClass' => 'Child_Shop_Classifier_Mapper',
            ],
        ]);
        
    }
}

<?php

class Child_Shop_Spec extends Child_Shop_Spec_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Shop_Spec_Base_Object extends Sample_Shop_Spec {

    
    var $_mapperClass = 'Child_Shop_Spec_Mapper';
    
    /**
     * @var Child_Shop_Spec_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Spec_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'shopProduct' => [
                'className' => 'Child_Shop_Product',
                'mapperClass' => 'Child_Shop_Product_Mapper',
                'caption' => 'Shop product',
            ],
            'productId' => [
                'values' => [
                    'mapperClass' => 'Child_Shop_Product_Mapper',
                ],
                'caption' => 'Product Id',
            ],
            'detailsUrl' => [
                'caption' => 'Details Url',
            ],
            'specsType' => [
                'caption' => 'Specs Type',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Shop_Product 
     */
    function getShopProduct() {
        return parent::getShopProduct();
    }
    
    /**
     * @param Child_Shop_Product $shopProduct 
     */
    function setShopProduct($shopProduct) {
        if ($shopProduct && !is_a($shopProduct, 'Child_Shop_Product')) 
            trigger_error('$shopProduct must be an instance of Child_Shop_Product', E_USER_ERROR);
        return parent::setShopProduct($shopProduct);
    }
    
    /**
     * @return Child_Shop_Product  
     */
    function createShopProduct($values = array()) {
        return parent::createShopProduct($values);
    }

    
  
    
}

<?php

class Child_Shop_Spec_Mapper extends Child_Shop_Spec_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Shop_Spec_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Shop_Spec[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Shop_Spec_Base_Mapper extends Sample_Shop_Spec_Mapper {

    var $recordClass = 'Child_Shop_Spec';

    var $id = 'Child_Shop_Spec_Mapper';

    var $storage = 'Child_Shop_Spec_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Shop_Spec 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Shop_Spec_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Shop_Spec 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Shop_Spec 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Shop_Spec 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Shop_Spec 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Shop_Spec 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Shop_Spec[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Shop_Spec[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Shop_Spec     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Shop_Spec     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Shop_Spec[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Shop_Spec[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'detailsUrl';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_shopProduct' => [
                'srcMapperClass' => 'Child_Shop_Spec_Mapper',
                'destMapperClass' => 'Child_Shop_Product_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Shop spec',
                'pluralCaption' => 'Shop specs',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Shop_Spec 
     */
    function loadByProductId ($productId) {
        $res = parent::loadByProductId($productId);
        return $res;
    }
    
}

<?php

class Child_Shop_Spec_Storage extends Child_Shop_Spec_Base_Storage {
  

}
<?php

class Child_Shop_Spec_Base_Storage extends Sample_Shop_Spec_Storage {

    var $recordClass = 'Child_Shop_Spec'; 
 
    
}

<?php

class Child_Tag extends Child_Tag_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Tag_Base_Object extends Sample_Tag {

    
    var $_mapperClass = 'Child_Tag_Mapper';
    
    /**
     * @var Child_Tag_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tag_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'people' => [
                'className' => 'Child_Person',
                'mapperClass' => 'Child_Person_Mapper',
                'caption' => 'People',
            ],
            'personIds' => [
                'values' => [
                    'mapperClass' => 'Child_Person_Mapper',
                ],
            ],
            'perks' => [
                'className' => 'Child_Perk',
                'mapperClass' => 'Child_Perk_Mapper',
                'caption' => 'Perks',
            ],
            'perkIds' => [
                'values' => [
                    'mapperClass' => 'Child_Perk_Mapper',
                ],
            ],
            'tagId' => [
                'caption' => 'Tag Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'titleM' => [
                'caption' => 'TitleM',
            ],
            'titleF' => [
                'caption' => 'TitleF',
            ],
        ];
    
        return $pi;
                
    }
    
        
    
    /**
     * @return Child_Person 
     */
    function getPerson($id) {
        return parent::getPerson($id);
    }
    
    /**
     * @return Child_Person 
     */
    function getPeopleItem($id) {
        return parent::getPeopleItem($id);
    }
    
    /**
     * @param Child_Person $person 
     */
    function addPerson($person) {
        if (!is_a($person, 'Child_Person'))
            trigger_error('$person must be an instance of Child_Person', E_USER_ERROR);
        return parent::addPerson($person);
    }
    
    /**
     * @return Child_Person  
     */
    function createPerson($values = array()) {
        return parent::createPerson($values);
    }

    

        
    
    /**
     * @return Child_Perk 
     */
    function getPerk($id) {
        return parent::getPerk($id);
    }
    
    /**
     * @return Child_Perk 
     */
    function getPerksItem($id) {
        return parent::getPerksItem($id);
    }
    
    /**
     * @param Child_Perk $perk 
     */
    function addPerk($perk) {
        if (!is_a($perk, 'Child_Perk'))
            trigger_error('$perk must be an instance of Child_Perk', E_USER_ERROR);
        return parent::addPerk($perk);
    }
    
    /**
     * @return Child_Perk  
     */
    function createPerk($values = array()) {
        return parent::createPerk($values);
    }

    

  
    
}

<?php

class Child_Tag_Mapper extends Child_Tag_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Tag_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Tag[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Tag_Base_Mapper extends Sample_Tag_Mapper {

    var $recordClass = 'Child_Tag';

    var $id = 'Child_Tag_Mapper';

    var $storage = 'Child_Tag_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Tag 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Tag_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tag 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Tag 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Tag 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Tag 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Tag 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Tag[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Tag[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Tag     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Tag     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Tag[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Tag[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetRelationPrototypes() {
        return Ac_Util::m(parent::doGetRelationPrototypes(), [
            '_people' => [
                'srcMapperClass' => 'Child_Tag_Mapper',
                'destMapperClass' => 'Child_Person_Mapper',
            ],
            '_perks' => [
                'srcMapperClass' => 'Child_Tag_Mapper',
                'destMapperClass' => 'Child_Perk_Mapper',
            ],
        ]);
        
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Tag',
                'pluralCaption' => 'Tags',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Tag 
     */
    function loadByTagId ($tagId) {
        $res = parent::loadByTagId($tagId);
        return $res;
    }

    /**
     * @return Child_Tag 
     */
    function loadByTitle ($title) {
        $res = parent::loadByTitle($title);
        return $res;
    }
    
}

<?php

class Child_Tag_Storage extends Child_Tag_Base_Storage {
  

}
<?php

class Child_Tag_Base_Storage extends Sample_Tag_Storage {

    var $recordClass = 'Child_Tag'; 
 
 
    
    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
        $res = parent::doGetSqlSelectPrototype($primaryAlias);
        Ac_Util::ms($res, [
                'parts' => [
                    'personIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfTag',
                        'midDestKey' => 'idOfPerson',
                        'tableKey' => 'personId',
                        'midTableAlias' => 'mid__people',
                    ],
                    'perkIds' => [
                        'class' => 'Ac_Sql_Filter_NNCriterion_Simple',
                        'midSrcKey' => 'idOfTag',
                        'midDestKey' => 'idOfPerk',
                        'tableKey' => 'perkId',
                        'midTableAlias' => 'mid__perks',
                    ],
                ],
            ] 
        );
        return $res;
    }
    
}

<?php

class Child_Tree_Adjacent extends Child_Tree_Adjacent_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Tree_Adjacent_Base_Object extends Sample_Tree_Adjacent {

    
    var $_mapperClass = 'Child_Tree_Adjacent_Mapper';
    
    /**
     * @var Child_Tree_Adjacent_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tree_Adjacent_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'id' => [
                'caption' => 'Id',
            ],
            'parentId' => [
                'caption' => 'Parent Id',
            ],
            'ordering' => [
                'caption' => 'Ordering',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'tag' => [
                'caption' => 'Tag',
            ],
        ];
    
        return $pi;
                
    }
    
  
    
}

<?php

class Child_Tree_Adjacent_Mapper extends Child_Tree_Adjacent_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Tree_Adjacent_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Tree_Adjacent[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Tree_Adjacent_Base_Mapper extends Sample_Tree_Adjacent_Mapper {

    var $recordClass = 'Child_Tree_Adjacent';

    var $id = 'Child_Tree_Adjacent_Mapper';

    var $storage = 'Child_Tree_Adjacent_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Tree_Adjacent 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Tree_Adjacent_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tree_Adjacent 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Tree_Adjacent 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Tree_Adjacent 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Tree_Adjacent 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Tree_Adjacent 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Tree_Adjacent[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Tree_Adjacent[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Tree_Adjacent     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Tree_Adjacent     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Tree_Adjacent[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Tree_Adjacent[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    function getDefaultSort() {
        return 'ordering';
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Tree adjacent',
                'pluralCaption' => 'Tree adjacent',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Tree_Adjacent 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }
    
}

<?php

class Child_Tree_Adjacent_Storage extends Child_Tree_Adjacent_Base_Storage {
  

}
<?php

class Child_Tree_Adjacent_Base_Storage extends Sample_Tree_Adjacent_Storage {

    var $recordClass = 'Child_Tree_Adjacent'; 
 
    
}

<?php

class Child_Tree_Combo extends Child_Tree_Combo_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Tree_Combo_Base_Object extends Sample_Tree_Combo {

    
    var $_mapperClass = 'Child_Tree_Combo_Mapper';
    
    /**
     * @var Child_Tree_Combo_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tree_Combo_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'id' => [
                'caption' => 'Id',
            ],
            'leftCol' => [
                'caption' => 'Left Col',
            ],
            'rightCol' => [
                'caption' => 'Right Col',
            ],
            'parentId' => [
                'caption' => 'Parent Id',
            ],
            'ordering' => [
                'caption' => 'Ordering',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'tag' => [
                'caption' => 'Tag',
            ],
            'ignore' => [
                'caption' => 'Ignore',
            ],
            'depth' => [
                'caption' => 'Depth',
            ],
        ];
    
        return $pi;
                
    }
    
  
    
}

<?php

class Child_Tree_Combo_Mapper extends Child_Tree_Combo_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Tree_Combo_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Tree_Combo[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Tree_Combo_Base_Mapper extends Sample_Tree_Combo_Mapper {

    var $recordClass = 'Child_Tree_Combo';

    var $id = 'Child_Tree_Combo_Mapper';

    var $storage = 'Child_Tree_Combo_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Tree_Combo 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Tree_Combo_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tree_Combo 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Tree_Combo 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Tree_Combo 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Tree_Combo 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Tree_Combo 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Tree_Combo[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Tree_Combo[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Tree_Combo     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Tree_Combo     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Tree_Combo[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Tree_Combo[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    function getDefaultSort() {
        return 'ordering';
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Tree combo',
                'pluralCaption' => 'Tree combos',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Tree_Combo 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }
    
}

<?php

class Child_Tree_Combo_Storage extends Child_Tree_Combo_Base_Storage {
  

}
<?php

class Child_Tree_Combo_Base_Storage extends Sample_Tree_Combo_Storage {

    var $recordClass = 'Child_Tree_Combo'; 
 
    
}

<?php

class Child_Tree_Record extends Child_Tree_Record_Base_Object {
    
    /*
    protected function getOwnPropertiesInfo() {
        return Ac_Util::m(parent::getOwnPropertiesInfo(), [
            '' => [
                'caption' => '',
                'dataType' => '',
                'controlType' => '',
            ],
        ]);
    }
    
    protected function listOwnProperties() {
        return array_merge(parent::listOwnProperties(), [
            '', '',
        ]);
    }
    
    protected function listOwnLists() {
        return array_merge(parent::listOwnLists(), [
            '' => '', '' => '',
        ]);
    }
    
    protected function listOwnAssociations() {
        return array_merge(parent::listOwnAssociations(), [
            '' => '', '' => '',
        ]);
    }
    
    */
}

<?php

class Child_Tree_Record_Base_Object extends Sample_Tree_Record {

    
    var $_mapperClass = 'Child_Tree_Record_Mapper';
    
    /**
     * @var Child_Tree_Record_Mapper 
     */
    protected $mapper = false;

    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tree_Record_Mapper 
     */
    function getMapper($mapperClass = false) {
        return parent::getMapper($mapperClass);
    }
    
    
    protected function getOwnPropertiesInfo() {
        static $pi = false; 
        if ($pi === false) $pi = [
            'id' => [
                'caption' => 'Id',
            ],
            'title' => [
                'caption' => 'Title',
            ],
            'tag' => [
                'caption' => 'Tag',
            ],
        ];
    
        return $pi;
                
    }
    
  
    
}

<?php

class Child_Tree_Record_Mapper extends Child_Tree_Record_Base_Mapper {

//    protected function doGetInfoParams() {
//        
//        $res = Ac_Util::m(parent::doGetInfoParams(), [
//            'singleCaption' => '',
//            'pluralCaption' => '',
//      
//            'adminFeatures' => [
//                'Ac_Admin_Feature_Default' => [
//      
//                    'actionSettings' => [
//                        '' => [
//                            'scope' => 'any',
//                            'image' => 'stop_f2.png', 
//                            'disabledImage' => 'stop.png',
//                            'caption' => '',
//                            'description' => '',
//                            'processingPrototype' => [
//                                'class' => 'Ac_Admin_Processing_Method',
//                            ],
//                            'listOnly' => true,
//                        ], 
//                    ],
//                  
//                    'processingSettings' => [
//                        'procName' => [
//                            'class' => 'Ac_Admin_Processing_Method',
//                        ],
//                    ],
//      
//                    'columnSettings' => [
//      
//                        'col1' => [
//                            'class' => '',
//                            'order' => -10,
//                            'title' => '',
//                        ],
//                        
//                    ],
//                  
//                    'formFieldDefaults' => [
//                    ],
//                    
//                    'displayOrderStart' => 0,
//                    
//                    'displayOrderStep' => 10,
//                    
//                    'formSettings' => [
//                        'controls' => [
//                            '' => [
//                            ],
//                        ],
//                    ],
//                  
//                    'filterFormSettings' => [
//                        'controls' => [
//                            'substring' => [
//                                'class' => 'Ac_Form_Control_Text',
//                                'caption' => 'Filter',
//                                'htmlAttribs' => [ 
//                                    'placeholder' => 'Filter',
//                                    'onchange' => 'document.aForm.submit();',
//                                    'size' => 20,
//                                ],
//                                'description' => '',                                
//                            ],
//                        ],
//                    ],
//                    
//                    'sqlSelectSettings' => [
//                        'tables' => [
//                        ],
//                    ],
//                  
//                ],
//            ],
//        ]);
//        return $res;
//    }    
//
//    protected function doGetSqlSelectPrototype($primaryAlias = 't') {
//        return Ac_Util::m(parent::doGetSqlSelectPrototype($primaryAlias), [
//            'parts' => [
//            ],
//        ]);
//    }
//
//    
//    protected function doGetRelationPrototypes() {
//        return Ac_Util::m(parent::doGetRelationPrototypes(), [
//            '' => [
//                'srcMapperClass' => 'Child_Tree_Record_Mapper',
//                'destMapperClass' => '',
//                'fieldLinks' => [],
//                'srcIsUnique' => false,
//                'destIsUnique' => false,
//            ],
//        ]);
//    }
  
    
}
    
<?php
/**
 * @method Child_Tree_Record[] loadFromRows(array $rows, $keysToList = false)
 */
class Child_Tree_Record_Base_Mapper extends Sample_Tree_Record_Mapper {

    var $recordClass = 'Child_Tree_Record';

    var $id = 'Child_Tree_Record_Mapper';

    var $storage = 'Child_Tree_Record_Storage';
    
    /**
     * @var Child 
     */
     protected $application = false;
     
 
 
    /**
     * @return Child_Tree_Record 
     */ 
    static function factory ($className = false,
        $unused1 = null, array $unused2 = [], $unused3 = false, $unused4 = null) {
        trigger_error("Ac_Model_Mapper::factory() is deprecated and will be removed in the future; use ".
            "Ac_Model_Mapper::createRecord() instead", E_USER_DEPRECATED);
        $res = Ac_Model_Mapper::getMapper('Child_Tree_Record_Mapper')->createRecord($className);
        return $res;
    }
    
    /**
     * @return Child 
     */
    function getApplication() {
        return parent::getApplication();
    }
    
    /**
     * @return Child_Tree_Record 
     */ 
    function createRecord ($className = false) {
        $res = parent::createRecord($className);
        return $res;
    }
    
    /**
     * @return Child_Tree_Record 
     */ 
    function reference ($values = []) {
        return parent::reference($values);
    }
    
    /**
     * @return Child_Tree_Record 
     */ 
    function loadRecord ($id) {
        return parent::loadRecord($id);
    }
    
    /**
     * Returns first record in the resultset (returns NULL if there are no records)
     * @return Child_Tree_Record 
     */ 
    function loadFirstRecord($where = '', $order = '', $joins = '', $limitOffset = false, $tableAlias = false) {
        return parent::loadFirstRecord($where, $order, $joins, $limitOffset, $tableAlias);
    }
    
    /**
     * Returns single record in the resultset if it contains only one record
     * (returns NULL if there are no records or there is more than one record)
     * @return Child_Tree_Record 
     */ 
    function loadSingleRecord($where = '', $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadSingleRecord($where, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Loads array of records.
     * 
     * @return Child_Tree_Record[] Records in the same order as in $ids array
     * @param array ids - Array of record identifiers
     * @param bool $keysToList DOES NOT accept customary fields
     */
    function loadRecordsArray(array $ids, $keysToList = false) {
        return parent::loadRecordsArray($ids, $keysToList);
    }

    /**
     * @deprecated Will be removed in 0.4
     * @return Child_Tree_Record[]
     */
    function loadRecordsByCriteria($where = '', $keysToList = false, $order = '', $joins = '', $limitOffset = false, $limitCount = false, $tableAlias = false) {
        return parent::loadRecordsByCriteria($where, $keysToList, $order, $joins, $limitOffset, $limitCount, $tableAlias);
    }
    
    /**
     * Returns first matching record 
     * 
     * @param array $query
     * @param mixed $sort
     * @return Child_Tree_Record     */
    function findFirst (array $query = [], $sort = false) {
        return parent::findFirst($query, $sort);
    }
    
    /**
     * Returns the matching record only when resultset contains one record
     * 
     * @param array $query
     * @return Child_Tree_Record     */
    function findOne (array $query = []) {
        return parent::findOne($query);
    }
    
    /**
     * @param array $query
     * @param mixed $keysToList
     * @param mixed $sort
     * @param int $limit
     * @param int $offset
     * @param bool $forceStorage
     * @return Child_Tree_Record[]
     */
    function find (array $query = [], $keysToList = true, $sort = false, $limit = false, $offset = false, & $remainingQuery = [], & $sorted = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::find($query, $keysToList, $sort, $limit, $offset, $remainingQuery, $sorted);
    }
    
    /**
     * Does partial search.
     * 
     * Objects are always returned by-identifiers.
     * 
     * @return Child_Tree_Record[]
     *
     * @param array $inMemoryRecords - set of in-memory records to search in
     * @param type $areByIdentifiers - whether $inMemoryRecords are already indexed by identifiers
     * @param array $query - the query (set of criteria)
     * @param mixed $sort - how to sort
     * @param int $limit
     * @param int $offset
     * @param bool $canUseStorage - whether to ask storage to find missing items or apply storage-specific criteria first
     * @param array $remainingQuery - return value - critria that Mapper wasn't able to understand (thus they weren't applied)
     * @param bool $sorted - return value - whether the result was sorted according to $sort paramter
     */
    function filter (array $records, array $query = [], $sort = false, $limit = false, $offset = false, & $remainingQuery = true, & $sorted = false, $areByIds = false) {
        if (func_num_args() > 5) $remainingQuery = true;
        return parent::filter($records, $query, $sort, $limit, $offset, $remainingQuery, $sorted, $areByIds);
    }
    

    
    function getTitleFieldName() {
        return 'title';   
    }
    
    protected function doGetInfoParams() {
        return Ac_Util::m( 
            [
                'singleCaption' => 'Tree record',
                'pluralCaption' => 'Tree records',
            ],
            parent::doGetInfoParams()
        );
        
    }
    

    /**
     * @return Child_Tree_Record 
     */
    function loadById ($id) {
        $res = parent::loadById($id);
        return $res;
    }
    
}

<?php

class Child_Tree_Record_Storage extends Child_Tree_Record_Base_Storage {
  

}
<?php

class Child_Tree_Record_Base_Storage extends Sample_Tree_Record_Storage {

    var $recordClass = 'Child_Tree_Record'; 
 
    
}

